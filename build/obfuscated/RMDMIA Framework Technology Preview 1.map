com.trinity.ea.util.EAProperties -> com.trinity.ea.util.EAProperties:
    java.io.ByteArrayOutputStream baos -> a
    java.io.ByteArrayInputStream bais -> b
    java.lang.String str -> str
    java.lang.String comment -> comment
    byte[] buf -> buf
    java.lang.String defaultEncoding -> c
    boolean overrideEncoding -> d
    79:123:void load(java.io.InputStream) -> load
    127:225:int store(java.io.OutputStream) -> store
    231:233:void setEncoding(java.lang.String) -> setEncoding
    237:237:java.lang.String getEncoding() -> getEncoding
    243:245:void setDefaultEncoding() -> setDefaultEncoding
com.trinity.ea.util.PropertiesAccessor -> com.trinity.ea.util.PropertiesAccessor:
    boolean writeFile() -> writeFile
    boolean readPropertiesFile() -> readPropertiesFile
    boolean put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    boolean remove(java.lang.String) -> remove
    com.trinity.ea.util.EAProperties getProperties() -> getProperties
com.trinity.ea.util.SortedEAProperties -> com.trinity.ea.util.SortedEAProperties:
    java.io.ByteArrayOutputStream baos -> baos
    java.io.ByteArrayInputStream bais -> bais
    java.lang.String str -> str
    java.lang.String comment -> comment
    byte[] buf -> buf
    java.lang.String defaultEncoding -> a
    boolean overrideEncoding -> b
    81:125:void load(java.io.InputStream) -> load
    129:227:int store(java.io.OutputStream) -> store
    233:235:void setEncoding(java.lang.String) -> setEncoding
    239:239:java.lang.String getEncoding() -> getEncoding
    245:247:void setDefaultEncoding() -> setDefaultEncoding
org.happy.artist.rmdmia.Controller -> org.happy.artist.rmdmia.Controller:
    org.happy.artist.rmdmia.rcsm.RCSMManager rcsm -> a
    org.happy.artist.rmdmia.roci.ROCIManager roci -> b
    org.happy.artist.rmdmia.perception.engine.PEManager pe -> c
    org.happy.artist.rmdmia.instruction.InstructionManager im -> d
    org.happy.artist.rmdmia.decision.manager.DecisionManager dm -> e
    org.happy.artist.rmdmia.gesture.manager.GestureManager gm -> f
    org.happy.artist.rmdmia.task.manager.TaskManager tm -> g
    org.happy.artist.rmdmia.mission.manager.MissionManager mm -> h
    org.happy.artist.rmdmia.ControllerManager controllerManager -> i
    int controller_id -> controller_id
    101:101:org.happy.artist.rmdmia.rcsm.RCSMManager getRCSM() -> getRCSM
    110:110:org.happy.artist.rmdmia.roci.ROCIManager getROCI() -> getROCI
    119:119:org.happy.artist.rmdmia.perception.engine.PEManager getPE() -> getPE
    128:128:org.happy.artist.rmdmia.ControllerManager getControllerManager() -> getControllerManager
    138:138:org.happy.artist.rmdmia.gesture.manager.GestureManager getGestureManager() -> getGestureManager
    147:147:org.happy.artist.rmdmia.decision.manager.DecisionManager getDecisionManager() -> getDecisionManager
    156:156:org.happy.artist.rmdmia.mission.manager.MissionManager getMissionManager() -> getMissionManager
    165:165:org.happy.artist.rmdmia.task.manager.TaskManager getTaskManager() -> getTaskManager
    174:174:org.happy.artist.rmdmia.instruction.InstructionManager getInstructionManager() -> getInstructionManager
org.happy.artist.rmdmia.ControllerManager -> org.happy.artist.rmdmia.ControllerManager:
    org.happy.artist.rmdmia.Controller controller -> a
    org.happy.artist.rmdmia.timing.TimerService timerService -> b
    java.lang.String JAVA_RUNTIME -> c
    boolean IS_ANDROID -> IS_ANDROID
    java.lang.Class[] parameters -> d
    java.util.logging.Logger logger -> e
    int spc_count -> f
    java.lang.String spcs -> g
    java.util.List listOfFiles -> h
    java.io.File[] files -> i
    java.io.InputStream is -> j
    java.util.zip.ZipInputStream zis -> k
    java.util.zip.ZipEntry zipentry -> l
    byte[] buf -> m
    java.lang.String entryName -> n
    int n -> o
    java.io.File newFile -> p
    java.io.FileOutputStream fos -> q
    java.util.Properties plugin_properties -> r
    int pos -> s
    int currentID -> t
    java.lang.String[] keyArray -> u
    java.lang.Object[] outNames -> v
    int arrayLength -> w
    java.lang.String name -> x
    java.lang.String currentKey -> y
    java.lang.String[] classes -> z
    java.lang.String[] names -> A
    double[] versions -> B
    boolean[] enabled -> C
    java.lang.String[] properties_classes -> D
    java.lang.String[] properties_names -> E
    double[] properties_versions -> F
    boolean[] properties_enabled -> G
    boolean[] isSameArray -> H
    android.content.Context context -> context
    java.lang.String timer -> timer
    185:185:org.happy.artist.rmdmia.Controller getController() -> getController
    194:194:org.happy.artist.rmdmia.timing.TimerService getTimerService() -> getTimerService
    208:215:void setTimerInterval(long,long,java.util.concurrent.TimeUnit) -> setTimerInterval
    220:222:void shutdown() -> shutdown
    232:242:void addProvider(java.io.File) -> addProvider
    251:270:void addProvider(java.net.URL) -> addProvider
    277:311:java.io.File[] getProviderFiles(java.io.File,boolean) -> getProviderFiles
    317:601:void extractProviderConfiguration(java.io.File,java.io.File,java.lang.String,com.trinity.ea.util.PropertiesAccessor) -> extractProviderConfiguration
    615:634:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.configuration.InitializationProperties -> org.happy.artist.rmdmia.configuration.InitializationProperties:
    int GESTURE_POOL_SIZE -> GESTURE_POOL_SIZE
    int ROS_MESSAGE_POOL_SIZE -> ROS_MESSAGE_POOL_SIZE
    java.lang.String HOSTNAME -> HOSTNAME
    java.lang.String ROS_MASTER_URL -> ROS_MASTER_URL
    java.lang.String CALLER_ID -> CALLER_ID
org.happy.artist.rmdmia.decision.manager.DecisionManager -> org.happy.artist.rmdmia.decision.manager.DecisionManager:
    org.happy.artist.rmdmia.decision.manager.DecisionManagerProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider provider_to_enable -> D
    int current_dm_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    240:466:void initialize() -> initialize
    475:475:java.lang.String[] getProviderNames() -> getProviderNames
    485:485:double[] getProviderVersions() -> getProviderVersions
    495:495:java.lang.String[] getProviderClasses() -> getProviderClasses
    505:505:boolean[] getProviderEnabled() -> getProviderEnabled
    514:514:org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider[] getProviders() -> getProviders
    523:523:org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider getProvider(int) -> getProvider
    532:545:org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider getProviderByName(java.lang.String) -> getProviderByName
    581:616:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    624:648:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.decision.manager.DecisionManagerException -> org.happy.artist.rmdmia.decision.manager.DecisionManagerException:
org.happy.artist.rmdmia.decision.manager.DecisionManagerInterface -> org.happy.artist.rmdmia.decision.manager.DecisionManagerInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.decision.manager.DecisionManagerProperties -> org.happy.artist.rmdmia.decision.manager.DecisionManagerProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strPropertiesFileName -> b
    org.happy.artist.rmdmia.decision.manager.DecisionManagerProperties decisionManagerRegistry -> c
    59:63:org.happy.artist.rmdmia.decision.manager.DecisionManagerProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    167:167:java.lang.String getFileName() -> getFileName
    180:185:boolean put(java.lang.String,java.lang.String) -> put
    198:202:java.lang.String get(java.lang.String) -> get
    215:220:boolean remove(java.lang.String) -> remove
    230:230:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider -> org.happy.artist.rmdmia.decision.manager.DecisionManagerProvider:
    int dmID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    42:42:int getID() -> getID
    50:51:void setID(int) -> setID
    61:62:void setController(org.happy.artist.rmdmia.Controller) -> setController
    71:71:org.happy.artist.rmdmia.Controller getController() -> getController
    87:88:void setProperties(java.util.Properties) -> setProperties
    97:97:java.util.Properties getProperties() -> getProperties
    106:107:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    115:115:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    122:122:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.gesture.manager.GestureManager -> org.happy.artist.rmdmia.gesture.manager.GestureManager:
    org.happy.artist.rmdmia.gesture.manager.GestureManagerProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider provider_to_enable -> D
    int current_gm_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    240:466:void initialize() -> initialize
    475:475:java.lang.String[] getProviderNames() -> getProviderNames
    485:485:double[] getProviderVersions() -> getProviderVersions
    495:495:java.lang.String[] getProviderClasses() -> getProviderClasses
    505:505:boolean[] getProviderEnabled() -> getProviderEnabled
    514:514:org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider[] getProviders() -> getProviders
    523:523:org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider getProvider(int) -> getProvider
    532:545:org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider getProviderByName(java.lang.String) -> getProviderByName
    581:616:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    624:648:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.gesture.manager.GestureManagerException -> org.happy.artist.rmdmia.gesture.manager.GestureManagerException:
org.happy.artist.rmdmia.gesture.manager.GestureManagerInterface -> org.happy.artist.rmdmia.gesture.manager.GestureManagerInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    void setMovementProcessorManager(org.happy.artist.rmdmia.movement.MovementProcessorManager) -> setMovementProcessorManager
    org.happy.artist.rmdmia.movement.MovementProcessorManager getMovementProcessorManager() -> getMovementProcessorManager
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.gesture.manager.GestureManagerProperties -> org.happy.artist.rmdmia.gesture.manager.GestureManagerProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strPropertiesFileName -> b
    org.happy.artist.rmdmia.gesture.manager.GestureManagerProperties gestureManagerRegistry -> c
    59:63:org.happy.artist.rmdmia.gesture.manager.GestureManagerProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    167:167:java.lang.String getFileName() -> getFileName
    180:185:boolean put(java.lang.String,java.lang.String) -> put
    198:202:java.lang.String get(java.lang.String) -> get
    215:220:boolean remove(java.lang.String) -> remove
    230:230:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider -> org.happy.artist.rmdmia.gesture.manager.GestureManagerProvider:
    int gmID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    org.happy.artist.rmdmia.movement.MovementProcessorManager movementProcessorManager -> e
    45:45:int getID() -> getID
    53:54:void setID(int) -> setID
    64:65:void setController(org.happy.artist.rmdmia.Controller) -> setController
    74:74:org.happy.artist.rmdmia.Controller getController() -> getController
    90:91:void setProperties(java.util.Properties) -> setProperties
    100:100:java.util.Properties getProperties() -> getProperties
    109:110:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    118:118:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    127:128:void setMovementProcessorManager(org.happy.artist.rmdmia.movement.MovementProcessorManager) -> setMovementProcessorManager
    136:136:org.happy.artist.rmdmia.movement.MovementProcessorManager getMovementProcessorManager() -> getMovementProcessorManager
    143:143:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.gestures.DummyGestureFactory -> org.happy.artist.rmdmia.gestures.DummyGestureFactory:
    15:15:org.happy.artist.rmdmia.gestures.Gesture newGesture() -> newGesture
org.happy.artist.rmdmia.gestures.Gesture -> org.happy.artist.rmdmia.gestures.Gesture:
    int gestureID -> gestureID
    22:22:void recycle() -> recycle
org.happy.artist.rmdmia.gestures.GestureFactory -> org.happy.artist.rmdmia.gestures.GestureFactory:
    org.happy.artist.rmdmia.gestures.Gesture newGesture() -> newGesture
org.happy.artist.rmdmia.gestures.GestureImpl -> org.happy.artist.rmdmia.gestures.GestureImpl:
    14:14:void recycle() -> recycle
org.happy.artist.rmdmia.gestures.GestureManager -> org.happy.artist.rmdmia.gestures.GestureManager:
    82:82:void add() -> add
    87:87:void remove() -> remove
    92:92:void hold() -> hold
    98:98:void continues() -> continues
    103:103:void start() -> start
    109:109:void stop() -> stop
    114:114:void recycle() -> recycle
org.happy.artist.rmdmia.gestures.GesturePool -> org.happy.artist.rmdmia.gestures.GesturePool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.gestures.Gesture[] gestureArray -> b
    int checkoutCount -> c
    68:85:org.happy.artist.rmdmia.gestures.Gesture checkout() -> checkout
    94:96:void checkin(int) -> checkin
org.happy.artist.rmdmia.gestures.GestureRegistry -> org.happy.artist.rmdmia.gestures.GestureRegistry:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.gestures.GestureRegistry gestureRegistry -> c
    51:55:org.happy.artist.rmdmia.gestures.GestureRegistry getInstance() -> getInstance
    63:102:boolean writeFile() -> writeFile
    111:133:boolean readPropertiesFile() -> readPropertiesFile
    140:141:void setFileName(java.lang.String) -> setFileName
    146:146:java.lang.String getFileName() -> getFileName
    153:158:boolean put(java.lang.String,java.lang.String) -> put
    166:170:java.lang.String get(java.lang.String) -> get
    178:183:boolean remove(java.lang.String) -> remove
    189:189:com.trinity.ea.util.EAProperties getProperties() -> getProperties
    195:196:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.gui.AboutBoxDialog -> org.happy.artist.rmdmia.gui.AboutBoxDialog:
    javax.swing.JPanel AboutBoxButtonPanel -> AboutBoxButtonPanel
    javax.swing.JPanel AboutBoxContentPanel -> AboutBoxContentPanel
    javax.swing.JButton AboutBoxOKButton -> AboutBoxOKButton
    javax.swing.JPanel CenterPanel -> CenterPanel
    javax.swing.JTextArea copyrightText -> copyrightText
    javax.swing.JLabel jLabel1 -> jLabel1
    javax.swing.JLabel jLabel2 -> jLabel2
    javax.swing.JLabel lSplashImage -> lSplashImage
    19:19:void access$000(org.happy.artist.rmdmia.gui.AboutBoxDialog,java.awt.event.WindowEvent) -> access$000
    19:19:void access$100(org.happy.artist.rmdmia.gui.AboutBoxDialog,java.awt.event.ActionEvent) -> access$100
org.happy.artist.rmdmia.gui.AboutBoxDialog$1 -> org.happy.artist.rmdmia.gui.a:
    org.happy.artist.rmdmia.gui.AboutBoxDialog this$0 -> a
    61:62:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.gui.AboutBoxDialog$2 -> org.happy.artist.rmdmia.gui.b:
    org.happy.artist.rmdmia.gui.AboutBoxDialog this$0 -> a
    83:84:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor -> org.happy.artist.rmdmia.gui.ConnectionMonitor:
    javax.swing.JTable table -> table
    javax.swing.table.DefaultTableModel tableModel -> tableModel
    javax.swing.JTextField txtField1 -> txtField1
    javax.swing.JTextField txtField2 -> txtField2
    java.lang.Boolean TRUE -> a
    java.lang.Boolean FALSE -> b
    javax.swing.JButton btnConnect -> btnConnect
    javax.swing.JButton btnRefresh -> btnRefresh
    javax.swing.JButton btnSteps -> btnSteps
    javax.swing.JButton btnAddTopic -> btnAddTopic
    javax.swing.JButton btnAddService -> btnAddService
    javax.swing.JLabel lblMasterURI -> lblMasterURI
    javax.swing.JTextField txtMasterURI -> txtMasterURI
    javax.swing.JMenuBar menu -> menu
    javax.swing.JMenu mnuFile -> mnuFile
    javax.swing.JMenu mnuHelp -> mnuHelp
    javax.swing.JMenuItem mnuItemSave -> mnuItemSave
    javax.swing.JMenuItem mnuItemClose -> mnuItemClose
    javax.swing.JMenuItem mnuItemExit -> mnuItemExit
    javax.swing.JMenuItem mnuItemHelpAbout -> mnuItemHelpAbout
    javax.swing.JMenu mnuTools -> mnuTools
    java.lang.StringBuffer document -> document
    java.lang.String md5Script -> md5Script
    java.lang.String serviceTypesScript -> serviceTypesScript
    java.io.FileWriter fw -> fw
    javax.swing.JFileChooser chooser -> chooser
    java.io.File file -> file
    java.io.File fileOpen -> fileOpen
    int returnVal -> returnVal
    java.io.BufferedReader br -> br
    java.lang.StringBuffer sb -> sb
    java.lang.String line -> line
    java.lang.String[] lines -> lines
    java.util.Map serviceTypesMap -> serviceTypesMap
    java.util.Map md5Map -> md5Map
    java.util.Map MD5s -> MD5s
    java.lang.String currentMD5 -> currentMD5
    javax.swing.JMenuItem mnuItemMakeMD5Script -> mnuItemMakeMD5Script
    javax.swing.JMenuItem mnuItemMakeServiceTypesScript -> mnuItemMakeServiceTypesScript
    javax.swing.JMenuItem mnuItemImportServiceTypes -> mnuItemImportServiceTypes
    javax.swing.JMenuItem mnuItemImportMD5 -> mnuItemImportMD5
    javax.swing.JMenuItem mnuItemHowtoConfigure -> mnuItemHowtoConfigure
    javax.swing.table.TableColumn column -> column
    org.happy.artist.rmdmia.gui.AboutBoxDialog about -> about
    java.lang.String caller_id -> caller_id
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> smm
    java.lang.Object[][] data -> data
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> rosNode
    java.util.Properties properties -> properties
    java.lang.String propertiesFilePath -> propertiesFilePath
    java.lang.String master_uri -> master_uri
    int insertCount -> insertCount
    int insertCount2 -> insertCount2
    java.lang.Object[][] insertArray -> insertArray
    int insertCount3 -> insertCount3
    java.lang.String[] insertColArray -> insertColArray
    java.lang.Object[] tableHeader -> tableHeader
    int rowCount -> rowCount
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> trmd
    java.net.URL imageURL -> imageURL
    java.lang.Object[] saveData -> saveData
    javax.swing.table.DefaultTableModel dtm -> dtm
    java.lang.Object[][] tableData -> tableData
    int nRow -> nRow
    int nCol -> nCol
    org.happy.artist.rmdmia.gui.InformationDialog information -> information
    java.lang.String documentText -> documentText
    java.lang.String currentService -> currentService
    java.lang.String currentServiceType -> currentServiceType
    java.util.Map serviceTypes -> serviceTypes
    java.lang.Object[] tableColumnNames -> tableColumnNames
    javax.swing.ImageIcon todoIcon -> todoIcon
    javax.swing.ImageIcon connectedIcon -> connectedIcon
    javax.swing.ImageIcon notConnectedIcon -> notConnectedIcon
    javax.swing.ImageIcon subConnectedIcon -> subConnectedIcon
    javax.swing.ImageIcon pubConnectedIcon -> pubConnectedIcon
    javax.swing.ImageIcon subDisconnectedIcon -> subDisconnectedIcon
    javax.swing.ImageIcon pubDisconnectedIcon -> pubDisconnectedIcon
    javax.swing.ImageIcon pubSubConnectedIcon -> pubSubConnectedIcon
    javax.swing.ImageIcon pubSubNotConnectedIcon -> pubSubNotConnectedIcon
    javax.swing.ImageIcon pubConnectedSubNotConnectedIcon -> pubConnectedSubNotConnectedIcon
    javax.swing.ImageIcon pubNotConnectedSubConnectedIcon -> pubNotConnectedSubConnectedIcon
    javax.swing.ImageIcon[] statusIcons -> statusIcons
    java.lang.String[] topicSubscriberAPIs -> topicSubscriberAPIs
    java.lang.String[] topicPublisherURLs -> topicPublisherURLs
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] subscriberProviders -> subscriberProviders
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] publisherProviders -> publisherProviders
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] serviceProviders -> serviceProviders
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface subscriberProvider -> subscriberProvider
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface publisherProvider -> publisherProvider
    java.lang.String md5Ref -> md5Ref
    int imageCount -> imageCount
    int subscriberProvidersLength -> subscriberProvidersLength
    boolean subscriber_is_todo -> subscriber_is_todo
    boolean publisher_is_todo -> publisher_is_todo
    boolean subscriber_is_connected -> subscriber_is_connected
    boolean publisher_is_connected -> publisher_is_connected
    boolean subscriber_is_registered -> subscriber_is_registered
    boolean publisher_is_registered -> publisher_is_registered
    int columns -> columns
    int rows -> rows
    java.lang.Object[] columnData -> columnData
    203:215:java.lang.Object[][] getInsertColumnInDataArray(java.lang.Object[][]) -> a
    222:230:java.lang.String[] getInsertColumnInHeaderDataArray(java.lang.Object[]) -> a
    236:237:void setTableHeaders(java.lang.String[]) -> setTableHeaders
    241:241:java.lang.Object[] getTableHeaders() -> getTableHeaders
    247:249:void addRow(java.lang.Object[]) -> addRow
    253:254:void addData(java.lang.Object[][],java.lang.Object[]) -> addData
    259:259:javax.swing.table.TableModel getTableModel() -> getTableModel
    267:880:void initialize(java.lang.Object[][],java.lang.Object[]) -> initialize
    886:893:javax.swing.ImageIcon getImageIcon(java.lang.String,java.lang.String) -> a
    1049:1049:void main(java.lang.String[]) -> main
    1074:1081:java.lang.Object[][] getTableData(javax.swing.JTable) -> getTableData
    1270:1296:java.lang.String openTextFile() -> a
    1302:1346:void saveStringToFile(java.lang.String) -> a
    1683:1975:javax.swing.ImageIcon[] getConnectionStatusImages() -> b
    1980:1984:void updateStatusIcons() -> c
    1991:1999:java.lang.Object[][] getUpdateStatusColumn(java.lang.Object[][],javax.swing.ImageIcon[]) -> a
    47:47:void access$000(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$000
    47:47:void access$100(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$100
    47:47:void access$200(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$200
    47:47:void access$300(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$300
    47:47:void access$400(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$400
    47:47:void access$500(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$500
    47:47:void access$600(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$600
    47:47:void access$700(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$700
    47:47:void access$800(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$800
    47:47:void access$900(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$900
    47:47:void access$1000(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$1000
    47:47:void access$1100(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$1100
    47:47:void access$1200(org.happy.artist.rmdmia.gui.ConnectionMonitor,java.awt.event.ActionEvent) -> access$1200
org.happy.artist.rmdmia.gui.ConnectionMonitor$1 -> org.happy.artist.rmdmia.gui.c:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    132:137:void run() -> run
org.happy.artist.rmdmia.gui.ConnectionMonitor$10 -> org.happy.artist.rmdmia.gui.d:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    427:428:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$11 -> org.happy.artist.rmdmia.gui.e:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    436:437:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$12 -> org.happy.artist.rmdmia.gui.f:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    445:446:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$13 -> org.happy.artist.rmdmia.gui.g:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    454:455:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$14 -> org.happy.artist.rmdmia.gui.h:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    469:470:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$15 -> org.happy.artist.rmdmia.gui.i:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    484:485:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$16 -> org.happy.artist.rmdmia.gui.j:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    494:495:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$17 -> org.happy.artist.rmdmia.gui.k:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    504:505:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$18 -> org.happy.artist.rmdmia.gui.l:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    514:515:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$19 -> org.happy.artist.rmdmia.gui.ConnectionMonitor$19:
    java.lang.Class[] types -> types
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> this$0
    700:700:java.lang.Class getColumnClass(int) -> getColumnClass
org.happy.artist.rmdmia.gui.ConnectionMonitor$2 -> org.happy.artist.rmdmia.gui.m:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    188:193:void run() -> run
org.happy.artist.rmdmia.gui.ConnectionMonitor$3 -> org.happy.artist.rmdmia.gui.ConnectionMonitor$3:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> this$0
    278:296:java.lang.String getToolTipText(java.awt.event.MouseEvent) -> getToolTipText
org.happy.artist.rmdmia.gui.ConnectionMonitor$4 -> org.happy.artist.rmdmia.gui.n:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    342:343:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$5 -> org.happy.artist.rmdmia.gui.o:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    354:355:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$6 -> org.happy.artist.rmdmia.gui.p:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    364:365:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$7 -> org.happy.artist.rmdmia.gui.q:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    392:393:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$8 -> org.happy.artist.rmdmia.gui.r:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    402:403:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$9 -> org.happy.artist.rmdmia.gui.s:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> a
    415:416:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.ConnectionMonitor$ImageTooltipCellRenderer -> org.happy.artist.rmdmia.gui.ConnectionMonitor$ImageTooltipCellRenderer:
    org.happy.artist.rmdmia.gui.ConnectionMonitor this$0 -> this$0
    2010:2024:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
org.happy.artist.rmdmia.gui.InformationDialog -> org.happy.artist.rmdmia.gui.InformationDialog:
    int windowWidth -> windowWidth
    int windowHeight -> windowHeight
    javax.swing.ImageIcon btnFace -> btnFace
    javax.swing.ImageIcon btnFaceOnClick -> btnFaceOnClick
    javax.swing.ImageIcon btnFaceInFocus -> btnFaceInFocus
    int btnWidth -> btnWidth
    int btnHeight -> btnHeight
    boolean isImageButton -> isImageButton
    java.awt.Color extBorderColor -> extBorderColor
    java.awt.Color highlightBorderColor1 -> highlightBorderColor1
    java.awt.Color highlightBorderColor2 -> highlightBorderColor2
    java.awt.Color shadowBorderColor1 -> shadowBorderColor1
    java.awt.Color shadowBorderColor2 -> shadowBorderColor2
    boolean armed -> armed
    javax.swing.JPanel NorthPanel -> NorthPanel
    javax.swing.JPanel WestPanel -> WestPanel
    javax.swing.JPanel EastPanel -> EastPanel
    javax.swing.JPanel OKPanel -> OKPanel
    javax.swing.JTextArea Policy -> Policy
    javax.swing.JScrollPane InformationDialogScrollPane -> InformationDialogScrollPane
    javax.swing.JButton btnOK -> btnOK
    javax.swing.JLabel jLabel1 -> jLabel1
    javax.swing.JLabel jLabel2 -> jLabel2
    87:107:int getVerticalInsetAdjustment(int,int) -> a
    115:135:int getHorizontalInsetAdjustment(int,int) -> b
    256:262:void setButtonTextColor(java.awt.Color) -> setButtonTextColor
    268:281:void setBackgroundColor(java.awt.Color) -> setBackgroundColor
    300:303:void paint(java.awt.Graphics) -> paint
    307:333:void setKeyManager() -> setKeyManager
    46:46:void access$000(org.happy.artist.rmdmia.gui.InformationDialog,java.awt.event.WindowEvent) -> access$000
    46:46:void access$100(org.happy.artist.rmdmia.gui.InformationDialog,java.awt.event.ActionEvent) -> access$100
    46:46:boolean access$202(org.happy.artist.rmdmia.gui.InformationDialog,boolean) -> access$202
    46:46:boolean access$200(org.happy.artist.rmdmia.gui.InformationDialog) -> access$200
org.happy.artist.rmdmia.gui.InformationDialog$1 -> org.happy.artist.rmdmia.gui.t:
    org.happy.artist.rmdmia.gui.InformationDialog this$0 -> a
    177:178:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.gui.InformationDialog$2 -> org.happy.artist.rmdmia.gui.u:
    org.happy.artist.rmdmia.gui.InformationDialog this$0 -> a
    186:187:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.InformationDialog$3 -> org.happy.artist.rmdmia.gui.v:
    org.happy.artist.rmdmia.gui.InformationDialog this$0 -> a
    312:329:boolean dispatchKeyEvent(java.awt.event.KeyEvent) -> dispatchKeyEvent
org.happy.artist.rmdmia.gui.TunerPanel -> org.happy.artist.rmdmia.gui.TunerPanel:
    javax.swing.JButton btnHideTuner -> btnHideTuner
    javax.swing.JButton btnSaveTuner -> btnSaveTuner
    javax.swing.JButton btnStartTuner -> btnStartTuner
    javax.swing.JButton btnStopTuner -> btnStopTuner
    javax.swing.JButton btnUpdateConfiguration -> btnUpdateConfiguration
    javax.swing.JPanel panelHeader -> panelHeader
    javax.swing.JPanel panelTunerControl -> panelTunerControl
    javax.swing.JScrollPane scrollPaneTuner -> scrollPaneTuner
    javax.swing.JSplitPane splitPaneTuner -> splitPaneTuner
    javax.swing.JTextArea taOverview -> taOverview
    javax.swing.JTable tblTuner -> tblTuner
    11:11:void access$000(org.happy.artist.rmdmia.gui.TunerPanel,java.awt.event.ActionEvent) -> access$000
    11:11:void access$100(org.happy.artist.rmdmia.gui.TunerPanel,java.awt.event.ActionEvent) -> access$100
    11:11:void access$200(org.happy.artist.rmdmia.gui.TunerPanel,java.awt.event.ActionEvent) -> access$200
    11:11:void access$300(org.happy.artist.rmdmia.gui.TunerPanel,java.awt.event.ActionEvent) -> access$300
    11:11:void access$400(org.happy.artist.rmdmia.gui.TunerPanel,java.awt.event.ActionEvent) -> access$400
org.happy.artist.rmdmia.gui.TunerPanel$1 -> org.happy.artist.rmdmia.gui.w:
    org.happy.artist.rmdmia.gui.TunerPanel this$0 -> a
    78:79:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.TunerPanel$2 -> org.happy.artist.rmdmia.gui.x:
    org.happy.artist.rmdmia.gui.TunerPanel this$0 -> a
    88:89:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.TunerPanel$3 -> org.happy.artist.rmdmia.gui.y:
    org.happy.artist.rmdmia.gui.TunerPanel this$0 -> a
    98:99:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.TunerPanel$4 -> org.happy.artist.rmdmia.gui.z:
    org.happy.artist.rmdmia.gui.TunerPanel this$0 -> a
    108:109:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.gui.TunerPanel$5 -> org.happy.artist.rmdmia.gui.A:
    org.happy.artist.rmdmia.gui.TunerPanel this$0 -> a
    118:119:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.instruction.Instruction -> org.happy.artist.rmdmia.instruction.Instruction:
    int hid -> hid
    int eid -> eid
    int in_use -> in_use
    int length() -> length
org.happy.artist.rmdmia.instruction.InstructionDefinition -> org.happy.artist.rmdmia.instruction.InstructionDefinition:
    int hid -> hid
    java.lang.String provider_name -> provider_name
    java.lang.String provider_version -> provider_version
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String instruction_class_name -> instruction_class_name
    java.lang.String instruction_object_pool_class_name -> instruction_object_pool_class_name
    java.lang.String instruction_input_handler_class_name -> instruction_input_handler_class_name
    java.lang.String instruction_output_handler_class_name -> instruction_output_handler_class_name
    java.lang.String schema -> schema
    boolean schema_is_fixed_length -> schema_is_fixed_length
    int maximum_schema_bytes_size -> maximum_schema_bytes_size
    39:39:int getHID() -> getHID
    45:45:java.lang.String getName() -> getName
    51:52:void setName(java.lang.String) -> setName
    59:59:java.lang.String getDescription() -> getDescription
    65:66:void setDescription(java.lang.String) -> setDescription
    71:72:void setInstructionObjectClassName(java.lang.String) -> setInstructionObjectClassName
    77:78:void setInstructionObjectPoolClassName(java.lang.String) -> setInstructionObjectPoolClassName
    83:84:void setInstructionInputHandlerClassName(java.lang.String) -> setInstructionInputHandlerClassName
    89:90:void setInstructionOutputHandlerClassName(java.lang.String) -> setInstructionOutputHandlerClassName
    95:95:java.lang.String getInstructionObjectClassName() -> getInstructionObjectClassName
    101:101:java.lang.String getInstructionObjectPoolClassName() -> getInstructionObjectPoolClassName
    107:107:java.lang.String getInstructionInputHandlerClassName() -> getInstructionInputHandlerClassName
    113:113:java.lang.String getInstructionOutputHandlerClassName() -> getInstructionOutputHandlerClassName
    119:120:void setSchemaIsFixedLength(boolean) -> setSchemaIsFixedLength
    125:125:boolean getSchemaIsFixedLength() -> getSchemaIsFixedLength
    131:132:void setSchemaTypeMessageLength(int) -> setSchemaTypeMessageLength
    137:137:int getSchemaTypeMessageLength() -> getSchemaTypeMessageLength
    143:144:void setSchema(java.lang.String) -> setSchema
    149:149:java.lang.String getSchema() -> getSchema
    java.util.List getSource() -> getSource
    void addDynamicSourceCodeObject(org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$DynamicSourceCodeObject) -> addDynamicSourceCodeObject
    org.happy.artist.rmdmia.instruction.Instruction getInstructionObject() -> getInstructionObject
    org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool getInstructionObjectPool() -> getInstructionObjectPool
    org.happy.artist.rmdmia.instruction.InstructionInputHandler getInstructionInputHandler() -> getInstructionInputHandler
    org.happy.artist.rmdmia.instruction.InstructionOutputHandler getInstructionOutputHandler() -> getInstructionOutputHandler
    java.lang.String[] getSchemaFileExtensions() -> getSchemaFileExtensions
    org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder getRunnableInstructionBuilder() -> getRunnableInstructionBuilder
org.happy.artist.rmdmia.instruction.InstructionHandler -> org.happy.artist.rmdmia.instruction.InstructionHandler:
    void process(org.happy.artist.rmdmia.instruction.Instruction) -> process
org.happy.artist.rmdmia.instruction.InstructionInputHandler -> org.happy.artist.rmdmia.instruction.InstructionInputHandler:
    org.happy.artist.rmdmia.instruction.Instruction transform(byte[]) -> transform
    void registerInstructionHandler(org.happy.artist.rmdmia.instruction.InstructionHandler) -> registerInstructionHandler
    boolean isRegistered() -> isRegistered
    org.happy.artist.rmdmia.instruction.InstructionHandler getRegisteredInstructionHandler() -> getRegisteredInstructionHandler
    org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool getInstructionObjectPool() -> getInstructionObjectPool
org.happy.artist.rmdmia.instruction.InstructionManager -> org.happy.artist.rmdmia.instruction.InstructionManager:
    org.happy.artist.rmdmia.instruction.InstructionManagerProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String schemaFolderPath -> d
    java.lang.String classFolderPath -> e
    java.io.File schemaDirectory -> f
    java.io.File classDirectory -> g
    java.lang.String pluginPropertiesFolderPath -> h
    java.lang.String[] classes -> i
    java.lang.String[] names -> j
    double[] versions -> k
    org.happy.artist.rmdmia.instruction.InstructionManagerProvider[] providers -> l
    boolean[] enabled -> m
    java.lang.String provider_properties_file_name -> n
    java.util.Properties prop -> o
    java.lang.String pluginsFolderPath -> p
    java.io.File[] files -> q
    int pos -> r
    int currentID -> s
    int arrayLength -> t
    java.lang.String currentKey -> u
    java.lang.String name -> v
    java.lang.Object[] outNames -> w
    java.lang.String[] keyArray -> x
    java.io.File rootConfigurationDirectory -> y
    java.util.logging.Logger logger -> z
    org.happy.artist.rmdmia.Controller controller -> A
    int providerCount -> B
    java.io.FileOutputStream fos -> C
    java.io.InputStream in -> D
    byte[] buffer -> E
    int len -> F
    java.io.File confDir -> G
    org.happy.artist.rmdmia.instruction.InstructionManagerProvider provider_to_enable -> H
    int current_im_id -> I
    int postInitLoopCount -> J
    boolean providers_defined -> K
    boolean isInitialized -> L
    java.util.Map messageMap -> M
    java.util.Map classMap -> N
    259:592:void initialize() -> initialize
    597:597:java.lang.String getSchemaFolderPath() -> getSchemaFolderPath
    603:603:java.lang.String getClassFolderPath() -> getClassFolderPath
    613:613:java.lang.String[] getProviderNames() -> getProviderNames
    623:623:double[] getProviderVersions() -> getProviderVersions
    633:633:java.lang.String[] getProviderClasses() -> getProviderClasses
    643:643:boolean[] getProviderEnabled() -> getProviderEnabled
    652:652:org.happy.artist.rmdmia.instruction.InstructionManagerProvider[] getProviders() -> getProviders
    661:661:org.happy.artist.rmdmia.instruction.InstructionManagerProvider getProvider(int) -> getProvider
    670:683:org.happy.artist.rmdmia.instruction.InstructionManagerProvider getProviderByName(java.lang.String) -> getProviderByName
    719:754:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    764:764:boolean isInitialized() -> isInitialized
    772:796:void onInitialized() -> onInitialized
    804:804:java.util.Map getSchemaLookupMap() -> getSchemaLookupMap
    810:810:java.util.Map getClassLookupMap() -> getClassLookupMap
    818:885:void updateSchemaMap(java.lang.String) -> updateSchemaMap
    891:929:void updateClassLookupMap(java.lang.String) -> updateClassLookupMap
org.happy.artist.rmdmia.instruction.InstructionManagerException -> org.happy.artist.rmdmia.instruction.InstructionManagerException:
org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry -> org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry:
    com.trinity.ea.util.SortedEAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry instructionRegistry -> c
    52:56:org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry getInstance() -> getInstance
    64:103:boolean writeFile() -> writeFile
    112:134:boolean readPropertiesFile() -> readPropertiesFile
    141:142:void setFileName(java.lang.String) -> setFileName
    147:147:java.lang.String getFileName() -> getFileName
    154:159:boolean put(java.lang.String,java.lang.String) -> put
    167:171:java.lang.String get(java.lang.String) -> get
    179:184:boolean remove(java.lang.String) -> remove
    190:190:com.trinity.ea.util.SortedEAProperties getProperties() -> getProperties
    196:197:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry$HardwareIDKeyComparator -> org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry$a:
    java.lang.String[] hid1 -> a
    java.lang.String[] hid2 -> b
    int intHid1 -> c
    int intHid2 -> d
    int intSid1 -> e
    int intSid2 -> f
    268:313:int compare(java.lang.Object,java.lang.Object) -> compare
org.happy.artist.rmdmia.instruction.InstructionManagerInterface -> org.happy.artist.rmdmia.instruction.InstructionManagerInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.instruction.InstructionManagerProperties -> org.happy.artist.rmdmia.instruction.InstructionManagerProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strPropertiesFileName -> b
    org.happy.artist.rmdmia.instruction.InstructionManagerProperties instructionManagerRegistry -> c
    59:63:org.happy.artist.rmdmia.instruction.InstructionManagerProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    167:167:java.lang.String getFileName() -> getFileName
    180:185:boolean put(java.lang.String,java.lang.String) -> put
    198:202:java.lang.String get(java.lang.String) -> get
    215:220:boolean remove(java.lang.String) -> remove
    230:230:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.instruction.InstructionManagerProvider -> org.happy.artist.rmdmia.instruction.InstructionManagerProvider:
    int imID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    35:35:int getID() -> getID
    43:44:void setID(int) -> setID
    54:55:void setController(org.happy.artist.rmdmia.Controller) -> setController
    64:64:org.happy.artist.rmdmia.Controller getController() -> getController
    80:81:void setProperties(java.util.Properties) -> setProperties
    90:90:java.util.Properties getProperties() -> getProperties
    99:100:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    108:108:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    115:115:void onInitialized() -> onInitialized
    org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition(int) -> getInstructionDefinition
    org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition(java.lang.String) -> getInstructionDefinition
    int getHidByName(java.lang.String) -> getHidByName
    java.lang.String getNameByHid(int) -> getNameByHid
org.happy.artist.rmdmia.instruction.InstructionOutputHandler -> org.happy.artist.rmdmia.instruction.InstructionOutputHandler:
    byte[] transform(org.happy.artist.rmdmia.instruction.Instruction) -> transform
    void send(org.happy.artist.rmdmia.instruction.Instruction) -> send
    void process_handler(org.happy.artist.rmdmia.instruction.Instruction) -> process_handler
    void setIsRecording(boolean) -> setIsRecording
    boolean getIsRecording() -> getIsRecording
    void registerInstructionHandler(org.happy.artist.rmdmia.instruction.InstructionHandler) -> registerInstructionHandler
    boolean isRegistered() -> isRegistered
    org.happy.artist.rmdmia.instruction.InstructionHandler getRegisteredInstructionHandler() -> getRegisteredInstructionHandler
    org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool getInstructionObjectPool() -> getInstructionObjectPool
org.happy.artist.rmdmia.instruction.providers.InstructionManagerPlugin -> org.happy.artist.rmdmia.instruction.providers.InstructionManagerPlugin:
    org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry registry -> a
    boolean isInitialized -> b
    java.util.HashMap map -> c
    org.happy.artist.rmdmia.Controller controller -> d
    org.happy.artist.rmdmia.instruction.InstructionDefinition[] definitions -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexToString -> f
    java.util.logging.Logger logger -> g
    java.lang.Object[] keys -> h
    int highestInt -> i
    int currentInt -> j
    java.lang.String provider_name_temp -> k
    71:72:void setInstructionDefinition(int,org.happy.artist.rmdmia.instruction.InstructionDefinition) -> setInstructionDefinition
    77:82:int[] getHids() -> getHids
    88:96:int addHid(java.lang.String) -> addHid
    102:110:int addHid(java.lang.String,org.happy.artist.rmdmia.instruction.InstructionDefinition) -> addHid
    116:116:org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition(int) -> getInstructionDefinition
    125:130:org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition(java.lang.String) -> getInstructionDefinition
    139:144:int getHidByName(java.lang.String) -> getHidByName
    153:157:java.lang.String getNameByHid(int) -> getNameByHid
    164:164:double getVersion() -> getVersion
    171:171:java.lang.String getName() -> getName
    177:177:boolean recycle() -> recycle
    183:186:void shutdown() -> shutdown
    194:200:boolean isInitialized() -> isInitialized
    211:400:void initialize() -> initialize
org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool -> org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool:
    void checkin(int) -> checkin
    org.happy.artist.rmdmia.instruction.Instruction checkout() -> checkout
    void shutdown() -> shutdown
org.happy.artist.rmdmia.instruction.utility.InstructionImporter -> org.happy.artist.rmdmia.instruction.utility.InstructionImporter:
    31:92:java.util.List getClassFileList(java.lang.String,java.lang.String,java.lang.String) -> getClassFileList
    98:106:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.instruction.utility.InstructionImporter$1 -> org.happy.artist.rmdmia.instruction.utility.a:
    java.util.regex.Pattern pattern -> a
    java.lang.String val$file_extension -> b
    java.util.List val$list -> c
    java.nio.file.Path val$rootDir -> d
    41:41:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    41:41:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    41:41:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    41:41:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder -> org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder:
    java.lang.String file_path -> a
    java.lang.String rcsm_provider_name -> b
    org.happy.artist.rmdmia.Controller controller -> c
    int hid -> hid
    37:38:org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder setFilePath(java.lang.String) -> setFilePath
    44:44:java.lang.String getFilePath() -> getFilePath
    50:51:void setHID(int) -> setHID
    56:56:int getHID() -> getHID
    62:62:java.lang.String getRCSMProviderName() -> getRCSMProviderName
    68:68:org.happy.artist.rmdmia.Controller getController() -> getController
    org.happy.artist.rmdmia.rcsm.provider.message.DefinitionToMessageInstructionSourceCodeGeneratorInterface getDefinitionToMessageInstructionSourceCodeGeneratorInterface() -> getDefinitionToMessageInstructionSourceCodeGeneratorInterface
org.happy.artist.rmdmia.instruction.utility.SchemaImporter -> org.happy.artist.rmdmia.instruction.utility.SchemaImporter:
    38:98:java.util.List getSchemaFileList(java.lang.String,java.lang.String,java.lang.String) -> getSchemaFileList
    126:157:void generateSchemaInstructions(int,java.lang.String,org.happy.artist.rmdmia.Controller,java.lang.String) -> generateSchemaInstructions
    165:256:void generateSchemaInstructionsSynchronously(int,java.util.List,org.happy.artist.rmdmia.Controller,java.lang.String) -> generateSchemaInstructionsSynchronously
    269:275:java.lang.String getSchemaFile(java.lang.String,org.happy.artist.rmdmia.Controller,java.lang.String) -> getSchemaFile
    301:318:java.lang.String getROSPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> a
    324:332:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.instruction.utility.SchemaImporter$1 -> org.happy.artist.rmdmia.instruction.utility.b:
    java.util.regex.Pattern pattern -> a
    java.lang.String val$file_extension -> b
    java.util.List val$list -> c
    java.nio.file.Path val$rootDir -> d
    48:48:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    48:48:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    48:48:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    48:48:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
org.happy.artist.rmdmia.instruction.utility.Utility -> org.happy.artist.rmdmia.instruction.utility.Utility:
    java.util.logging.Logger logger -> a
    34:96:boolean generateDefaultInstructionManagerTopicsWithRegisteredRCSMProviders(org.happy.artist.rmdmia.Controller,org.happy.artist.rmdmia.instruction.InstructionManagerHardwareRegistry) -> generateDefaultInstructionManagerTopicsWithRegisteredRCSMProviders
org.happy.artist.rmdmia.mission.manager.MissionManager -> org.happy.artist.rmdmia.mission.manager.MissionManager:
    org.happy.artist.rmdmia.mission.manager.MissionManagerProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.mission.manager.MissionManagerProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.mission.manager.MissionManagerProvider provider_to_enable -> D
    int current_mm_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    240:466:void initialize() -> initialize
    475:475:java.lang.String[] getProviderNames() -> getProviderNames
    485:485:double[] getProviderVersions() -> getProviderVersions
    495:495:java.lang.String[] getProviderClasses() -> getProviderClasses
    505:505:boolean[] getProviderEnabled() -> getProviderEnabled
    514:514:org.happy.artist.rmdmia.mission.manager.MissionManagerProvider[] getProviders() -> getProviders
    523:523:org.happy.artist.rmdmia.mission.manager.MissionManagerProvider getProvider(int) -> getProvider
    532:545:org.happy.artist.rmdmia.mission.manager.MissionManagerProvider getProviderByName(java.lang.String) -> getProviderByName
    581:616:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    624:648:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.mission.manager.MissionManagerException -> org.happy.artist.rmdmia.mission.manager.MissionManagerException:
org.happy.artist.rmdmia.mission.manager.MissionManagerInterface -> org.happy.artist.rmdmia.mission.manager.MissionManagerInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.mission.manager.MissionManagerProperties -> org.happy.artist.rmdmia.mission.manager.MissionManagerProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strPropertiesFileName -> b
    org.happy.artist.rmdmia.mission.manager.MissionManagerProperties missionManagerRegistry -> c
    59:63:org.happy.artist.rmdmia.mission.manager.MissionManagerProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    167:167:java.lang.String getFileName() -> getFileName
    180:185:boolean put(java.lang.String,java.lang.String) -> put
    198:202:java.lang.String get(java.lang.String) -> get
    215:220:boolean remove(java.lang.String) -> remove
    230:230:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.mission.manager.MissionManagerProvider -> org.happy.artist.rmdmia.mission.manager.MissionManagerProvider:
    int mmID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    38:38:int getID() -> getID
    46:47:void setID(int) -> setID
    57:58:void setController(org.happy.artist.rmdmia.Controller) -> setController
    67:67:org.happy.artist.rmdmia.Controller getController() -> getController
    83:84:void setProperties(java.util.Properties) -> setProperties
    93:93:java.util.Properties getProperties() -> getProperties
    102:103:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    111:111:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    118:118:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.movement.DummyMovementInstruction -> org.happy.artist.rmdmia.movement.DummyMovementInstruction:
    int testValue -> testValue
    30:30:int length() -> length
org.happy.artist.rmdmia.movement.DummyMovementProcessorFactory -> org.happy.artist.rmdmia.movement.DummyMovementProcessorFactory:
    15:15:org.happy.artist.rmdmia.movement.MovementProcessor newMovementProcessor() -> newMovementProcessor
org.happy.artist.rmdmia.movement.MovementProcessor -> org.happy.artist.rmdmia.movement.MovementProcessor:
    int cid -> cid
    int mid -> mid
    int hid -> hid
    org.happy.artist.rmdmia.instruction.Instruction process(org.happy.artist.rmdmia.instruction.Instruction) -> process
    33:33:void recycle() -> recycle
org.happy.artist.rmdmia.movement.MovementProcessorFactory -> org.happy.artist.rmdmia.movement.MovementProcessorFactory:
    org.happy.artist.rmdmia.movement.MovementProcessor newMovementProcessor() -> newMovementProcessor
org.happy.artist.rmdmia.movement.MovementProcessorImpl -> org.happy.artist.rmdmia.movement.MovementProcessorImpl:
    org.happy.artist.rmdmia.movement.DummyMovementInstruction instruction -> a
    17:18:void recycle() -> recycle
    23:28:org.happy.artist.rmdmia.instruction.Instruction process(org.happy.artist.rmdmia.instruction.Instruction) -> process
org.happy.artist.rmdmia.movement.MovementProcessorManager -> org.happy.artist.rmdmia.movement.MovementProcessorManager:
    org.happy.artist.rmdmia.movement.MovementProcessorRegistry registry -> a
    org.happy.artist.rmdmia.movement.MovementProcessorPool pool -> pool
    int MOVEMENT_PROCESSOR_OBJECTS_PER_RANGE -> b
    org.happy.artist.rmdmia.movement.MovementProcessorFactory[] factoryArray -> c
    int[] hardwareIDs -> d
    int[] movementProcessorIDs -> e
    boolean[] holdStatus -> f
    java.lang.Class[] movementProcessorFactoryClasses -> g
    java.lang.Object[] keys -> h
    java.lang.String[] keySplitArray -> i
    java.lang.String[] valueSplitArray -> j
    int keyCount -> k
    int hardwareIDCount -> l
    int hardwareIDLoopCount -> m
    int newMovementProcessorID -> n
    int[] retIndexArray -> o
    int removeLoopCount -> p
    int indexToWriteCount -> q
    int indexMarker -> r
    int[] removeValueArray -> s
    int midIndex -> t
    org.happy.artist.rmdmia.instruction.Instruction movementInstruction -> u
    org.happy.artist.rmdmia.movement.MovementProcessor movementProcessor -> v
    int processLoopCount -> w
    248:291:org.happy.artist.rmdmia.instruction.Instruction[] process(org.happy.artist.rmdmia.instruction.Instruction[]) -> process
    309:334:org.happy.artist.rmdmia.instruction.Instruction process(org.happy.artist.rmdmia.instruction.Instruction) -> process
    348:357:int add(int,org.happy.artist.rmdmia.movement.MovementProcessorFactory) -> add
    365:382:int getNextMovementIDByHardwareID(int) -> a
    433:443:int getMovementProcessorIndex(int,int) -> a
    451:481:void removeProcessingArrayElementsByIndexes(int[]) -> a
    495:511:void remove(int) -> remove
    521:535:void remove(int,int) -> remove
    546:557:org.happy.artist.rmdmia.movement.MovementProcessor checkout(int,int) -> checkout
    567:567:org.happy.artist.rmdmia.movement.MovementProcessor checkout(int) -> checkout
    576:577:void checkin(int) -> checkin
    585:585:void hold(int) -> hold
    594:594:void hold(int,int) -> hold
    602:602:void continuer(int) -> continuer
    611:611:void continuer(int,int) -> continuer
    617:617:void start() -> start
    624:624:void stop() -> stop
    630:630:void recycle() -> recycle
    641:641:boolean isOnHold(int,int) -> isOnHold
    654:654:int[][] getProcessingMovementProcessorIDs() -> getProcessingMovementProcessorIDs
    663:663:int[][] getRegisteredMovementProcessorIDs() -> getRegisteredMovementProcessorIDs
    673:673:int[][] getRegisteredMovementProcessorsIDsStatus() -> getRegisteredMovementProcessorsIDsStatus
    679:680:void writeRegistry() -> writeRegistry
org.happy.artist.rmdmia.movement.MovementProcessorPool -> org.happy.artist.rmdmia.movement.MovementProcessorPool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.movement.MovementProcessor[] movementProcessorArray -> b
    int checkoutCount -> c
    int MOVEMENT_PROCESSOR_POOL_SIZE -> d
    int[] poolIterationCountArray -> e
    int RANGE_LENGTH -> f
    int maximumIndexRangePlusOne -> g
    int factoryPoolRangeCount -> h
    int factoryPoolLoopCount -> i
    97:138:org.happy.artist.rmdmia.movement.MovementProcessor checkout(int) -> checkout
    146:148:void checkin(int) -> checkin
org.happy.artist.rmdmia.movement.MovementProcessorRegistry -> org.happy.artist.rmdmia.movement.MovementProcessorRegistry:
    com.trinity.ea.util.SortedEAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.movement.MovementProcessorRegistry movementProcessorRegistry -> c
    54:58:org.happy.artist.rmdmia.movement.MovementProcessorRegistry getInstance() -> getInstance
    66:105:boolean writeFile() -> writeFile
    114:136:boolean readPropertiesFile() -> readPropertiesFile
    143:144:void setFileName(java.lang.String) -> setFileName
    149:149:java.lang.String getFileName() -> getFileName
    156:161:boolean put(java.lang.String,java.lang.String) -> put
    169:173:java.lang.String get(java.lang.String) -> get
    181:186:boolean remove(java.lang.String) -> remove
    192:192:com.trinity.ea.util.SortedEAProperties getProperties() -> getProperties
    198:199:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.movement.MovementProcessorRegistry$HardwareIDKeyComparator -> org.happy.artist.rmdmia.movement.MovementProcessorRegistry$a:
    java.lang.String[] hid1 -> a
    java.lang.String[] hid2 -> b
    int intHid1 -> c
    int intHid2 -> d
    int intMid1 -> e
    int intMid2 -> f
    270:306:int compare(java.lang.Object,java.lang.Object) -> compare
org.happy.artist.rmdmia.perception.engine.PEException -> org.happy.artist.rmdmia.perception.engine.PEException:
org.happy.artist.rmdmia.perception.engine.PEInterface -> org.happy.artist.rmdmia.perception.engine.PEInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
    void setSensorProcessorManager(org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager) -> setSensorProcessorManager
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager getSensorProcessorManager() -> getSensorProcessorManager
org.happy.artist.rmdmia.perception.engine.PEManager -> org.happy.artist.rmdmia.perception.engine.PEManager:
    org.happy.artist.rmdmia.perception.engine.PEProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.perception.engine.PEProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.perception.engine.PEProvider provider_to_enable -> D
    int current_pe_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    213:439:void initialize() -> initialize
    448:448:java.lang.String[] getProviderNames() -> getProviderNames
    458:458:double[] getProviderVersions() -> getProviderVersions
    468:468:java.lang.String[] getProviderClasses() -> getProviderClasses
    478:478:boolean[] getProviderEnabled() -> getProviderEnabled
    487:487:org.happy.artist.rmdmia.perception.engine.PEProvider[] getProviders() -> getProviders
    496:496:org.happy.artist.rmdmia.perception.engine.PEProvider getProvider(int) -> getProvider
    505:518:org.happy.artist.rmdmia.perception.engine.PEProvider getProviderByName(java.lang.String) -> getProviderByName
    554:589:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    597:621:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.perception.engine.PEProperties -> org.happy.artist.rmdmia.perception.engine.PEProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.perception.engine.PEProperties movementProcessorRegistry -> c
    59:63:org.happy.artist.rmdmia.perception.engine.PEProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    165:165:java.lang.String getFileName() -> getFileName
    178:183:boolean put(java.lang.String,java.lang.String) -> put
    196:200:java.lang.String get(java.lang.String) -> get
    213:218:boolean remove(java.lang.String) -> remove
    228:228:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.perception.engine.PEProvider -> org.happy.artist.rmdmia.perception.engine.PEProvider:
    int peID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager sensorProcessorManager -> e
    36:36:int getID() -> getID
    44:45:void setID(int) -> setID
    55:56:void setController(org.happy.artist.rmdmia.Controller) -> setController
    65:65:org.happy.artist.rmdmia.Controller getController() -> getController
    81:82:void setProperties(java.util.Properties) -> setProperties
    91:91:java.util.Properties getProperties() -> getProperties
    100:101:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    109:109:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    118:119:void setSensorProcessorManager(org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager) -> setSensorProcessorManager
    127:127:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager getSensorProcessorManager() -> getSensorProcessorManager
    134:134:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider -> org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider:
    boolean isInitialized -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> c
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManagerImpl sensorProcessorManager -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.client.sensor.ROSBagSensorProcessorFactory bag_factory -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> f
    java.util.logging.Logger logger -> g
    org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider instance -> h
    org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter rosBag -> i
    int bag_loop_count -> j
    boolean is_recording -> is_recording
    int[] hid_array -> k
    int[] bag_factory_indices -> l
    int[][] registered_sensor_processor_ids -> m
    int current_hid -> n
    55:55:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager getSensorProcessorManager() -> getSensorProcessorManager
    73:73:org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider getInstance() -> getInstance
    86:93:void removeRecorderSensorProcessors() -> removeRecorderSensorProcessors
    99:99:boolean isRecording() -> isRecording
    116:168:void startRecording(java.lang.String,int[]) -> startRecording
    208:229:void stopRecording() -> stopRecording
    235:298:void initialize() -> initialize
    304:304:double getVersion() -> getVersion
    311:311:java.lang.String getName() -> getName
    317:317:boolean recycle() -> recycle
    323:326:void shutdown() -> shutdown
    334:334:boolean isInitialized() -> isInitialized
org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage -> org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage:
    int hid -> hid
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor:
    int cid -> cid
    int sid -> sid
    int hid -> hid
    org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage) -> process
    32:32:void recycle() -> recycle
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger:
    int READ_BLOCKS -> a
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger$Data[] exchanger -> b
    int checkoutCount -> checkoutCount
    int recycleCount -> c
    int lastCount -> d
    int byteArrayLength -> e
    56:73:byte[] checkout() -> checkout
    81:82:void reset() -> reset
    86:92:void recycle() -> recycle
    96:102:void shutdown() -> shutdown
    20:20:int access$000(org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger) -> a
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger$Data -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger$Data:
    byte[] bytes -> bytes
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorExchanger this$0 -> a
    109:110:void recycle() -> recycle
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory:
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor newSensorProcessor() -> newSensorProcessor
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager:
    org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage[] process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage[]) -> process
    org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage) -> process
    int add(int,org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory,boolean) -> add
    void remove(int) -> remove
    void remove(int,int) -> remove
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor checkout(int,int) -> checkout
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor checkout(int) -> checkout
    void checkin(int) -> checkin
    void hold(int) -> hold
    void hold(int,int) -> hold
    void continuer(int) -> continuer
    void continuer(int,int) -> continuer
    void start() -> start
    void stop() -> stop
    void recycle() -> recycle
    boolean isOnHold(int,int) -> isOnHold
    int[][] getProcessingSensorProcessorIDs() -> getProcessingSensorProcessorIDs
    int[][] getRegisteredSensorProcessorIDs() -> getRegisteredSensorProcessorIDs
    int[][] getRegisteredSensorProcessorsIDsStatus() -> getRegisteredSensorProcessorsIDsStatus
    java.lang.Class[] getSensorProcessorFactoryClassArray() -> getSensorProcessorFactoryClassArray
    int[] getSensorProcessorFactoryClassIndicesByClassname(java.lang.Class) -> getSensorProcessorFactoryClassIndicesByClassname
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManagerImpl -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManagerImpl:
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry registry -> a
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorPool pool -> pool
    int SENSOR_PROCESSOR_OBJECTS_PER_RANGE -> b
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory[] factoryArray -> c
    int[][] processingSensorProcessorIDs -> d
    int[][] registeredSensorProcessorIDs -> e
    int[][] registeredSensorProcessorIDsStatus -> f
    int[] hardwareIDs -> g
    int[] sensorProcessorIDs -> h
    boolean[] holdStatus -> i
    java.lang.Class[] sensorProcessorFactoryClasses -> j
    java.lang.Object[] keys -> k
    java.lang.String[] keySplitArray -> l
    java.lang.String[] valueSplitArray -> m
    int keyCount -> n
    int hardwareIDCount -> o
    int hardwareIDLoopCount -> p
    int newSensorProcessorID -> q
    int[] retIndexArray -> r
    int removeLoopCount -> s
    int indexToWriteCount -> t
    int indexMarker -> u
    int[] removeValueArray -> v
    int sidIndex -> w
    org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage sensorMessage -> x
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor sensorProcessor -> y
    int processLoopCount -> z
    293:325:org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage[] process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage[]) -> process
    339:364:org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage) -> process
    378:393:int add_save(int,org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory,boolean) -> add_save
    412:427:int add(int,org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorFactory,boolean) -> add
    435:452:int getNextSensorIDByHardwareID(int) -> a
    481:498:void updateArrayElementIndexesLinkedToHardwareID(int) -> b
    503:513:int getSensorProcessorIndex(int,int) -> a
    521:555:void removeProcessingArrayElementsByIndexes(int[]) -> a
    568:584:void remove_save(int) -> remove_save
    598:601:void remove(int) -> remove
    612:628:void remove_save(int,int) -> remove_save
    642:652:void remove(int,int) -> remove
    663:674:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor checkout(int,int) -> checkout
    684:684:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor checkout(int) -> checkout
    693:694:void checkin(int) -> checkin
    702:711:void hold(int) -> hold
    720:731:void hold(int,int) -> hold
    739:748:void continuer(int) -> continuer
    757:768:void continuer(int,int) -> continuer
    775:775:void start() -> start
    783:783:void stop() -> stop
    790:790:void recycle() -> recycle
    801:810:boolean isOnHold(int,int) -> isOnHold
    821:845:int[][] getProcessingSensorProcessorIDs() -> getProcessingSensorProcessorIDs
    856:870:int[][] getRegisteredSensorProcessorIDs() -> getRegisteredSensorProcessorIDs
    880:895:int[][] getRegisteredSensorProcessorsIDsStatus() -> getRegisteredSensorProcessorsIDsStatus
    902:902:java.lang.Class[] getSensorProcessorFactoryClassArray() -> getSensorProcessorFactoryClassArray
    909:920:int[] getSensorProcessorFactoryClassIndicesByClassname(java.lang.Class) -> getSensorProcessorFactoryClassIndicesByClassname
    926:927:void writeRegistry() -> writeRegistry
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorPool -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorPool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor[] sensorProcessorArray -> b
    int checkoutCount -> c
    int SENSOR_PROCESSOR_POOL_SIZE -> d
    int[] poolIterationCountArray -> e
    int RANGE_LENGTH -> f
    int maximumIndexRangePlusOne -> g
    int factoryPoolRangeCount -> h
    int factoryPoolLoopCount -> i
    101:142:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor checkout(int) -> checkout
    150:152:void checkin(int) -> checkin
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry:
    com.trinity.ea.util.SortedEAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry sensorProcessorRegistry -> c
    54:58:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry getInstance() -> getInstance
    66:105:boolean writeFile() -> writeFile
    114:136:boolean readPropertiesFile() -> readPropertiesFile
    143:144:void setFileName(java.lang.String) -> setFileName
    149:149:java.lang.String getFileName() -> getFileName
    156:161:boolean put(java.lang.String,java.lang.String) -> put
    169:173:java.lang.String get(java.lang.String) -> get
    181:186:boolean remove(java.lang.String) -> remove
    192:192:com.trinity.ea.util.SortedEAProperties getProperties() -> getProperties
    198:199:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry$HardwareIDKeyComparator -> org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry$a:
    java.lang.String[] hid1 -> a
    java.lang.String[] hid2 -> b
    int intHid1 -> c
    int intHid2 -> d
    int intSid1 -> e
    int intSid2 -> f
    270:306:int compare(java.lang.Object,java.lang.Object) -> compare
org.happy.artist.rmdmia.perception.engine.sensor.utility.Utility -> org.happy.artist.rmdmia.perception.engine.sensor.utility.Utility:
    java.util.logging.Logger logger -> a
    28:75:boolean generateDefaultSensorProcessorTopicsWithROSBag(org.happy.artist.rmdmia.Controller,org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorRegistry) -> generateDefaultSensorProcessorTopicsWithROSBag
org.happy.artist.rmdmia.rcsm.RCSMException -> org.happy.artist.rmdmia.rcsm.RCSMException:
org.happy.artist.rmdmia.rcsm.RCSMInterface -> org.happy.artist.rmdmia.rcsm.RCSMInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
    org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition() -> getInstructionDefinition
org.happy.artist.rmdmia.rcsm.RCSMManager -> org.happy.artist.rmdmia.rcsm.RCSMManager:
    org.happy.artist.rmdmia.rcsm.RCSMProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.rcsm.RCSMProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String pluginsFolderPath -> j
    java.lang.String provider_properties_file_name -> k
    java.util.Properties prop -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    org.happy.artist.rmdmia.Controller controller -> u
    int providerCount -> v
    java.io.File rootConfigurationDirectory -> w
    java.io.File confDir -> x
    java.util.logging.Logger logger -> y
    java.io.FileOutputStream fos -> z
    java.io.InputStream in -> A
    byte[] buffer -> B
    int len -> C
    org.happy.artist.rmdmia.rcsm.RCSMProvider provider_to_enable -> D
    int current_rcsm_id -> E
    int postInitLoopCount -> F
    235:450:void initialize() -> initialize
    459:459:java.lang.String[] getProviderNames() -> getProviderNames
    469:469:double[] getProviderVersions() -> getProviderVersions
    479:479:java.lang.String[] getProviderClasses() -> getProviderClasses
    489:489:boolean[] getProviderEnabled() -> getProviderEnabled
    498:498:org.happy.artist.rmdmia.rcsm.RCSMProvider[] getProviders() -> getProviders
    507:507:org.happy.artist.rmdmia.rcsm.RCSMProvider getProvider(int) -> getProvider
    516:529:org.happy.artist.rmdmia.rcsm.RCSMProvider getProviderByName(java.lang.String) -> getProviderByName
    565:600:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    608:632:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.rcsm.RCSMProperties -> org.happy.artist.rmdmia.rcsm.RCSMProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.rcsm.RCSMProperties rcsmRegistry -> c
    60:64:org.happy.artist.rmdmia.rcsm.RCSMProperties getInstance() -> getInstance
    74:113:boolean writeFile() -> writeFile
    124:149:boolean readPropertiesFile() -> readPropertiesFile
    158:159:void setFileName(java.lang.String) -> setFileName
    166:166:java.lang.String getFileName() -> getFileName
    179:184:boolean put(java.lang.String,java.lang.String) -> put
    197:201:java.lang.String get(java.lang.String) -> get
    214:219:boolean remove(java.lang.String) -> remove
    229:229:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.rcsm.RCSMProvider -> org.happy.artist.rmdmia.rcsm.RCSMProvider:
    int rcsmID -> a
    java.lang.String filePath -> b
    java.util.Properties properties -> c
    org.happy.artist.rmdmia.Controller controller -> d
    36:36:int getID() -> getID
    44:45:void setID(int) -> setID
    55:56:void setController(org.happy.artist.rmdmia.Controller) -> setController
    65:65:org.happy.artist.rmdmia.Controller getController() -> getController
    81:82:void setProperties(java.util.Properties) -> setProperties
    90:90:java.util.Properties getProperties() -> getProperties
    99:100:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    108:108:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    115:115:void onInitialized() -> onInitialized
    org.happy.artist.rmdmia.rcsm.provider.message.SubscriberMessageManager getSubscriberMessageManager() -> getSubscriberMessageManager
    org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition() -> getInstructionDefinition
org.happy.artist.rmdmia.rcsm.provider.CommunicationReceiverInterface -> org.happy.artist.rmdmia.rcsm.provider.CommunicationReceiverInterface:
    void shutdown() -> shutdown
    void recycle() -> recycle
    boolean isRunning() -> isRunning
    java.lang.String getHostName() -> getHostName
    int getReceivePort() -> getReceivePort
    void stop() -> stop
    void start() -> start
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface -> org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface:
    void send(byte[]) -> send
    void send(byte[],int,int) -> send
    void send(byte[],int) -> send
    java.lang.String getProtocolName() -> getProtocolName
    void shutdown() -> shutdown
    void recycle() -> recycle
    void start() -> start
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    boolean isRunning() -> isRunning
    java.lang.String getRemoteHostName() -> getRemoteHostName
    int getRemotePort() -> getRemotePort
    java.net.Socket getSocket() -> getSocket
org.happy.artist.rmdmia.rcsm.provider.message.AbstractInstructionDefinition -> org.happy.artist.rmdmia.rcsm.provider.message.AbstractInstructionDefinition:
    org.happy.artist.rmdmia.instruction.InstructionInputHandler instructionInputHandler -> a
    org.happy.artist.rmdmia.instruction.InstructionOutputHandler instructionOutputHandler -> b
    org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool pool -> c
    java.util.List sourceCode -> d
    org.happy.artist.rmdmia.rcsm.RCSMProvider rcsm_provider -> e
    java.lang.String package_name -> f
    java.lang.String class_name -> g
    java.lang.String[] type_array -> h
    java.lang.String classFolderPath -> i
    java.lang.String msgfile -> j
    53:61:org.happy.artist.rmdmia.instruction.Instruction getInstructionObject() -> getInstructionObject
    67:278:void updateInstructionSource() -> a
    309:410:org.happy.artist.rmdmia.instruction.InstructionInputHandler getInstructionInputHandler() -> getInstructionInputHandler
    417:502:org.happy.artist.rmdmia.instruction.InstructionOutputHandler getInstructionOutputHandler() -> getInstructionOutputHandler
    java.lang.String[] getSchemaFileExtensions() -> getSchemaFileExtensions
    org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder getRunnableInstructionBuilder() -> getRunnableInstructionBuilder
    529:583:org.happy.artist.rmdmia.instruction.providers.InstructionObjectPool getInstructionObjectPool() -> getInstructionObjectPool
    598:606:java.util.List getSource() -> getSource
    618:627:void addDynamicSourceCodeObject(org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$DynamicSourceCodeObject) -> addDynamicSourceCodeObject
    632:632:org.happy.artist.rmdmia.rcsm.RCSMProvider getRCSMProvider() -> getRCSMProvider
org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface -> org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface:
    void process(byte[]) -> process
    void process(byte[],int) -> process
org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor -> org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor:
    java.lang.String getClassname() -> getClassname
    int getId() -> getId
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandler() -> getMessageHandler
org.happy.artist.rmdmia.rcsm.provider.message.DefinitionToMessageInstructionSourceCodeGeneratorInterface -> org.happy.artist.rmdmia.rcsm.provider.message.DefinitionToMessageInstructionSourceCodeGeneratorInterface:
    java.lang.String process(int,java.lang.String,java.lang.String,java.lang.String,org.happy.artist.rmdmia.Controller) -> process
    java.lang.String getObjectPoolSRC(java.lang.String,java.lang.String) -> getObjectPoolSRC
org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler -> org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler:
    java.util.logging.Logger logger -> a
    96:118:boolean compile(java.util.List,java.lang.String) -> compile
    125:144:boolean compile(javax.tools.JavaFileObject[],java.lang.String) -> compile
    151:176:boolean compile(java.lang.String[],java.lang.String[],java.lang.String) -> compile
    183:206:boolean compile(java.lang.String,java.lang.String,java.lang.String) -> compile
    212:223:void main(java.lang.String[]) -> main
    29:29:java.util.logging.Logger access$000() -> a
org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$DynamicSourceCodeObject -> org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$DynamicSourceCodeObject:
    java.lang.String contents -> contents
    71:71:java.lang.CharSequence getCharContent(boolean) -> getCharContent
org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$MessageDiagnosticListener -> org.happy.artist.rmdmia.rcsm.provider.message.MessageCompiler$a:
    39:52:void report(javax.tools.Diagnostic) -> report
org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface -> org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface:
    void setUseTunerMessageHandler() -> setUseTunerMessageHandler
    void setUseInitializerMessageHandler() -> setUseInitializerMessageHandler
    void setUseMessageHandler() -> setUseMessageHandler
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseTunerMessageHandler() -> getUseTunerMessageHandler
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseInitializerMessageHandler() -> getUseInitializerMessageHandler
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseMessageHandler() -> getUseMessageHandler
org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface -> org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface:
    int getTID() -> getTID
    void setTID(int) -> setTID
    void process(byte[]) -> process
    void process(byte[],int) -> process
    void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    void setThreadName(java.lang.String) -> setThreadName
    java.lang.String getThreadName() -> getThreadName
    void setTopic(java.lang.String) -> setTopic
    java.lang.String getTopic() -> getTopic
    void setIsTopic(boolean) -> setIsTopic
    boolean isTopic() -> isTopic
    void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerTunerInterface -> org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerTunerInterface:
    int getLargestReceivedBlockSize() -> getLargestReceivedBlockSize
org.happy.artist.rmdmia.rcsm.provider.message.SubscriberMessageManager -> org.happy.artist.rmdmia.rcsm.provider.message.SubscriberMessageManager:
    boolean add(org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition) -> add
    org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition[] getTopicDefinitions() -> getTopicDefinitions
    org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition getTopicRegistryMessageDefinitionByTID(int) -> getTopicRegistryMessageDefinitionByTID
    int getIndexByTopicName(java.lang.String) -> getIndexByTopicName
    int getTIDByTopicName(java.lang.String) -> getTIDByTopicName
    boolean remove(org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition) -> remove
org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition -> org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition:
    int tid -> tid
    java.lang.String topic -> topic
    java.lang.String type -> type
    java.lang.String definition -> definition
    java.lang.String connect_on_start -> connect_on_start
    java.lang.String getTopicName() -> getTopicName
    java.lang.String getTopicType() -> getTopicType
    java.lang.String getTopicDefinition() -> getTopicDefinition
org.happy.artist.rmdmia.rcsm.providers.ros.DefaultROSMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.DefaultROSMessage:
org.happy.artist.rmdmia.rcsm.providers.ros.DefaultROSMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.DefaultROSMessageFactory:
    18:18:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage newMessage() -> newMessage
org.happy.artist.rmdmia.rcsm.providers.ros.DummyTCPROSSensorMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.DummyTCPROSSensorMessage:
    java.lang.String callerid -> callerid
    java.lang.String topic -> topic
    java.lang.String md5sum -> md5sum
    java.lang.String type -> type
    java.lang.String message_definition -> message_definition
    java.lang.String latching -> latching
    java.lang.String text_body -> text_body
org.happy.artist.rmdmia.rcsm.providers.ros.ROSMaster -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSMaster:
    org.apache.xmlrpc.client.XmlRpcClient client -> a
    org.apache.xmlrpc.client.XmlRpcClientConfigImpl masterServerConfig -> b
    java.lang.Object[] response -> c
    int responseStatus -> d
    java.lang.String caller_id -> e
    55:72:java.lang.Object[] registerService(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerService
    81:98:java.lang.Object[] unregisterService(java.lang.String,java.lang.String,java.lang.String) -> unregisterService
    107:124:java.lang.Object[] registerSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerSubscriber
    132:149:java.lang.Object[] unregisterSubscriber(java.lang.String,java.lang.String,java.lang.String) -> unregisterSubscriber
    158:175:java.lang.Object[] registerPublisher(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerPublisher
    200:217:java.lang.Object[] unregisterPublisher(java.lang.String,java.lang.String,java.lang.String) -> unregisterPublisher
    225:242:java.lang.Object[] lookupNode(java.lang.String,java.lang.String) -> lookupNode
    249:266:java.lang.Object[] getTopicTypes(java.lang.String) -> getTopicTypes
    280:297:java.lang.Object[] getSystemState(java.lang.String) -> getSystemState
    304:321:java.lang.Object[] getUri(java.lang.String) -> getUri
    328:345:java.lang.Object[] lookupService(java.lang.String,java.lang.String) -> lookupService
    352:369:java.lang.Object[] getPublishedTopics(java.lang.String,java.lang.String) -> getPublishedTopics
    393:406:void shutdown() -> shutdown
    427:444:java.lang.Object[] getBusStats(java.lang.String) -> getBusStats
    462:479:java.lang.Object[] getBusInfo(java.lang.String) -> getBusInfo
    489:506:java.lang.Object[] getMasterUri(java.lang.String) -> getMasterUri
    517:536:java.lang.Object[] shutdown(java.lang.String,java.lang.String) -> shutdown
    546:563:java.lang.Object[] getPid(java.lang.String) -> getPid
    573:590:java.lang.Object[] getSubscriptions(java.lang.String) -> getSubscriptions
    601:618:java.lang.Object[] getPublications(java.lang.String) -> getPublications
    630:647:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.lang.Object) -> paramUpdate
    661:678:java.lang.Object[] publisherUpdate(java.lang.String,java.lang.String,java.lang.String[]) -> publisherUpdate
    706:723:java.lang.Object[] requestTopic(java.lang.String,java.lang.String,java.lang.Object[]) -> requestTopic
org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage:
    int rosMessageID -> rosMessageID
    boolean isTopic -> isTopic
    char[] callerid -> callerid
    char[] topic -> topic
    char[] service -> service
    char[] md5sum -> md5sum
    char[] type -> type
    char[] message_definition -> message_definition
    java.lang.String error -> error
    char[] persistent -> persistent
    char[] tcp_nodelay -> tcp_nodelay
    char[] latching -> latching
    char[] request_type -> request_type
    char[] response_type -> response_type
    byte[] connection_header -> connection_header
    byte[] binary_body -> binary_body
    52:60:void recycle() -> recycle
org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessageFactory:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage newMessage() -> newMessage
org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage[] rosMessageArray -> b
    int checkoutCount -> c
    int ROS_MESSAGE_POOL_SIZE -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool rosMessagePool -> e
    85:91:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool getInstance() -> getInstance
    99:115:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage checkout() -> checkout
    147:149:void checkin(int) -> checkin
    155:171:void setROSMessageHeaderInPooledMessages(org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage) -> setROSMessageHeaderInPooledMessages
org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode:
    java.net.URL rosMasterURL -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMaster master -> b
    java.lang.Object[] response -> c
    java.lang.String[] topicNames -> topicNames
    java.lang.String[] serviceNames -> serviceNames
    java.lang.String[] serviceAPIs -> serviceAPIs
    java.lang.String[] serviceCallerAPIs -> serviceCallerAPIs
    java.lang.String[] serviceServer -> serviceServer
    int[] servicePort -> servicePort
    java.lang.String[] serviceProtocol -> serviceProtocol
    java.lang.String[] servicePreferredProtocol -> servicePreferredProtocol
    boolean[] servicePersistance -> servicePersistance
    java.lang.String[] serviceMD5Sum -> serviceMD5Sum
    boolean[] serviceTCP_NoDelay -> serviceTCP_NoDelay
    boolean[] serviceConnectOnStartup -> serviceConnectOnStartup
    int[] serviceTCP_Block_Size -> serviceTCP_Block_Size
    int[] serviceUDPPacketSize -> serviceUDPPacketSize
    java.lang.String[] serviceMessageHandlerClass -> serviceMessageHandlerClass
    java.lang.String[] serviceInitializerMessageHandlerClass -> serviceInitializerMessageHandlerClass
    java.lang.String[] serviceTunerMessageHandlerClass -> serviceTunerMessageHandlerClass
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] serviceTopicRegistryDefinitions -> serviceTopicRegistryDefinitions
    java.lang.String[] subscriberTopicTypes -> subscriberTopicTypes
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage[] subscriberMessages -> subscriberMessages
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage[] serviceMessages -> serviceMessages
    java.lang.String[] topicPublisherURLs -> topicPublisherURLs
    java.lang.String[] topicSubscriberAPIs -> topicSubscriberAPIs
    int publisherCount -> publisherCount
    boolean[] isPublishable -> isPublishable
    java.lang.String[] publishableTopics -> publishableTopics
    boolean[] isSubscribable -> isSubscribable
    java.lang.String[] subscribableTopics -> subscribableTopics
    boolean[] isPublication -> isPublication
    boolean[] isSubscribed -> isSubscribed
    boolean[] isRegisteredService -> isRegisteredService
    int tempServiceIndice -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSubscriber[] topicSlave -> topicSlave
    java.lang.String[] topicServerName -> topicServerName
    java.lang.String[] topicProtocol -> topicProtocol
    int[] topicPort -> topicPort
    java.lang.String[] topicPreferredProtocol -> topicPreferredProtocol
    boolean[] topicAlwaysConnected -> topicAlwaysConnected
    java.lang.String[] topicMD5Sum -> topicMD5Sum
    boolean[] topicTCP_NoDelay -> topicTCP_NoDelay
    int[] topicTCP_Block_Size -> topicTCP_Block_Size
    int[] topicUDPPacketSize -> topicUDPPacketSize
    int[] topicNegotiatedUDPPacketSize -> topicNegotiatedUDPPacketSize
    boolean[] topicConnectOnStartup -> topicConnectOnStartup
    boolean[] topicLatching -> topicLatching
    boolean[] topicPublisherConnectOnStartup -> topicPublisherConnectOnStartup
    java.lang.String[] topicSubscriberMessageHandlerClass -> topicSubscriberMessageHandlerClass
    java.lang.String[] topicSubscriberInitializerMessageHandlerClass -> topicSubscriberInitializerMessageHandlerClass
    java.lang.String[] topicSubscriberTunerMessageHandlerClass -> topicSubscriberTunerMessageHandlerClass
    java.lang.String[] topicPublisherMessageHandlerClass -> topicPublisherMessageHandlerClass
    java.lang.String[] topicPublisherInitializerMessageHandlerClass -> topicPublisherInitializerMessageHandlerClass
    java.lang.String[] topicPublisherTunerMessageHandlerClass -> topicPublisherTunerMessageHandlerClass
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] topicRegistryDefinitions -> topicRegistryDefinitions
    java.lang.String caller_id -> caller_id
    int responseStatus -> e
    java.lang.Object[] registerResponse -> f
    int regSubCount -> g
    int regPubCount -> h
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveParameterListener paramListener -> i
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates topicSystemStates -> j
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicTypeLookup topicTypeLookup -> k
    int initialGroupSize -> l
    java.net.URL pubURL -> m
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave caller_api -> caller_api
    java.lang.Object[] SUPPORTED_PROTOCOLS -> n
    java.lang.Object[] SUPPORTED_PROTOCOLS_UDP_PREFERRED -> o
    java.lang.Object[] TCPROS_PROTOCOL -> p
    java.lang.Object[] UDPROS_PROTOCOL -> q
    java.lang.Object[] UDPROS_CONNECTION_ARRAY -> r
    java.lang.String hostname -> hostname
    java.lang.String master_caller_api -> s
    int status -> t
    java.lang.Object[] publishers_state -> u
    java.lang.Object[] subscribers_state -> v
    java.lang.Object[] services_state -> w
    java.lang.String pubTopic -> x
    java.lang.String subTopic -> y
    java.lang.String srvTopic -> z
    java.lang.Object[] stateTopicPublishers -> A
    java.lang.Object[] stateTopicSubscribers -> B
    java.lang.Object[] stateTopicServices -> C
    int stateLoopCounter -> D
    int serviceList -> E
    int serviceCount -> F
    java.lang.String service_api1 -> G
    int tmpIndex -> H
    int tmpIndex2 -> I
    java.lang.String protocol -> J
    java.lang.String server -> K
    java.lang.String rpcPort -> L
    int serviceLoopMonIndice -> M
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager subscriberMessageManager -> subscriberMessageManager
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition tempTRMD -> tempTRMD
    int tempTID -> N
    java.util.Map senderLookupMap -> O
    java.util.Map senderSubscriberLookupMap -> P
    java.util.Map senderPublisherLookupMap -> Q
    java.util.Map senderServiceLookupMap -> R
    int senderLookupLoopCounter -> S
    int senderLookupElementCount -> T
    int currentServiceIndex -> U
    java.util.Properties properties -> V
    java.util.logging.Logger logger -> W
    int ros_message_pool_size -> ros_message_pool_size
    boolean attempt_probe_save_on_md5_mismatch -> attempt_probe_save_on_md5_mismatch
    boolean startup_auto_config -> startup_auto_config
    java.lang.Object[] fields -> X
    int count -> Y
    int serviceIndexCount -> Z
    int tmpPort -> aa
    java.lang.Object[] topicServer -> ab
    int index -> ac
    int pid -> ad
    int currentIndex -> ae
    int topicID -> af
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage[] subMessages -> subMessages
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage[] srvMessages -> srvMessages
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] subscriberThreads -> ag
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] publisherThreads -> ah
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] serviceThreads -> ai
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator tmpTCPCommunicator -> aj
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator tmpTCPServiceCommunicator -> ak
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSSubscriberCommunicator tmpUDPCommunicator -> al
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator tmpTCPPublisherCommunicator -> am
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator tmpUDPPublisherCommunicator -> an
    boolean isInitialized -> ao
    java.lang.String[] pubSubTopics -> ap
    java.lang.Object[] publishers -> aq
    int reinitializeCount -> reinitializeCount
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> ar
    java.lang.Object[] monitorColumnNames -> as
    java.lang.Object[][] monitorData -> at
    int currentTID -> au
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] senderServiceArray -> av
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] senderPubSubArray -> aw
    444:444:boolean isRegisteredService(int) -> isRegisteredService
    453:453:boolean isRegisteredSubscriber(int) -> isRegisteredSubscriber
    462:462:boolean isRegisteredPublisher(int) -> isRegisteredPublisher
    525:525:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMaster getMasterAPI() -> getMasterAPI
    532:532:int getCallbackPort() -> getCallbackPort
    541:545:java.lang.Object[] registerService(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerService
    556:560:java.lang.Object[] unregisterService(java.lang.String,java.lang.String,java.lang.String) -> unregisterService
    569:597:int registerSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerSubscriber
    607:614:int getTopicIndex(java.lang.String) -> getTopicIndex
    623:630:int getServiceIndex(java.lang.String) -> getServiceIndex
    640:641:java.lang.Object[] unregisterSubscriber(java.lang.String,java.lang.String,java.lang.String) -> unregisterSubscriber
    651:678:int registerPublisher(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerPublisher
    689:690:java.lang.Object[] unregisterPublisher(java.lang.String,java.lang.String,java.lang.String) -> unregisterPublisher
    700:700:java.lang.Object[] lookupNode(java.lang.String,java.lang.String) -> lookupNode
    711:718:java.lang.Object[] getTopicTypes(java.lang.String) -> getTopicTypes
    725:725:java.lang.String getTopicType(java.lang.String) -> getTopicType
    733:733:java.lang.Object[] getUri(java.lang.String) -> getUri
    742:742:java.lang.Object[] lookupService(java.lang.String,java.lang.String) -> lookupService
    752:752:java.lang.Object[] getPublishedTopics(java.lang.String,java.lang.String) -> getPublishedTopics
    760:762:void shutdown() -> shutdown
    770:770:boolean isInitialized() -> isInitialized
    794:794:java.lang.Object[] getBusStats(java.lang.String) -> getBusStats
    814:814:java.lang.Object[] getBusInfo(java.lang.String) -> getBusInfo
    821:821:java.net.URL getMasterURL() -> getMasterURL
    832:832:java.lang.Object[] getMasterUri(java.lang.String) -> getMasterUri
    845:845:java.lang.Object[] shutdown(java.lang.String,java.lang.String) -> shutdown
    856:856:java.lang.Object[] getPid(java.lang.String) -> getPid
    868:868:java.lang.Object[] getSubscriptions(java.lang.String) -> getSubscriptions
    880:880:java.lang.Object[] getPublications(java.lang.String) -> getPublications
    894:894:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.lang.Object) -> paramUpdate
    908:908:java.lang.Object[] publisherUpdate(java.lang.String,java.lang.String,java.lang.String[]) -> publisherUpdate
    917:962:void updateSystemState(java.lang.String) -> updateSystemState
    973:974:org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates getSystemState(java.lang.String) -> getSystemState
    982:982:org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates getSystemStateObject() -> getSystemStateObject
    1023:1023:java.lang.Object[] requestTopic(java.lang.String,java.lang.String,java.lang.Object[]) -> requestTopic
    1033:1197:void getTopic(int) -> getTopic
    1232:1290:void joinTCPUDPPublishers(int,java.lang.String) -> joinTCPUDPPublishers
    1298:1312:void addUDPPublisherSubscriber(int,java.lang.String,int,int) -> addUDPPublisherSubscriber
    1318:1327:void removeUDPPublisherSubscriber(int,java.lang.String,java.lang.String,int) -> removeUDPPublisherSubscriber
    1333:1333:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveParameterListener getParameterListener() -> getParameterListener
    1341:1341:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSubscriber getROSSlaveGroup(int) -> getROSSlaveGroup
    1352:1359:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSubscriber getROSSlaveGroup(java.lang.String) -> getROSSlaveGroup
    1372:1372:java.lang.Object[] getBusStatsForSlave(java.lang.String) -> getBusStatsForSlave
    1390:1460:java.lang.Object[] getBusInfoForSlave(java.lang.String) -> getBusInfoForSlave
    1469:1587:void updateServiceAPIsTableData() -> updateServiceAPIsTableData
    1652:1656:void reinitialize() -> reinitialize
    1665:2165:void initialize() -> initialize
    2171:2171:java.lang.String[] getTopicSubscriberAPIs() -> getTopicSubscriberAPIs
    2178:2178:java.lang.String[] getTopicPublisherURLs() -> getTopicPublisherURLs
    2187:2268:boolean launchSubscriber(java.lang.String) -> launchSubscriber
    2280:2300:void destroySubscriber(java.lang.String) -> destroySubscriber
    2309:2310:boolean launchPublisher(java.lang.String) -> launchPublisher
    2322:2374:boolean launchPublisher(int,java.lang.String) -> launchPublisher
    2386:2406:void destroyPublisher(java.lang.String) -> destroyPublisher
    2418:2462:boolean launchService(java.lang.String) -> launchService
    2472:2484:void destroyService(java.lang.String) -> destroyService
    2493:2499:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getService(java.lang.String) -> getService
    2509:2515:org.happy.artist.rmdmia.rcsm.provider.CommunicationReceiverInterface getSubscriber(java.lang.String) -> getSubscriber
    2525:2531:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getPublisher(java.lang.String) -> getPublisher
    2539:2721:void populateTopicRegistry() -> populateTopicRegistry
    2729:2860:java.lang.Object[][] getMonitoringInformation() -> getMonitoringInformation
    2866:2866:java.lang.Object[] getMonitoringTableColumnNames() -> getMonitoringTableColumnNames
    2875:2875:org.happy.artist.rmdmia.rcsm.provider.message.SubscriberMessageManager getSubscriberMessageManager() -> getSubscriberMessageManager
    2899:2930:java.util.Map getSenderLookupMap() -> getSenderLookupMap
    2947:2961:java.util.Map getSenderSubscriberLookupMap() -> getSenderSubscriberLookupMap
    2978:2992:java.util.Map getSenderPublisherLookupMap() -> getSenderPublisherLookupMap
    3009:3023:java.util.Map getSenderServiceLookupMap() -> getSenderServiceLookupMap
    3031:3036:boolean getIsSubscribable(java.lang.String) -> getIsSubscribable
    3044:3050:boolean getIsPublishable(java.lang.String) -> getIsPublishable
    3059:3059:java.lang.String getTopicByIndice(int) -> getTopicByIndice
    3071:3071:java.lang.String[] getTopicSenderNames() -> getTopicSenderNames
    3080:3080:java.lang.String getServiceByIndice(int) -> getServiceByIndice
    3092:3092:java.lang.String[] getServiceSenderNames() -> getServiceSenderNames
    3104:3104:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] getPublisherSenders() -> getPublisherSenders
    3116:3116:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] getSubscriberSenders() -> getSubscriberSenders
    3128:3128:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface[] getServiceSenders() -> getServiceSenders
    3164:3198:void sendServiceMessage(byte[],org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> sendServiceMessage
    3206:3206:java.lang.String getCallerID() -> getCallerID
    3211:3211:double getVersion() -> getVersion
    3216:3216:java.lang.String getName() -> getName
    3221:3221:boolean recycle() -> recycle
    3228:3228:org.happy.artist.rmdmia.instruction.InstructionDefinition getInstructionDefinition() -> getInstructionDefinition
org.happy.artist.rmdmia.rcsm.providers.ros.ROSPublisher -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSPublisher:
    java.lang.String topic -> a
    28:29:void setTopic(java.lang.String) -> setTopic
    34:34:java.lang.String getTopic() -> getTopic
    60:60:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave:
    org.apache.xmlrpc.client.XmlRpcClient client -> a
    org.apache.xmlrpc.client.XmlRpcClientConfigImpl xmlRPCClientConfig -> b
    org.apache.xmlrpc.server.XmlRpcServerConfigImpl serverConfig -> c
    org.apache.xmlrpc.webserver.WebServer httpServer -> d
    org.apache.xmlrpc.server.XmlRpcServer xmlRpcServer -> e
    int callbackPort -> f
    java.lang.Object[] statusResponse -> g
    java.lang.Integer processID -> h
    java.net.URL rosMasterURL -> i
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode node -> j
    java.lang.Integer ignore -> k
    java.lang.String topic -> l
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveParameterListener paramListener -> m
    boolean isListening -> n
    java.net.URL rosTopicURL -> o
    int pid -> p
    java.lang.String strPID -> q
    int count -> r
    int subscriptionCount -> s
    java.lang.Object[] subscriptions -> t
    int pubLoopCount -> u
    int publicationCount -> v
    java.lang.Object[] publications -> w
    java.lang.String method_name -> x
    int param_count -> y
    java.lang.Object type -> z
    java.lang.Object[] pub_object_array -> A
    java.lang.String[] pub_string_array -> B
    int pub_string_convert_loop_counter -> C
    143:170:void start() -> a
    175:175:int getCallbackPort() -> getCallbackPort
    181:181:boolean isListening() -> isListening
    202:206:java.lang.Object[] getBusStats(java.lang.String) -> getBusStats
    226:237:java.lang.Object[] getBusInfo(java.lang.String) -> getBusInfo
    248:251:java.lang.Object[] getMasterUri(java.lang.String) -> getMasterUri
    262:266:java.lang.Object[] shutdown(java.lang.String,java.lang.String) -> shutdown
    283:328:java.lang.Object[] getPid(java.lang.String) -> getPid
    347:373:java.lang.Object[] getSubscriptions(java.lang.String) -> getSubscriptions
    389:415:java.lang.Object[] getPublications(java.lang.String) -> getPublications
    427:431:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,boolean) -> paramUpdate
    437:441:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,char) -> paramUpdate
    447:451:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,byte) -> paramUpdate
    457:461:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,short) -> paramUpdate
    467:471:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,int) -> paramUpdate
    477:481:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,double) -> paramUpdate
    487:491:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.lang.String) -> paramUpdate
    497:501:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.util.List) -> paramUpdate
    507:511:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.util.Vector) -> paramUpdate
    517:521:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.util.Map) -> paramUpdate
    535:582:java.lang.Object[] publisherUpdate(java.lang.String,java.lang.String,java.lang.String[]) -> publisherUpdate
    632:646:java.lang.Object[] requestTopic(java.lang.String,java.lang.String,java.lang.Object[]) -> requestTopic
    669:844:java.lang.Object[] requestTopic(java.lang.String,java.lang.Object[]) -> requestTopic
    851:855:int shutdown() -> shutdown
    861:862:void setIsListening(boolean) -> setIsListening
    873:1158:java.lang.Object execute(org.apache.xmlrpc.XmlRpcRequest) -> execute
    1166:1166:org.apache.xmlrpc.XmlRpcHandler getHandler(java.lang.String) -> getHandler
    1172:1172:org.apache.xmlrpc.client.XmlRpcClient getXmlRpcClient() -> getXmlRpcClient
org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveCaller -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveCaller:
    org.apache.xmlrpc.client.XmlRpcClient client -> a
    org.apache.xmlrpc.client.XmlRpcClientConfigImpl topicClientConfig -> b
    java.lang.Object[] response -> c
    int responseStatus -> d
    java.lang.String caller_id -> e
    66:83:java.lang.Object[] getBusStats(java.lang.String) -> getBusStats
    102:119:java.lang.Object[] getBusInfo(java.lang.String) -> getBusInfo
    130:147:java.lang.Object[] getMasterUri(java.lang.String) -> getMasterUri
    159:178:java.lang.Object[] shutdown(java.lang.String,java.lang.String) -> shutdown
    189:206:java.lang.Object[] getPid(java.lang.String) -> getPid
    217:234:java.lang.Object[] getSubscriptions(java.lang.String) -> getSubscriptions
    246:263:java.lang.Object[] getPublications(java.lang.String) -> getPublications
    276:293:java.lang.Object[] paramUpdate(java.lang.String,java.lang.String,java.lang.Object) -> paramUpdate
    307:324:java.lang.Object[] publisherUpdate(java.lang.String,java.lang.String,java.lang.String[]) -> publisherUpdate
    353:372:java.lang.Object[] requestTopic(java.lang.String,java.lang.String,java.lang.Object[]) -> requestTopic
    382:395:void shutdown() -> shutdown
    400:400:org.apache.xmlrpc.client.XmlRpcClient getXmlRpcClient() -> getXmlRpcClient
org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveParameterListener -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveParameterListener:
    18:18:void registerParameter(java.lang.String,java.lang.String,java.lang.String) -> registerParameter
    23:24:void update(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> update
org.happy.artist.rmdmia.rcsm.providers.ros.ROSSubscriber -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSSubscriber:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveCaller[] callers -> callers
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave[] slaves -> slaves
    java.lang.String[] publicationURIs -> publicationURIs
    boolean[] isAvailable -> isAvailable
    int latchedSlaves -> a
    java.lang.String topic -> topic
    java.lang.String topicType -> topicType
    int topicIndice -> topicIndice
    int initialGroupSize -> b
    int countPubURIs -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> d
    int addLoopCount -> e
    int removeLoopCount -> f
    int pubUpdateCount -> g
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave pubUpdateSlave -> h
    int pubUpdateCallbackPort -> i
    int isConnectedLoopCount -> j
    int count -> k
    91:152:void add(java.net.URL) -> add
    157:170:void set(java.net.URL,int,int) -> set
    177:195:void remove(java.lang.String) -> remove
    202:210:void remove(int) -> remove
    216:225:boolean isConnected(java.lang.String) -> isConnected
    232:232:boolean isConnected(int) -> isConnected
    240:308:void publisherUpdate(java.lang.String,java.lang.String,java.lang.String[]) -> publisherUpdate
    317:332:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave getSlaveByPublisherURI(java.lang.String) -> getSlaveByPublisherURI
    340:346:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlave getSlaveByPublisherURI(int) -> getSlaveByPublisherURI
    355:367:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveCaller getSlaveCallerByPublisherURI(java.lang.String) -> getSlaveCallerByPublisherURI
    375:381:org.happy.artist.rmdmia.rcsm.providers.ros.ROSSlaveCaller getSlaveCallerByPublisherURI(int) -> getSlaveCallerByPublisherURI
    434:434:java.lang.String getTopic() -> getTopic
    441:441:java.lang.String getTopicType() -> getTopicType
    447:447:int getInitialGroupSize() -> getInitialGroupSize
    453:453:int getSlaveCount() -> getSlaveCount
    461:482:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates:
    java.lang.String[] subTopicNames -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates$ROSTopicState[] subTopics -> b
    java.lang.String[] pubTopicNames -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates$ROSTopicState[] pubTopics -> d
    java.lang.String[] serviceNames -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates$ROSTopicState[] services -> f
    boolean[] sub_topic_states -> g
    boolean[] pub_topic_states -> h
    boolean[] service_states -> i
    boolean purgeTopicsOnReset -> j
    int arrayLength -> k
    int removeCounter -> l
    int currentIndice -> m
    int appendSubIndice -> n
    int appendPubIndice -> o
    int appendServiceIndice -> p
    int topicServiceID -> q
    int topicSubscriberID -> r
    int topicPublisherID -> s
    java.lang.String[] serviceArray -> t
    int serviceCount -> u
    int count1 -> v
    java.lang.String[] result -> w
    java.lang.String[] returnResult -> x
    int i_count -> y
    int j_count -> z
    int subTopicNamesLength -> A
    int pubTopicNamesLength -> B
    int strCount -> C
    int counter -> D
    66:67:void setPurgeTopicsOnReset(boolean) -> setPurgeTopicsOnReset
    72:72:boolean isPurgeTopicsOnReset() -> isPurgeTopicsOnReset
    80:95:void updateStart() -> updateStart
    100:181:void updateDone() -> updateDone
    194:225:java.lang.String[] getServices() -> getServices
    281:320:java.lang.String[] getTopics() -> getTopics
    327:327:java.lang.String[] getPublishable() -> getPublishable
    333:333:java.lang.String[] getSubscribable() -> getSubscribable
    339:354:int getTopicSubscriberIndice(java.lang.String) -> getTopicSubscriberIndice
    360:375:int getPublisherTopicIndice(java.lang.String) -> getPublisherTopicIndice
    381:396:int getServiceIndice(java.lang.String) -> getServiceIndice
    402:402:java.lang.String getSubscriberTopicName(int) -> getSubscriberTopicName
    408:408:java.lang.String getPublisherTopicName(int) -> getPublisherTopicName
    414:414:java.lang.String getServiceName(int) -> getServiceName
    420:420:java.lang.Object[] getTopicPublishers(int) -> getTopicPublishers
    426:426:java.lang.Object[] getTopicSubscribers(int) -> getTopicSubscribers
    432:432:java.lang.Object[] getTopicServices(int) -> getTopicServices
    438:440:void setTopicPublishers(int,java.lang.Object[]) -> setTopicPublishers
    445:455:void setTopicPublishers(java.lang.String,java.lang.Object[]) -> setTopicPublishers
    460:462:void setTopicSubscribers(int,java.lang.Object[]) -> setTopicSubscribers
    467:477:void setTopicSubscribers(java.lang.String,java.lang.Object[]) -> setTopicSubscribers
    482:484:void setTopicServices(int,java.lang.Object[]) -> setTopicServices
    490:503:void setTopicServices(java.lang.String,java.lang.Object[]) -> setTopicServices
    606:615:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates$ROSTopicState -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicStates$a:
    java.lang.String topicName -> a
    java.lang.Object[] publishers -> b
    java.lang.Object[] subscribers -> c
    java.lang.Object[] services -> d
    java.lang.String[] resetArray -> e
    568:571:void reset() -> a
org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicTypeLookup -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSTopicTypeLookup:
    java.lang.Object[] topics -> a
    java.lang.Object[] topicTypes -> b
    java.lang.Object[] keyValuePair -> c
    int currentIndice -> d
    36:45:java.lang.String getTopicType(java.lang.String) -> getTopicType
    61:61:java.lang.Object[] getTopics() -> getTopics
    67:67:java.lang.Object[] getTopicTypes() -> getTopicTypes
org.happy.artist.rmdmia.rcsm.providers.ros.ROSXMLRPCException -> org.happy.artist.rmdmia.rcsm.providers.ros.ROSXMLRPCException:
org.happy.artist.rmdmia.rcsm.providers.ros.TCPROSSensorProcessorImpl -> org.happy.artist.rmdmia.rcsm.providers.ros.TCPROSSensorProcessorImpl:
    19:19:void recycle() -> recycle
    25:30:org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage) -> process
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    boolean latching -> latching
    java.lang.String callerid -> callerid
    java.lang.String md5sum -> md5sum
    java.lang.String type -> type
    75:93:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage updateLatching(boolean) -> updateLatching
    99:131:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage updateError(java.lang.String) -> updateError
    137:137:byte[] getMessage() -> getMessage
    143:143:boolean isReady() -> isReady
    149:171:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSInstructionDefinition -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSInstructionDefinition:
    java.lang.String[] msg_extensions -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSRunnableInstructionBuilder builder -> b
    33:33:java.lang.String[] getSchemaFileExtensions() -> getSchemaFileExtensions
    45:49:org.happy.artist.rmdmia.instruction.utility.RunnableInstructionBuilder getRunnableInstructionBuilder() -> getRunnableInstructionBuilder
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder:
    int LENGTH_FIELD -> LENGTH_FIELD
    java.lang.StringBuilder messageStringBuilder -> a
    int curPos -> b
    int msgLength -> c
    int fieldLength -> d
    int pmLoopCount -> e
    java.lang.StringBuilder builder -> f
    int hexLoopCount -> g
    int firstDigit -> h
    int lastDigit -> i
    int hexDec -> j
    char[] hexArray -> k
    char[] hexChars -> l
    int v -> m
    int endIndex -> n
    int hexArrayIndex -> o
    int b2hLoopCount -> p
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> q
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage rosMessage -> r
    53:53:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage getMessage(byte[],java.lang.String) -> getMessage
    64:67:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage getMessage(byte[]) -> getMessage
    80:125:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage getInitializationMessage(byte[],java.lang.String,boolean) -> getInitializationMessage
    138:183:org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage getUDPInitializationMessage(byte[],java.lang.String,boolean) -> getUDPInitializationMessage
    299:310:java.lang.String convertHexToString(char[]) -> convertHexToString
    315:349:void processMessage(byte[]) -> processMessage
    357:372:void bytesToHex(byte[],int,int,java.lang.StringBuilder) -> bytesToHex
    381:413:void bytesToROSMessage(byte[],int,int,org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage) -> bytesToROSMessage
    417:420:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSServiceMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSServiceMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String service -> service
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    80:80:byte[] getMessage() -> getMessage
    86:86:boolean isReady() -> isReady
    92:114:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String topic -> topic
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    70:70:byte[] getMessage() -> getMessage
    76:76:boolean isReady() -> isReady
    82:104:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TopicRegistry registry -> a
    java.lang.Object[] keys -> b
    java.lang.String[] keySplitArray -> c
    int keyCount -> d
    int[] topicIDs -> e
    int[] tidVariables -> f
    int messageDefCount -> g
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] messageDefinitions -> h
    int tid -> i
    int tidVar -> j
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> k
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage[] subscriberMessages -> l
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage[] publisherMessages -> m
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage[] serviceMessages -> n
    java.lang.String caller_id -> o
    java.lang.String definitionID -> p
    boolean write_file_success -> q
    int removeElementIndex -> r
    int count -> s
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] replacementArray -> t
    int currentTID -> u
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> v
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConverter -> w
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> rosNode
    int updateCount -> x
    int serviceCount -> y
    int subscriberCount -> z
    java.lang.String tmpCallerID -> A
    java.lang.String tmpTopic -> B
    java.lang.String tmpService -> C
    java.lang.String tmpMD5Sum -> D
    java.lang.String tmpType -> E
    java.lang.String tmpTCP_Nodelay -> F
    java.lang.String tmpPersistent -> G
    java.lang.String tmpLatching -> H
    boolean boolPersistent -> I
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage tmpSubscriberMessage -> J
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage tmpServiceMessage -> K
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage tmpPublisherMessage -> L
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition tmpDefinition -> M
    boolean definitionExists -> N
    122:128:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager getInstance(java.lang.String,org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode) -> getInstance
    143:143:org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode getROSNode() -> getROSNode
    149:149:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] getTopicDefinitions() -> getTopicDefinitions
    155:183:void main(java.lang.String[]) -> main
    188:356:void updateSubscriberMessages() -> a
    379:529:void updateAvailableMessages() -> b
    534:534:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage[] getAvailableSubscriptionMessages() -> getAvailableSubscriptionMessages
    540:540:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.PublisherMessage[] getAvailablePublisherMessages() -> getAvailablePublisherMessages
    546:546:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage[] getAvailableServiceMessages() -> getAvailableServiceMessages
    555:650:boolean add(org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition) -> add
    658:725:boolean remove(org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition) -> remove
    731:744:int getTIDByTopicName(java.lang.String) -> getTIDByTopicName
    750:763:int getTIDByServiceName(java.lang.String) -> getTIDByServiceName
    769:781:int getIndexByServiceName(java.lang.String) -> getIndexByServiceName
    787:796:int getIndexByTopicName(java.lang.String) -> getIndexByTopicName
    801:801:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition getTopicRegistryMessageDefinitionByTID(int) -> getTopicRegistryMessageDefinitionByTID
    51:51:org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition getTopicRegistryMessageDefinitionByTID(int) -> getTopicRegistryMessageDefinitionByTID
    51:51:org.happy.artist.rmdmia.rcsm.provider.message.TopicRegistryMessageDefinition[] getTopicDefinitions() -> getTopicDefinitions
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition:
    int tid -> tid
    java.lang.String topic -> topic
    java.lang.String md5sum -> md5sum
    java.lang.String type -> type
    java.lang.String request_type -> request_type
    java.lang.String response_type -> response_type
    java.lang.String request_type_definition -> request_type_definition
    java.lang.String response_type_definition -> response_type_definition
    java.lang.String tcp_nodelay -> tcp_nodelay
    java.lang.String definition -> definition
    java.lang.String service -> service
    java.lang.String connect_on_start -> connect_on_start
    java.lang.String publisher_connect_on_start -> publisher_connect_on_start
    java.lang.String always_connected -> always_connected
    java.lang.String persistant -> persistant
    java.lang.String latching -> latching
    java.lang.String callerid -> callerid
    java.lang.String redirect_class -> redirect_class
    java.lang.String redirect_class_initializer -> redirect_class_initializer
    java.lang.String redirect_class_tuner -> redirect_class_tuner
    java.lang.String publisher_redirect_class -> publisher_redirect_class
    java.lang.String publisher_redirect_class_initializer -> publisher_redirect_class_initializer
    java.lang.String publisher_redirect_class_tuner -> publisher_redirect_class_tuner
    java.lang.String preferred_protocol -> preferred_protocol
    java.lang.String tcp_block_size -> tcp_block_size
    java.lang.String udp_packet_size -> udp_packet_size
    99:110:java.lang.String getTopicName() -> getTopicName
    118:118:java.lang.String getTopicType() -> getTopicType
    125:125:java.lang.String getTopicDefinition() -> getTopicDefinition
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String service -> service
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    boolean isInitialized -> g
    53:53:boolean isInitializedMessage() -> isInitializedMessage
    58:87:void setInitializationMessage(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,boolean) -> setInitializationMessage
    95:124:void setInitializedMessage(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,boolean) -> setInitializedMessage
    129:129:byte[] getMessage() -> getMessage
    135:135:boolean isReady() -> isReady
    141:163:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceProbeMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ServiceProbeMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String service -> service
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    boolean isInitialized -> g
    48:48:boolean isInitializedMessage() -> isInitializedMessage
    53:66:void setInitializationMessage(java.lang.String,java.lang.String) -> setInitializationMessage
    71:71:byte[] getMessage() -> getMessage
    77:77:boolean isReady() -> isReady
    83:105:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.SubscriberMessage:
    byte[] message -> a
    boolean isReady -> b
    java.lang.String topic -> topic
    java.lang.String hexFieldLength -> c
    int fieldLength -> d
    java.lang.StringBuilder sb -> e
    org.happy.artist.rmdmia.utilities.HexStringConverter hexConvert -> f
    70:70:byte[] getMessage() -> getMessage
    76:76:boolean isReady() -> isReady
    82:104:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TCPROSMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TCPROSMessage:
    java.lang.String callerid -> callerid
    java.lang.String topic -> topic
    java.lang.String service -> service
    java.lang.String md5sum -> md5sum
    java.lang.String type -> type
    java.lang.String message_definition -> message_definition
    java.lang.String error -> error
    java.lang.String persistent -> persistent
    java.lang.String tcp_nodelay -> tcp_nodelay
    java.lang.String latching -> latching
    byte[] binary_body -> binary_body
    java.lang.String hexFieldLength -> a
    int fieldLength -> b
    50:50:byte[] getSubscriptionInitMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getSubscriptionInitMessage
    56:78:java.lang.String setPrependROSFieldLength(java.lang.String) -> setPrependROSFieldLength
    84:92:java.lang.String generateCodeForFinalByteArray(java.lang.String) -> generateCodeForFinalByteArray
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TopicRegistry -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TopicRegistry:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TopicRegistry topicRegistry -> c
    53:57:org.happy.artist.rmdmia.rcsm.providers.ros.client.message.TopicRegistry getInstance() -> getInstance
    65:104:boolean writeFile() -> writeFile
    113:138:boolean readPropertiesFile() -> readPropertiesFile
    145:146:void setFileName(java.lang.String) -> setFileName
    151:151:java.lang.String getFileName() -> getFileName
    158:163:boolean put(java.lang.String,java.lang.String) -> put
    171:175:java.lang.String get(java.lang.String) -> get
    183:188:boolean remove(java.lang.String) -> remove
    194:194:com.trinity.ea.util.EAProperties getProperties() -> getProperties
    200:201:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.DefinitionToInputHandlerGenerator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.DefinitionToInputHandlerGenerator:
    java.lang.String lineSeparator -> a
    java.lang.String[] zero_length_array -> b
    38:46:void main(java.lang.String[]) -> main
    55:316:java.lang.String process(int,java.lang.String,java.lang.String,java.lang.String,org.happy.artist.rmdmia.Controller) -> process
    605:1063:java.lang.String getProcessSource$7457efdd(int,java.lang.String,java.util.Map,org.happy.artist.rmdmia.Controller,boolean,java.util.HashMap,java.util.Map) -> a
    1080:1310:java.lang.Object[] getObjectSource$a0b70cf(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,java.util.Map,org.happy.artist.rmdmia.Controller) -> a
    1316:1316:java.lang.String nullStringToEmptyString(java.lang.String) -> a
    1343:1350:java.lang.String[] getVariableType(java.lang.String) -> b
    1357:1398:java.lang.String getSchemaFile(java.lang.String,org.happy.artist.rmdmia.Controller) -> a
    1404:1436:java.util.List getUndefinedObjectTypes(java.util.Map) -> a
    1445:1471:boolean isObjectTypeInMap(java.lang.String,java.util.Map) -> a
    1482:1508:java.lang.String getObjectTypeDefinitionInMap(java.lang.String,java.util.Map) -> b
    1518:1541:java.lang.String getHeaderSource(java.util.HashMap) -> a
    1590:1595:boolean getIsTypeArray(java.lang.String) -> getIsTypeArray
    1603:1623:int getFixedTypeArrayLength(java.lang.String) -> getFixedTypeArrayLength
    1633:1795:int getTypeLength(java.lang.String) -> getTypeLength
    1802:1824:boolean getIsDefinitionFixedLength(java.util.Map) -> b
    1829:1874:int getDefinitionFixedLength(java.util.Map) -> c
    1902:1930:boolean getIsFixedLength(java.lang.String) -> c
    1941:2175:java.lang.String getJavaType(java.lang.String,org.happy.artist.rmdmia.Controller) -> getJavaType
    2189:2489:java.lang.String getFixedROSTypeJavaSource(java.lang.String,java.lang.String,int) -> a
    2611:2778:java.lang.String getVariableROSTypeJavaSource(java.lang.String,java.lang.String,java.lang.String) -> a
    2893:2913:int getROSTypeFixedArrayLength(java.lang.String) -> d
    2927:2933:java.lang.String getReadSchemaFile(java.lang.String,org.happy.artist.rmdmia.Controller,java.lang.String) -> getReadSchemaFile
    2942:2971:java.lang.String[] process(java.lang.String) -> process
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.DefinitionToMessageGenerator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.DefinitionToMessageGenerator:
    java.lang.String lineSeparator -> a
    java.lang.String[] zero_length_array -> b
    25:41:void main(java.lang.String[]) -> main
    50:480:java.lang.String process(int,java.lang.String,java.lang.String,java.lang.String,org.happy.artist.rmdmia.Controller) -> process
    486:509:java.lang.String getHeaderSource(java.util.HashMap) -> a
    515:553:boolean isCustomType(java.lang.String) -> a
    561:860:java.lang.String getJavaType(int,java.lang.String,org.happy.artist.rmdmia.Controller) -> getJavaType
    928:951:java.lang.String[] process(java.lang.String) -> process
    961:1056:java.lang.String getObjectPoolSRC(java.lang.String,java.lang.String) -> getObjectPoolSRC
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.JavaToROSTypes -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.JavaToROSTypes:
    org.happy.artist.rmdmia.utilities.HexStringConverter hexStringConverter -> a
    22:22:java.lang.String getHexString(java.lang.String) -> getHexString
    30:30:byte[] getString(java.lang.String) -> getString
    36:36:java.lang.String getHexFloat32(float) -> getHexFloat32
    42:48:byte[] getFloat32(float) -> getFloat32
    54:66:byte[] getFloat32Array(float[]) -> getFloat32Array
    73:73:java.lang.String getHexFloat64(double) -> getHexFloat64
    79:89:byte[] getFloat64(double) -> getFloat64
    95:111:byte[] getFloat64Array(double[]) -> getFloat64Array
    131:131:java.lang.String getHexInt64(long) -> getHexInt64
    137:146:byte[] getInt64(long) -> getInt64
    152:152:byte getBool(boolean) -> getBool
    158:158:java.lang.String getHexBool(boolean) -> getHexBool
    164:170:byte[] getBoolArray(boolean[]) -> getBoolArray
    176:189:byte[] getInt64Array(long[]) -> getInt64Array
    195:195:java.lang.String getHexUInt64(long) -> getHexUInt64
    201:210:byte[] getUInt64(long) -> getUInt64
    217:230:byte[] getUInt64Array(long[]) -> getUInt64Array
    236:236:java.lang.String getHexUInt32(long) -> getHexUInt32
    242:247:byte[] getUInt32(long) -> getUInt32
    254:263:byte[] getUInt32Array(long[]) -> getUInt32Array
    269:269:java.lang.String getHexInt32(int) -> getHexInt32
    275:280:byte[] getInt32(int) -> getInt32
    286:295:byte[] getInt32Array(int[]) -> getInt32Array
    301:301:java.lang.String getHexUInt16(short) -> getHexUInt16
    307:310:byte[] getUInt16(int) -> getUInt16
    316:323:byte[] getUInt16Array(int[]) -> getUInt16Array
    329:329:java.lang.String getHexInt16(short) -> getHexInt16
    335:338:byte[] getInt16(short) -> getInt16
    344:351:byte[] getInt16Array(short[]) -> getInt16Array
    358:358:java.lang.String getHexInt8(short) -> getHexInt8
    364:364:byte getInt8(short) -> getInt8
    370:376:byte[] getInt8Array(short[]) -> getInt8Array
    382:382:java.lang.String getHexUInt8(short) -> getHexUInt8
    388:388:byte getUInt8(short) -> getUInt8
    394:400:byte[] getUInt8Array(short[]) -> getUInt8Array
    405:406:void main(java.lang.String[]) -> main
    411:416:byte[] getByteArrayLengthInBytes(int) -> getByteArrayLengthInBytes
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.JavaToROSTypesSource -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.JavaToROSTypesSource:
    org.happy.artist.rmdmia.utilities.HexStringConverter hexStringConverter -> a
    22:22:java.lang.String getHexString(java.lang.String) -> getHexString
    30:30:byte[] getString(java.lang.String) -> getString
    36:36:java.lang.String getHexFloat32(float) -> getHexFloat32
    42:48:byte[] getFloat32(float) -> getFloat32
    54:66:byte[] getFloat32Array(float[]) -> getFloat32Array
    72:88:java.lang.String getFixedFloat32(int,java.lang.String) -> getFixedFloat32
    94:119:java.lang.String getFixedFloat32Array(int,int,java.lang.String) -> getFixedFloat32Array
    124:146:java.lang.String getVariableFloat32(java.lang.String,java.lang.String) -> getVariableFloat32
    153:182:java.lang.String getVariableFloat32Array(java.lang.String,java.lang.String) -> getVariableFloat32Array
    188:188:java.lang.String getHexFloat64(double) -> getHexFloat64
    193:221:java.lang.String getFixedFloat64(int,java.lang.String) -> getFixedFloat64
    227:264:java.lang.String getFixedFloat64Array(int,int,java.lang.String) -> getFixedFloat64Array
    269:303:java.lang.String getVariableFloat64(java.lang.String,java.lang.String) -> getVariableFloat64
    309:342:java.lang.String getVariableFloat64Array(java.lang.String,java.lang.String) -> getVariableFloat64Array
    361:361:java.lang.String getHexInt64(long) -> getHexInt64
    368:377:byte[] getInt64(long) -> getInt64
    383:424:java.lang.String getFixedInt64(int,java.lang.String) -> getFixedInt64
    430:478:java.lang.String getVariableInt64(java.lang.String,java.lang.String) -> getVariableInt64
    484:525:java.lang.String getFixedInt64Array(int,int,java.lang.String) -> getFixedInt64Array
    531:565:java.lang.String getVariableInt64Array(java.lang.String,java.lang.String) -> getVariableInt64Array
    571:580:byte[] getUInt64(long) -> getUInt64
    586:627:java.lang.String getFixedUInt64(int,java.lang.String) -> getFixedUInt64
    633:681:java.lang.String getVariableUInt64(java.lang.String,java.lang.String) -> getVariableUInt64
    687:728:java.lang.String getFixedUInt64Array(int,int,java.lang.String) -> getFixedUInt64Array
    734:768:java.lang.String getVariableUInt64Array(java.lang.String,java.lang.String) -> getVariableUInt64Array
    774:774:byte getBool(boolean) -> getBool
    780:786:java.lang.String getFixedBool(int,java.lang.String) -> getFixedBool
    793:805:java.lang.String getVariableBool(java.lang.String,java.lang.String) -> getVariableBool
    811:827:java.lang.String getFixedBoolArray(int,int,java.lang.String) -> getFixedBoolArray
    833:858:java.lang.String getVariableBoolArray(java.lang.String,java.lang.String) -> getVariableBoolArray
    865:865:java.lang.String getHexBool(boolean) -> getHexBool
    871:877:byte[] getBoolArray(boolean[]) -> getBoolArray
    883:896:byte[] getInt64Array(long[]) -> getInt64Array
    902:902:java.lang.String getHexUInt64(long) -> getHexUInt64
    911:924:byte[] getUInt64Array(long[]) -> getUInt64Array
    930:930:java.lang.String getHexUInt32(long) -> getHexUInt32
    936:941:byte[] getUInt32(long) -> getUInt32
    947:968:java.lang.String getFixedUInt32(int,java.lang.String) -> getFixedUInt32
    974:1002:java.lang.String getVariableUInt32(java.lang.String,java.lang.String) -> getVariableUInt32
    1008:1033:java.lang.String getFixedUInt32Array(int,int,java.lang.String) -> getFixedUInt32Array
    1039:1069:java.lang.String getVariableUInt32Array(java.lang.String,java.lang.String) -> getVariableUInt32Array
    1076:1085:byte[] getUInt32Array(long[]) -> getUInt32Array
    1091:1091:java.lang.String getHexInt32(int) -> getHexInt32
    1097:1102:byte[] getInt32(int) -> getInt32
    1108:1130:java.lang.String getFixedInt32(int,java.lang.String) -> getFixedInt32
    1136:1163:java.lang.String getVariableInt32(java.lang.String,java.lang.String) -> getVariableInt32
    1169:1194:java.lang.String getFixedInt32Array(int,int,java.lang.String) -> getFixedInt32Array
    1200:1230:java.lang.String getVariableInt32Array(java.lang.String,java.lang.String) -> getVariableInt32Array
    1236:1245:byte[] getInt32Array(int[]) -> getInt32Array
    1251:1251:java.lang.String getHexUInt16(short) -> getHexUInt16
    1257:1260:byte[] getUInt16(int) -> getUInt16
    1266:1277:java.lang.String getFixedUInt16(int,java.lang.String) -> getFixedUInt16
    1283:1301:java.lang.String getVariableUInt16(java.lang.String,java.lang.String) -> getVariableUInt16
    1307:1326:java.lang.String getFixedUInt16Array(int,int,java.lang.String) -> getFixedUInt16Array
    1332:1360:java.lang.String getVariableUInt16Array(java.lang.String,java.lang.String) -> getVariableUInt16Array
    1367:1374:byte[] getUInt16Array(int[]) -> getUInt16Array
    1380:1380:java.lang.String getHexInt16(short) -> getHexInt16
    1386:1389:byte[] getInt16(short) -> getInt16
    1395:1407:java.lang.String getFixedInt16(int,java.lang.String) -> getFixedInt16
    1413:1430:java.lang.String getVariableInt16(java.lang.String,java.lang.String) -> getVariableInt16
    1436:1455:java.lang.String getFixedInt16Array(int,int,java.lang.String) -> getFixedInt16Array
    1461:1489:java.lang.String getVariableInt16Array(java.lang.String,java.lang.String) -> getVariableInt16Array
    1496:1503:byte[] getInt16Array(short[]) -> getInt16Array
    1510:1510:java.lang.String getHexInt8(short) -> getHexInt8
    1516:1516:byte getInt8(byte) -> getInt8
    1522:1528:java.lang.String getFixedInt8(int,java.lang.String) -> getFixedInt8
    1534:1546:java.lang.String getVariableInt8(java.lang.String,java.lang.String) -> getVariableInt8
    1551:1567:java.lang.String getFixedInt8Array(int,int,java.lang.String) -> getFixedInt8Array
    1573:1600:java.lang.String getVariableInt8Array(java.lang.String,java.lang.String) -> getVariableInt8Array
    1607:1607:java.lang.String getHexUInt8(short) -> getHexUInt8
    1613:1613:byte getUInt8(short) -> getUInt8
    1619:1625:java.lang.String getFixedUInt8(int,java.lang.String) -> getFixedUInt8
    1631:1644:java.lang.String getVariableUInt8(java.lang.String,java.lang.String) -> getVariableUInt8
    1650:1666:java.lang.String getFixedUInt8Array(int,int,java.lang.String) -> getFixedUInt8Array
    1672:1699:java.lang.String getVariableUInt8Array(java.lang.String,java.lang.String) -> getVariableUInt8Array
    1706:1712:byte[] getUInt8Array(short[]) -> getUInt8Array
    1739:1788:java.lang.String getVariableString(java.lang.String,java.lang.String) -> getVariableString
    1794:1923:java.lang.String getVariableHeader(java.lang.String,java.lang.String) -> getVariableHeader
    1929:1993:java.lang.String getFixedStringArray(java.lang.String,java.lang.String,int) -> getFixedStringArray
    1999:2070:java.lang.String getVariableStringArray(java.lang.String,java.lang.String) -> getVariableStringArray
    2075:2076:void main(java.lang.String[]) -> main
    2081:2086:byte[] getByteArrayLengthInBytes(int) -> getByteArrayLengthInBytes
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.OutputHandlerToMessageGenerator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.OutputHandlerToMessageGenerator:
    java.lang.String lineSeparator -> a
    java.lang.String[] zero_length_array -> b
    37:45:void main(java.lang.String[]) -> main
    54:315:java.lang.String process(int,java.lang.String,java.lang.String,java.lang.String,org.happy.artist.rmdmia.Controller) -> process
    842:897:java.lang.String getDefinitionLengthSource(java.lang.String[]) -> a
    903:1182:java.lang.String getDefinitionVariableLengthSource$6df4918(java.util.Map,java.lang.String,org.happy.artist.rmdmia.Controller,boolean,java.util.Map,java.util.Map) -> a
    1204:1501:java.lang.String getDefinitionVariableLengthObjectSource$527a08ef(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,java.util.Map,java.util.Map,org.happy.artist.rmdmia.Controller) -> a
    1511:2041:java.lang.Object[] getProcessSource$3b44bbe3(java.lang.String,java.lang.String,java.util.Map,org.happy.artist.rmdmia.Controller,boolean,boolean,boolean,boolean,java.util.HashMap,java.util.Map,java.util.Map) -> a
    2061:2295:java.lang.Object[] getObjectSource$7d70940e(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,java.util.Map,java.util.Map,org.happy.artist.rmdmia.Controller) -> b
    2301:2301:java.lang.String nullStringToEmptyString(java.lang.String) -> a
    2308:2319:int getArrayLength(java.lang.String) -> b
    2328:2335:java.lang.String[] getVariableType(java.lang.String) -> c
    2342:2383:java.lang.String getSchemaFile(java.lang.String,org.happy.artist.rmdmia.Controller) -> a
    2389:2421:java.util.List getUndefinedObjectTypes(java.util.Map) -> a
    2430:2456:boolean isObjectTypeInMap(java.lang.String,java.util.Map) -> a
    2467:2493:java.lang.String getObjectTypeDefinitionInMap(java.lang.String,java.util.Map) -> b
    2502:2510:java.lang.String getClassVariablesSource(java.util.Map) -> b
    2518:2541:java.lang.String getHeaderSource(java.util.HashMap) -> a
    2590:2595:boolean getIsTypeArray(java.lang.String) -> getIsTypeArray
    2603:2623:int getFixedTypeArrayLength(java.lang.String) -> getFixedTypeArrayLength
    2633:2795:int getTypeLength(java.lang.String) -> getTypeLength
    2802:2824:boolean getIsDefinitionFixedLength(java.util.Map) -> c
    2829:2874:int getDefinitionFixedLength(java.util.Map) -> d
    2880:2894:boolean getIsStringOrHeaderType(java.lang.String) -> d
    2902:2930:boolean getIsFixedLength(java.lang.String) -> e
    2947:3317:java.util.Map updateGlobalMap(java.lang.String,java.util.Map) -> c
    3328:3562:java.lang.String getJavaType(java.lang.String,org.happy.artist.rmdmia.Controller) -> getJavaType
    3577:3877:java.lang.String getFixedROSTypeJavaSource(java.lang.String,java.lang.String,int) -> a
    3999:4149:java.lang.String getVariableROSTypeJavaSource(java.lang.String,java.lang.String,java.lang.String) -> a
    4157:4177:int getROSTypeFixedArrayLength(java.lang.String) -> f
    4191:4197:java.lang.String getReadSchemaFile(java.lang.String,org.happy.artist.rmdmia.Controller,java.lang.String) -> getReadSchemaFile
    4205:4234:java.lang.String[] process(java.lang.String) -> process
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSMessageDefinitionTypeConverter -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSMessageDefinitionTypeConverter:
    char[] hexArray -> a
    org.happy.artist.rmdmia.utilities.HexStringConverter hexStringConverter -> b
    24:32:int getStringLength(java.lang.String) -> getStringLength
    38:39:int getStringToBytesLength(java.lang.String) -> getStringToBytesLength
    44:50:int getStringArrayToBytesLength(java.lang.String[]) -> getStringArrayToBytesLength
    56:71:java.lang.String getString(byte[],int) -> getString
    80:95:byte[] getFixedStringArrayToBytes(byte[],int,java.lang.String[]) -> getFixedStringArrayToBytes
    102:127:java.lang.String[] getFixedStringArray(byte[],int,int) -> getFixedStringArray
    135:149:java.lang.String convertHexToString(char[]) -> a
    156:188:java.lang.String[] getVariableStringArray(byte[],int) -> getVariableStringArray
    196:214:float[] getFloat32Array(byte[],int) -> getFloat32Array
    221:244:double[] getFloat64Array(byte[],int) -> getFloat64Array
    251:266:boolean[] getBoolArray(byte[],int) -> getBoolArray
    273:288:long[] getInt64Array(byte[],int) -> getInt64Array
    295:309:long[] getUInt64Array(byte[],int) -> getUInt64Array
    316:330:long[] getUInt32Array(byte[],int) -> getUInt32Array
    337:352:int[] getInt32Array(byte[],int) -> getInt32Array
    359:373:int[] getUInt16Array(byte[],int) -> getUInt16Array
    380:397:short[] getInt16Array(byte[],int) -> getInt16Array
    404:418:byte[] getInt8Array(byte[],int) -> getInt8Array
    425:439:short[] getUInt8Array(byte[],int) -> getUInt8Array
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSRunnableInstructionBuilder -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSRunnableInstructionBuilder:
    int last_folder_separator -> a
    java.lang.String class_name -> b
    java.lang.String msg_source -> c
    java.lang.String java_source -> d
    java.lang.String package_name -> e
    java.util.Map parent_map -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.DefinitionToMessageGenerator sourceGenerator -> g
    50:228:void run() -> run
    321:321:org.happy.artist.rmdmia.rcsm.provider.message.DefinitionToMessageInstructionSourceCodeGeneratorInterface getDefinitionToMessageInstructionSourceCodeGeneratorInterface() -> getDefinitionToMessageInstructionSourceCodeGeneratorInterface
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSTypesToJava -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSTypesToJava:
    org.happy.artist.rmdmia.utilities.HexStringConverter hexStringConverter -> a
    25:25:byte[] getString(java.lang.String) -> getString
    31:31:float getFloat32(byte[]) -> getFloat32
    40:50:float[] getFloat32Array(byte[]) -> getFloat32Array
    68:68:double getFloat64(byte[]) -> getFloat64
    81:96:double[] getFloat64Array(byte[]) -> getFloat64Array
    116:116:long getInt64(byte[]) -> getInt64
    122:122:boolean getBool(byte) -> getBool
    128:134:boolean[] getBoolArray(byte[]) -> getBoolArray
    140:147:long[] getInt64Array(byte[]) -> getInt64Array
    153:153:long getUInt64(byte[]) -> getUInt64
    160:167:long[] getUInt64Array(byte[]) -> getUInt64Array
    173:173:long getUInt32(byte[]) -> getUInt32
    180:187:long[] getUInt32Array(byte[]) -> getUInt32Array
    193:193:int getInt32(byte[]) -> getInt32
    199:206:int[] getInt32Array(byte[]) -> getInt32Array
    212:212:int getUInt16(byte[]) -> getUInt16
    218:225:int[] getUInt16Array(byte[]) -> getUInt16Array
    231:231:short getInt16(byte[]) -> getInt16
    237:243:short[] getInt16Array(byte[]) -> getInt16Array
    249:249:byte getInt8(byte) -> getInt8
    255:255:byte[] getInt8Array(byte[]) -> getInt8Array
    261:261:short getUInt8(byte) -> getUInt8
    268:274:short[] getUInt8Array(byte[]) -> getUInt8Array
    280:338:void main(java.lang.String[]) -> main
    343:343:int getByteArrayLengthInBytes(byte[]) -> getByteArrayLengthInBytes
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSTypesToJavaSource -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.ROSTypesToJavaSource:
    20:34:java.lang.String getFixedFloat32(int) -> getFixedFloat32
    40:40:java.lang.String getAssignedVariableFloat32Array(java.lang.String,java.lang.String) -> getAssignedVariableFloat32Array
    45:68:java.lang.String getAssignedVariableFloat32(java.lang.String,java.lang.String) -> getAssignedVariableFloat32
    74:92:java.lang.String getAssignedFixedFloat32(java.lang.String,int) -> getAssignedFixedFloat32
    98:126:java.lang.String getFixedFloat32Array(int,int) -> getFixedFloat32Array
    132:157:java.lang.String getAssignedFixedFloat32Array(java.lang.String,int,int) -> getAssignedFixedFloat32Array
    176:201:java.lang.String getFixedFloat64(int) -> getFixedFloat64
    207:242:java.lang.String getAssignedVariableFloat64(java.lang.String,java.lang.String) -> getAssignedVariableFloat64
    248:248:java.lang.String getAssignedVariableFloat64Array(java.lang.String,java.lang.String) -> getAssignedVariableFloat64Array
    254:283:java.lang.String getAssignedFixedFloat64(java.lang.String,int) -> getAssignedFixedFloat64
    289:329:java.lang.String getFixedFloat64Array(int,int) -> getFixedFloat64Array
    335:372:java.lang.String getAssignedFixedFloat64Array(java.lang.String,int,int) -> getAssignedFixedFloat64Array
    392:410:java.lang.String getFixedInt64(int) -> getFixedInt64
    415:443:java.lang.String getAssignedVariableInt64(java.lang.String,java.lang.String) -> getAssignedVariableInt64
    449:471:java.lang.String getAssignedFixedInt64(java.lang.String,int) -> getAssignedFixedInt64
    477:477:java.lang.String getFixedBool(int) -> getFixedBool
    484:484:java.lang.String getAssignedFixedBool(java.lang.String,int) -> getAssignedFixedBool
    491:491:java.lang.String getAssignedVariableBool(java.lang.String,java.lang.String) -> getAssignedVariableBool
    497:516:java.lang.String getFixedBoolArray(int,int) -> getFixedBoolArray
    522:538:java.lang.String getAssignedFixedBoolArray(java.lang.String,int,int) -> getAssignedFixedBoolArray
    544:544:java.lang.String getAssignedVariableBoolArray(java.lang.String,java.lang.String) -> getAssignedVariableBoolArray
    550:583:java.lang.String getFixedInt64Array(int,int) -> getFixedInt64Array
    589:619:java.lang.String getAssignedFixedInt64Array(java.lang.String,int,int) -> getAssignedFixedInt64Array
    625:625:java.lang.String getAssignedVariableInt64Array(java.lang.String,java.lang.String) -> getAssignedVariableInt64Array
    632:650:java.lang.String getFixedUInt64(int) -> getFixedUInt64
    656:683:java.lang.String getAssignedVariableUInt64(java.lang.String,java.lang.String) -> getAssignedVariableUInt64
    689:711:java.lang.String getAssignedFixedUInt64(java.lang.String,int) -> getAssignedFixedUInt64
    717:750:java.lang.String getFixedUInt64Array(int,int) -> getFixedUInt64Array
    756:756:java.lang.String getAssignedVariableUInt64Array(java.lang.String,java.lang.String) -> getAssignedVariableUInt64Array
    762:792:java.lang.String getAssignedFixedUInt64Array(java.lang.String,int,int) -> getAssignedFixedUInt64Array
    798:808:java.lang.String getFixedUInt32(int) -> getFixedUInt32
    814:833:java.lang.String getAssignedVariableUInt32(java.lang.String,java.lang.String) -> getAssignedVariableUInt32
    839:853:java.lang.String getAssignedFixedUInt32(java.lang.String,int) -> getAssignedFixedUInt32
    859:884:java.lang.String getFixedUInt32Array(int,int) -> getFixedUInt32Array
    890:912:java.lang.String getAssignedFixedUInt32Array(java.lang.String,int,int) -> getAssignedFixedUInt32Array
    918:918:java.lang.String getAssignedVariableUInt32Array(java.lang.String,java.lang.String) -> getAssignedVariableUInt32Array
    924:934:java.lang.String getFixedInt32(int) -> getFixedInt32
    940:959:java.lang.String getAssignedVariableInt32(java.lang.String,java.lang.String) -> getAssignedVariableInt32
    965:979:java.lang.String getAssignedFixedInt32(java.lang.String,int) -> getAssignedFixedInt32
    986:1011:java.lang.String getFixedInt32Array(int,int) -> getFixedInt32Array
    1017:1017:java.lang.String getAssignedVariableInt32Array(java.lang.String,java.lang.String) -> getAssignedVariableInt32Array
    1023:1045:java.lang.String getAssignedFixedInt32Array(java.lang.String,int,int) -> getAssignedFixedInt32Array
    1052:1058:java.lang.String getFixedUInt16(int) -> getFixedUInt16
    1064:1079:java.lang.String getAssignedVariableUInt16(java.lang.String,java.lang.String) -> getAssignedVariableUInt16
    1085:1095:java.lang.String getAssignedFixedUInt16(java.lang.String,int) -> getAssignedFixedUInt16
    1101:1122:java.lang.String getFixedUInt16Array(int,int) -> getFixedUInt16Array
    1128:1146:java.lang.String getAssignedFixedUInt16Array(java.lang.String,int,int) -> getAssignedFixedUInt16Array
    1152:1152:java.lang.String getAssignedVariableUInt16Array(java.lang.String,java.lang.String) -> getAssignedVariableUInt16Array
    1158:1164:java.lang.String getFixedInt16(int) -> getFixedInt16
    1170:1185:java.lang.String getAssignedVariableInt16(java.lang.String,java.lang.String) -> getAssignedVariableInt16
    1191:1201:java.lang.String getAssignedFixedInt16(java.lang.String,int) -> getAssignedFixedInt16
    1208:1228:java.lang.String getFixedInt16Array(int,int) -> getFixedInt16Array
    1234:1252:java.lang.String getAssignedFixedInt16Array(java.lang.String,int,int) -> getAssignedFixedInt16Array
    1258:1258:java.lang.String getAssignedVariableInt16Array(java.lang.String,java.lang.String) -> getAssignedVariableInt16Array
    1264:1268:java.lang.String getFixedInt8(int) -> getFixedInt8
    1274:1287:java.lang.String getAssignedVariableInt8(java.lang.String,java.lang.String) -> getAssignedVariableInt8
    1293:1301:java.lang.String getAssignedFixedInt8(java.lang.String,int) -> getAssignedFixedInt8
    1307:1326:java.lang.String getFixedInt8Array(int,int) -> getFixedInt8Array
    1332:1332:java.lang.String getAssignedVariableInt8Array(java.lang.String,java.lang.String) -> getAssignedVariableInt8Array
    1338:1354:java.lang.String getAssignedFixedInt8Array(java.lang.String,int,int) -> getAssignedFixedInt8Array
    1361:1365:java.lang.String getFixedUInt8(int) -> getFixedUInt8
    1371:1384:java.lang.String getAssignedVariableUInt8(java.lang.String,java.lang.String) -> getAssignedVariableUInt8
    1390:1398:java.lang.String getAssignedFixedUInt8(java.lang.String,int) -> getAssignedFixedUInt8
    1404:1423:java.lang.String getFixedUInt8Array(int,int) -> getFixedUInt8Array
    1429:1429:java.lang.String getAssignedVariableUInt8Array(java.lang.String,java.lang.String) -> getAssignedVariableUInt8Array
    1435:1451:java.lang.String getAssignedFixedUInt8Array(java.lang.String,int,int) -> getAssignedFixedUInt8Array
    1458:1458:java.lang.String getAssignedVariableHeader(java.lang.String,java.lang.String) -> getAssignedVariableHeader
    1474:1476:java.lang.String getAssignedVariableString(java.lang.String,java.lang.String) -> getAssignedVariableString
    1482:1482:java.lang.String getAssignedFixedStringArray(java.lang.String,java.lang.String,int) -> getAssignedFixedStringArray
    1489:1497:int getStringLength(java.lang.String) -> getStringLength
    1503:1503:java.lang.String getAssignedVariableStringArray(java.lang.String,java.lang.String) -> getAssignedVariableStringArray
    1510:1644:void main(java.lang.String[]) -> main
    1649:1649:int getByteArrayLengthInBytes(byte[],int) -> getByteArrayLengthInBytes
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.Duration -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.Duration:
    int secs -> secs
    int nsecs -> nsecs
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.Time -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.Time:
    long secs -> secs
    long nsecs -> nsecs
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.std_msgs.Empty -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.std_msgs.Empty:
org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.std_msgs.Header -> org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.std_msgs.Header:
    long seq -> seq
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.generator.type.Time stamp -> stamp
    java.lang.String frame_id -> frame_id
org.happy.artist.rmdmia.rcsm.providers.ros.client.sensor.ROSBagSensorProcessor -> org.happy.artist.rmdmia.rcsm.providers.ros.client.sensor.ROSBagSensorProcessor:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> a
    org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter rosBag -> b
    57:86:org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage process(org.happy.artist.rmdmia.perception.engine.sensor.SensorMessage) -> process
org.happy.artist.rmdmia.rcsm.providers.ros.client.sensor.ROSBagSensorProcessorFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.sensor.ROSBagSensorProcessorFactory:
    org.happy.artist.rmdmia.Controller controller -> a
    29:29:org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessor newSensorProcessor() -> newSensorProcessor
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.AbstractServiceMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.AbstractServiceMessageHandler:
    java.lang.String threadName -> a
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> d
    org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface dataHandler -> e
    java.util.logging.Logger logger -> f
    java.lang.String topic -> g
    boolean isTopic -> h
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> i
    int tid -> j
    64:87:void process(byte[],int) -> process
    91:92:void setThreadName(java.lang.String) -> setThreadName
    97:97:java.lang.String getThreadName() -> getThreadName
    102:102:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    108:129:void process(byte[]) -> process
    136:137:void setTopic(java.lang.String) -> setTopic
    142:142:java.lang.String getTopic() -> getTopic
    148:149:void setIsTopic(boolean) -> setIsTopic
    154:154:boolean isTopic() -> isTopic
    159:160:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    164:164:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    169:170:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    175:175:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    181:182:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    186:186:int getTID() -> getTID
    190:191:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.AbstractSubscriberMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.AbstractSubscriberMessageHandler:
    java.lang.String threadName -> a
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> b
    java.lang.String topic -> c
    boolean isTopic -> d
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> e
    void process(byte[],int) -> process
    37:38:void setThreadName(java.lang.String) -> setThreadName
    43:43:java.lang.String getThreadName() -> getThreadName
    48:48:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    void process(byte[]) -> process
    59:60:void setTopic(java.lang.String) -> setTopic
    65:65:java.lang.String getTopic() -> getTopic
    71:72:void setIsTopic(boolean) -> setIsTopic
    77:77:boolean isTopic() -> isTopic
    82:83:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    87:87:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    92:93:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    97:97:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    103:103:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultInitializerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultInitializerMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager spm -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> f
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> g
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> h
    boolean isChanged -> i
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> j
    org.happy.artist.rmdmia.perception.engine.PEProvider temp_provider -> k
    java.lang.String topic -> l
    boolean isTopic -> m
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> n
    int tid -> o
    71:256:void process(byte[]) -> process
    260:261:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    265:266:void setThreadName(java.lang.String) -> setThreadName
    271:271:java.lang.String getThreadName() -> getThreadName
    284:504:void process(byte[],int) -> process
    511:512:void setTopic(java.lang.String) -> setTopic
    517:517:java.lang.String getTopic() -> getTopic
    523:524:void setIsTopic(boolean) -> setIsTopic
    529:529:boolean isTopic() -> isTopic
    534:535:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    539:539:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    545:546:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    550:550:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    556:556:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    562:562:int getTID() -> getTID
    567:576:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager spm -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> e
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> g
    org.happy.artist.rmdmia.perception.engine.PEProvider temp_provider -> h
    org.happy.artist.rmdmia.perception.engine.PEManager peManager -> i
    java.lang.String topic -> j
    boolean isTopic -> k
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> l
    int tid -> m
    75:159:void process(byte[],int) -> process
    163:164:void setThreadName(java.lang.String) -> setThreadName
    169:169:java.lang.String getThreadName() -> getThreadName
    174:174:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    183:268:void process(byte[]) -> process
    275:276:void setTopic(java.lang.String) -> setTopic
    281:281:java.lang.String getTopic() -> getTopic
    287:288:void setIsTopic(boolean) -> setIsTopic
    293:293:boolean isTopic() -> isTopic
    298:299:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    303:303:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    308:309:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    313:313:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    319:319:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    324:324:int getTID() -> getTID
    329:330:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPersistentServiceMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPersistentServiceMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> e
    java.lang.String topic -> f
    boolean isTopic -> g
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> h
    int tid -> i
    54:107:void process(byte[],int) -> process
    111:112:void setThreadName(java.lang.String) -> setThreadName
    117:117:java.lang.String getThreadName() -> getThreadName
    122:122:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    129:184:void process(byte[]) -> process
    191:192:void setTopic(java.lang.String) -> setTopic
    197:197:java.lang.String getTopic() -> getTopic
    203:204:void setIsTopic(boolean) -> setIsTopic
    209:209:boolean isTopic() -> isTopic
    214:215:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    219:219:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    224:225:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    229:229:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    235:235:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    240:240:int getTID() -> getTID
    245:246:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherInitializerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherInitializerMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> e
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> g
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> h
    boolean latching -> i
    java.lang.String topic -> j
    boolean isTopic -> k
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> l
    int tid -> m
    72:229:void process(byte[]) -> process
    233:234:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    238:239:void setThreadName(java.lang.String) -> setThreadName
    244:244:java.lang.String getThreadName() -> getThreadName
    255:413:void process(byte[],int) -> process
    420:421:void setTopic(java.lang.String) -> setTopic
    426:426:java.lang.String getTopic() -> getTopic
    432:433:void setIsTopic(boolean) -> setIsTopic
    438:438:boolean isTopic() -> isTopic
    444:445:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    449:449:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    454:455:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    459:459:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    465:465:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    471:471:int getTID() -> getTID
    476:485:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> e
    java.lang.String topic -> f
    boolean isTopic -> g
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> h
    int tid -> i
    49:102:void process(byte[],int) -> process
    106:107:void setThreadName(java.lang.String) -> setThreadName
    112:112:java.lang.String getThreadName() -> getThreadName
    117:117:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    129:184:void process(byte[]) -> process
    191:192:void setTopic(java.lang.String) -> setTopic
    197:197:java.lang.String getTopic() -> getTopic
    203:204:void setIsTopic(boolean) -> setIsTopic
    209:209:boolean isTopic() -> isTopic
    214:215:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    219:219:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    225:226:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    230:230:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    236:236:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    242:242:int getTID() -> getTID
    247:248:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherTunerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultPublisherTunerMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    int maxReceivedDataLength -> e
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> f
    java.lang.String topic -> g
    boolean isTopic -> h
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> i
    int tid -> j
    48:64:void process(byte[],int) -> process
    68:69:void setThreadName(java.lang.String) -> setThreadName
    74:74:java.lang.String getThreadName() -> getThreadName
    79:79:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    86:97:void process(byte[]) -> process
    104:105:void setTopic(java.lang.String) -> setTopic
    110:110:java.lang.String getTopic() -> getTopic
    116:117:void setIsTopic(boolean) -> setIsTopic
    122:122:boolean isTopic() -> isTopic
    134:134:int getLargestReceivedBlockSize() -> getLargestReceivedBlockSize
    139:140:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    144:144:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    150:151:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    155:155:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    161:161:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    166:166:int getTID() -> getTID
    171:172:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceInitializerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceInitializerMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> e
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> g
    boolean isChanged -> h
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> i
    boolean attempt_probe -> j
    java.lang.String[] words -> k
    int wordCount -> l
    java.lang.String md5hash -> m
    java.lang.String topic -> n
    boolean isTopic -> o
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> p
    int tid -> q
    77:298:void process(byte[]) -> process
    302:303:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    307:308:void setThreadName(java.lang.String) -> setThreadName
    312:312:java.lang.String getThreadName() -> getThreadName
    322:543:void process(byte[],int) -> process
    549:550:void setTopic(java.lang.String) -> setTopic
    554:554:java.lang.String getTopic() -> getTopic
    559:560:void setIsTopic(boolean) -> setIsTopic
    564:564:boolean isTopic() -> isTopic
    568:569:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    572:572:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    578:579:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    583:583:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    588:588:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    594:594:int getTID() -> getTID
    599:608:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceMessageHandler:
    java.lang.String threadName -> a
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> d
    org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface dataHandler -> e
    java.lang.String topic -> f
    boolean isTopic -> g
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> h
    int tid -> i
    127:150:void process(byte[],int) -> process
    154:155:void setThreadName(java.lang.String) -> setThreadName
    160:160:java.lang.String getThreadName() -> getThreadName
    165:165:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    228:250:void process(byte[]) -> process
    257:258:void setTopic(java.lang.String) -> setTopic
    263:263:java.lang.String getTopic() -> getTopic
    269:270:void setIsTopic(boolean) -> setIsTopic
    275:275:boolean isTopic() -> isTopic
    280:281:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    285:285:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    290:291:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    295:295:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    301:302:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    307:307:int getTID() -> getTID
    312:313:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceTunerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultServiceTunerMessageHandler:
    java.lang.String threadName -> a
    int maxReceivedDataLength -> b
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> c
    java.lang.String topic -> d
    boolean isTopic -> e
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> f
    int tid -> g
    48:64:void process(byte[],int) -> process
    68:69:void setThreadName(java.lang.String) -> setThreadName
    74:74:java.lang.String getThreadName() -> getThreadName
    79:79:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    86:97:void process(byte[]) -> process
    104:105:void setTopic(java.lang.String) -> setTopic
    110:110:java.lang.String getTopic() -> getTopic
    116:117:void setIsTopic(boolean) -> setIsTopic
    122:122:boolean isTopic() -> isTopic
    134:134:int getLargestReceivedBlockSize() -> getLargestReceivedBlockSize
    139:140:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    144:144:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    150:151:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    155:155:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    161:161:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    166:166:int getTID() -> getTID
    171:172:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultTunerMessageHandler -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.DefaultTunerMessageHandler:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> b
    java.lang.String threadName -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    int maxReceivedDataLength -> e
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface senderInterface -> f
    org.happy.artist.rmdmia.perception.engine.sensor.SensorProcessorManager spm -> g
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> h
    org.happy.artist.rmdmia.perception.engine.PEProvider temp_provider -> i
    java.lang.String topic -> j
    boolean isTopic -> k
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> l
    int tid -> m
    75:119:void process(byte[],int) -> process
    123:124:void setThreadName(java.lang.String) -> setThreadName
    129:129:java.lang.String getThreadName() -> getThreadName
    134:134:void setMessageHandlerController(org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> setMessageHandlerController
    141:180:void process(byte[]) -> process
    187:188:void setTopic(java.lang.String) -> setTopic
    193:193:java.lang.String getTopic() -> getTopic
    199:200:void setIsTopic(boolean) -> setIsTopic
    205:205:boolean isTopic() -> isTopic
    217:217:int getLargestReceivedBlockSize() -> getLargestReceivedBlockSize
    222:223:void setCommunicationSenderInterface(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> setCommunicationSenderInterface
    227:227:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface getCommunicationSenderInterface() -> getCommunicationSenderInterface
    233:234:void setDataProcessor(org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor) -> setDataProcessor
    238:238:org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor getDataProcessor() -> getDataProcessor
    244:244:void registerDataHandler(org.happy.artist.rmdmia.rcsm.provider.message.DataHandlerInterface) -> registerDataHandler
    249:249:int getTID() -> getTID
    254:255:void setTID(int) -> setTID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.MultiProtocolPublisherCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.MultiProtocolPublisherCommunicator:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator udpSender -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator tcpSender -> b
    40:40:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator getTCPPublisherCommunicator() -> getTCPPublisherCommunicator
    46:46:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator getUDPPublisherCommunicator() -> getUDPPublisherCommunicator
    52:54:void send(byte[]) -> send
    59:61:void send(byte[],int,int) -> send
    66:68:void send(byte[],int) -> send
    72:72:java.lang.String getProtocolName() -> getProtocolName
    78:82:void shutdown() -> shutdown
    87:89:void recycle() -> recycle
    94:94:void start() -> start
    99:100:void connect() -> connect
    105:106:void disconnect() -> disconnect
    111:111:boolean isConnected() -> isConnected
    116:116:boolean isRunning() -> isRunning
    121:121:java.lang.String getRemoteHostName() -> getRemoteHostName
    126:126:int getRemotePort() -> getRemotePort
    131:131:java.net.Socket getSocket() -> getSocket
    136:136:java.lang.String getHostName() -> getHostName
    142:142:int getReceivePort() -> getReceivePort
    148:149:void stop() -> stop
    154:154:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor:
    byte[] connectionID -> a
    int messageID -> b
    int lastMessageID -> c
    org.happy.artist.rmdmia.utilities.HexStringConverter convert -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessagePool multiMessagePool -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessage multiMessage -> f
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface receiver -> g
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface initializerMessageHandler -> h
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface messageHandler -> i
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface tunerMessageHandler -> j
    int msgLength -> k
    int curPos -> l
    int blockSize -> m
    double expectedPackets -> n
    boolean isNewMessage -> isNewMessage
    java.net.Socket parent_socket -> o
    int bytesCount -> p
    int msgBytesLength -> q
    int blockSizeOffset -> r
    int data_processor_id -> data_processor_id
    146:147:void setUseTunerMessageHandler() -> setUseTunerMessageHandler
    152:153:void setUseInitializerMessageHandler() -> setUseInitializerMessageHandler
    158:159:void setUseMessageHandler() -> setUseMessageHandler
    177:350:void process(byte[],int) -> process
    355:356:void setConnectionID(java.lang.String) -> setConnectionID
    361:361:java.lang.String getConnectionID() -> getConnectionID
    366:367:void setSocket(java.net.Socket) -> setSocket
    370:370:java.net.Socket getSocket() -> getSocket
    376:376:java.lang.String getClassname() -> getClassname
    382:382:int getId() -> getId
    388:388:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandler() -> getMessageHandler
    393:393:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseTunerMessageHandler() -> getUseTunerMessageHandler
    398:398:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseInitializerMessageHandler() -> getUseInitializerMessageHandler
    403:403:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseMessageHandler() -> getUseMessageHandler
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator:
    int lastBlockSize -> a
    java.net.InetSocketAddress addr -> b
    boolean isRunning -> c
    java.lang.String threadName -> threadName
    java.lang.String messageHandlerClassname -> d
    java.lang.String initializerMessageHandlerClassname -> e
    java.lang.String tunerMessageHandlerClassname -> f
    java.lang.String topic -> g
    boolean isTopic -> h
    java.lang.Thread serverListener -> i
    byte[] last_msg -> last_msg
    java.util.logging.Logger logger -> j
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread[] subscriberThreads -> k
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread[] copy -> l
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> m
    java.net.ServerSocket server -> n
    java.net.ServerSocket tmpServer -> o
    int disc_count -> p
    int sub_count -> q
    72:72:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread[] getConnectedSubscribers() -> getConnectedSubscribers
    80:82:int addSubscriber(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread) -> a
    90:107:void removeSubscriber(int) -> removeSubscriber
    120:126:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface getMessageHandlerController() -> getMessageHandlerController
    137:210:void initialize(java.lang.String,int,int,boolean,boolean,java.lang.String) -> initialize
    218:229:void start() -> start
    234:239:void shutdown() -> shutdown
    246:285:void disconnect() -> disconnect
    292:292:void recycle() -> recycle
    297:297:int getRemotePort() -> getRemotePort
    303:303:java.lang.String getRemoteHostName() -> getRemoteHostName
    317:325:boolean isConnected() -> isConnected
    340:355:void send(byte[]) -> send
    368:374:void send(byte[],int) -> send
    379:382:void setReadBlockSize(int) -> setReadBlockSize
    389:389:int getReadBlockSize() -> getReadBlockSize
    395:395:java.lang.String getProtocolName() -> getProtocolName
    400:400:void send(byte[],int,int) -> send
    406:406:boolean isRunning() -> isRunning
    412:412:void stop() -> stop
    418:418:java.lang.String getHostName() -> getHostName
    424:424:int getReceivePort() -> getReceivePort
    429:429:java.net.Socket getSocket() -> getSocket
    434:434:void connect() -> connect
    674:674:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
    27:27:boolean access$002(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator,boolean) -> a
    27:27:boolean access$000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> a
    27:27:java.net.ServerSocket access$100(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> b
    27:27:int access$200(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator,org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread) -> a
    27:27:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread[] access$300(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> c
    27:27:java.lang.String access$400(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> d
    27:27:java.util.logging.Logger access$500(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> e
    27:27:java.lang.String access$700(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> f
    27:27:java.lang.String access$800(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> g
    27:27:java.lang.String access$900(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> h
    27:27:boolean access$1000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator) -> i
    27:27:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface access$1102(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator,org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$1 -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.a:
    int i -> a
    int sub_id -> b
    int val$blockSize -> c
    boolean val$tcp_nodelay -> d
    boolean val$keep_alive -> e
    java.lang.String val$threadName -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator this$0 -> g
    173:208:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$a:
    boolean isRunning -> b
    byte[] readData -> c
    int lastBlockSize -> d
    java.lang.String threadName -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer isbr -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor processor -> g
    java.net.Socket socket -> h
    java.io.OutputStream os -> i
    java.io.InputStream is -> j
    int id -> a
    int bLength -> k
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator this$0 -> l
    486:529:void run() -> run
    555:569:void shutdown() -> a
    437:437:java.io.OutputStream access$600(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSPublisherCommunicator$SocketThread) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator:
    java.lang.String hostname -> a
    int port -> b
    java.net.Socket socket -> c
    java.io.OutputStream os -> d
    java.io.InputStream is -> e
    byte[] readData -> f
    int lastBlockSize -> g
    int bLength -> h
    boolean isRunning -> i
    boolean tcp_nodelay -> j
    boolean keep_alive -> k
    java.lang.Thread listener -> l
    java.lang.String threadName -> m
    java.lang.String messageHandlerClassname -> n
    java.lang.String initializerMessageHandlerClassname -> o
    java.lang.String tunerMessageHandlerClassname -> p
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer isbr -> q
    java.lang.String topic -> topic
    boolean isTopic -> r
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> s
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> t
    73:79:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface getMessageHandlerController() -> getMessageHandlerController
    85:145:void initialize(java.lang.String,int,int,boolean,boolean,java.lang.String) -> initialize
    154:205:void reinitialize() -> reinitialize
    214:246:void start() -> start
    253:272:void connect() -> connect
    279:292:void shutdown() -> shutdown
    298:330:void disconnect() -> disconnect
    336:336:void recycle() -> recycle
    341:341:int getRemotePort() -> getRemotePort
    347:347:java.lang.String getRemoteHostName() -> getRemoteHostName
    353:359:boolean isConnected() -> isConnected
    368:394:void send(byte[]) -> send
    399:404:void setReadBlockSize(int) -> setReadBlockSize
    409:409:int getReadBlockSize() -> getReadBlockSize
    415:415:java.lang.String getProtocolName() -> getProtocolName
    420:420:void send(byte[],int,int) -> send
    426:426:boolean isRunning() -> isRunning
    432:432:void stop() -> stop
    438:438:java.lang.String getHostName() -> getHostName
    444:444:int getReceivePort() -> getReceivePort
    449:449:void send(byte[],int) -> send
    459:459:java.net.Socket getSocket() -> getSocket
    465:465:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
    23:23:int access$000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> a
    23:23:java.lang.String access$100(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> b
    23:23:java.lang.String access$200(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> c
    23:23:java.lang.String access$300(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> d
    23:23:java.lang.String access$400(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> e
    23:23:boolean access$500(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> f
    23:23:java.net.Socket access$600(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> g
    23:23:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface access$702(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator,org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> a
    23:23:boolean access$802(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator,boolean) -> a
    23:23:boolean access$800(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> h
    23:23:int access$902(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator,int) -> a
    23:23:byte[] access$1002(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator,byte[]) -> a
    23:23:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer access$1100(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> i
    23:23:java.io.InputStream access$1200(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> j
    23:23:byte[] access$1000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> k
    23:23:int access$900(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator) -> l
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator$1 -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.b:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor processor -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator this$0 -> b
    101:129:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator$2 -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.c:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor processor -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSServiceCommunicator this$0 -> b
    162:191:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator:
    java.lang.String hostname -> a
    int port -> b
    java.net.Socket socket -> c
    java.io.OutputStream os -> d
    java.io.InputStream is -> e
    byte[] readData -> f
    int lastBlockSize -> g
    int bLength -> h
    boolean isRunning -> i
    boolean tcp_nodelay -> j
    boolean keep_alive -> k
    java.lang.Thread listener -> l
    java.lang.String threadName -> m
    java.lang.String messageHandlerClassname -> n
    java.lang.String initializerMessageHandlerClassname -> o
    java.lang.String tunerMessageHandlerClassname -> p
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer isbr -> q
    java.lang.String topic -> r
    boolean isTopic -> s
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> t
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> u
    org.happy.artist.rmdmia.rcsm.provider.message.DataProcessor dataProcessor -> dataProcessor
    77:83:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface getMessageHandlerController() -> getMessageHandlerController
    90:151:void initialize(java.lang.String,int,int,boolean,boolean,java.lang.String) -> initialize
    160:210:void reinitialize() -> reinitialize
    219:251:void start() -> start
    257:270:void shutdown() -> shutdown
    277:307:void disconnect() -> disconnect
    313:313:void recycle() -> recycle
    318:318:int getRemotePort() -> getRemotePort
    324:324:java.lang.String getRemoteHostName() -> getRemoteHostName
    330:336:boolean isConnected() -> isConnected
    345:371:void send(byte[]) -> send
    376:381:void setReadBlockSize(int) -> setReadBlockSize
    386:386:int getReadBlockSize() -> getReadBlockSize
    392:392:java.lang.String getProtocolName() -> getProtocolName
    397:397:void send(byte[],int,int) -> send
    403:403:boolean isRunning() -> isRunning
    409:409:void stop() -> stop
    415:415:java.lang.String getHostName() -> getHostName
    421:421:int getReceivePort() -> getReceivePort
    426:426:void send(byte[],int) -> send
    436:436:java.net.Socket getSocket() -> getSocket
    444:464:void connect() -> connect
    470:470:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
    26:26:int access$000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> a
    26:26:java.lang.String access$100(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> b
    26:26:java.lang.String access$200(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> c
    26:26:java.lang.String access$300(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> d
    26:26:java.lang.String access$400(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> e
    26:26:java.lang.String access$500(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> f
    26:26:boolean access$600(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> g
    26:26:java.net.Socket access$700(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> h
    26:26:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface access$802(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator,org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface) -> a
    26:26:boolean access$902(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator,boolean) -> a
    26:26:boolean access$900(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> i
    26:26:int access$1002(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator,int) -> a
    26:26:byte[] access$1102(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator,byte[]) -> a
    26:26:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer access$1200(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> j
    26:26:java.io.InputStream access$1300(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> k
    26:26:byte[] access$1100(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> l
    26:26:int access$1000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator) -> m
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator$1 -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.d:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor processor -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator this$0 -> b
    105:135:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator$2 -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.e:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPDataProcessor processor -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.TCPROSSubscriberCommunicator this$0 -> b
    168:196:void run() -> run
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] getPackets() -> getPackets
    byte[] getMessage() -> getMessage
    void recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet:
    int blockID -> blockID
    byte[] bytes -> bytes
    33:35:void recycle() -> recycle
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessageFactory:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage newTCPMessage(int) -> newTCPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessagePool -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessagePool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage[] tcpMessageArray -> b
    int checkoutIndex -> c
    int recycleCount -> d
    int checkoutCount -> e
    java.util.logging.Logger logger -> f
    63:87:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage checkout() -> checkout
    95:98:void checkin(int) -> checkin
    102:111:void recycle() -> recycle
    115:123:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessage:
    int STARTUP_PACKET_ARRAY_LENGTH -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] packets -> b
    byte[] messageBytes -> c
    int messageID -> messageID
    boolean isComplete -> isComplete
    int blockDataLength -> d
    int iteration -> e
    int totalPackets -> totalPackets
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet currentPacket -> f
    int blockNumber -> g
    int blockSize -> h
    int packetCount -> i
    int bytesOffset -> j
    byte[] tempByteArray -> k
    58:70:void first(byte[],int,int) -> first
    78:159:void append(byte[],int) -> append
    164:164:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] getPackets() -> getPackets
    174:197:byte[] getMessage() -> getMessage
    204:226:void recycle() -> recycle
    231:243:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessageFactory:
    16:16:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage newTCPMessage(int) -> newTCPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessage_original -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMultiPacketMessage_original:
    int STARTUP_PACKET_ARRAY_LENGTH -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] packets -> b
    byte[] messageBytes -> c
    int messageID -> messageID
    int blocksRemaining -> blocksRemaining
    int iteration -> d
    int totalPackets -> totalPackets
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet currentPacket -> e
    int blockNumber -> f
    int dataLength -> g
    int packetCount -> h
    int bytesOffset -> i
    byte[] tempByteArray -> j
    54:121:void first(byte[],double,double,int) -> first
    130:185:boolean append(byte[],int) -> append
    207:207:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] getPackets() -> getPackets
    216:239:byte[] getMessage() -> getMessage
    246:260:void recycle() -> recycle
    265:277:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPPacketMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPPacketMessage:
    int messageID -> messageID
    byte[] messageBytes -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] packets -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet currentPacket -> c
    28:31:void set(byte[]) -> set
    36:36:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage$Packet[] getPackets() -> getPackets
    42:42:byte[] getMessage() -> getMessage
    49:49:void recycle() -> recycle
    54:56:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPSinglePacketMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPSinglePacketMessageFactory:
    16:16:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.tcpros.data.TCPMessage newTCPMessage(int) -> newTCPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPDataProcessor -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPDataProcessor:
    org.happy.artist.rmdmia.timing.TimerService timer -> a
    byte[] connectionID -> b
    byte opCode -> c
    byte messageID -> d
    int blockNumber -> e
    byte lastMessageID -> f
    boolean isMatch -> g
    org.happy.artist.rmdmia.utilities.HexStringConverter convert -> h
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessagePool multiMessagePool -> i
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMultiPacketMessage multiMessage -> j
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface receiver -> k
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface messageHandler -> l
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface tunerMessageHandler -> m
    int connIDLength -> n
    int data_processor_id -> data_processor_id
    105:197:void process(byte[]) -> process
    203:204:void setUseTunerMessageHandler() -> setUseTunerMessageHandler
    209:210:void setUseInitializerMessageHandler() -> setUseInitializerMessageHandler
    215:216:void setUseMessageHandler() -> setUseMessageHandler
    222:251:void setConnectionID(java.lang.String) -> setConnectionID
    256:256:java.lang.String getConnectionID() -> getConnectionID
    262:262:java.lang.String getClassname() -> getClassname
    268:268:int getId() -> getId
    274:274:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandler() -> getMessageHandler
    279:279:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseTunerMessageHandler() -> getUseTunerMessageHandler
    284:284:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseInitializerMessageHandler() -> getUseInitializerMessageHandler
    289:289:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getUseMessageHandler() -> getUseMessageHandler
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPMessageManager -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPMessageManager:
    int timeout -> a
    int messagesInProcess -> b
    51:51:void process(byte,byte,int,byte[]) -> process
    59:60:void setTimeout(int) -> setTimeout
    64:64:int getTimeout() -> getTimeout
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPProtocolUtility -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPProtocolUtility:
    char[] HEX_CHARS -> a
    java.lang.String pad6Zero -> pad6Zero
    java.lang.String pad4Zero -> pad4Zero
    java.lang.String pad2Zero -> pad2Zero
    java.lang.String pad1Zero -> pad1Zero
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSMessageDecoder decoder -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessage ros_message -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSMessagePool pool -> d
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager smm -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition trmd -> f
    boolean isChanged -> g
    54:72:byte[] generateXMLRPCBase64(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> generateXMLRPCBase64
    78:112:java.lang.String getBase64FromHEX(char[]) -> getBase64FromHEX
    119:141:java.lang.String setPrependROSFieldLength(java.lang.String) -> a
    147:153:java.lang.String asHex(byte[]) -> a
    169:256:void processUDPConnectionHeader(byte[],java.lang.String,boolean) -> processUDPConnectionHeader
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPPublisherReceiver -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPPublisherReceiver:
    boolean isRun -> a
    java.lang.String hostname -> b
    int packetLength -> c
    byte[] receiveData -> d
    java.net.DatagramSocket serverSocket -> e
    java.net.DatagramPacket receivePacket -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPDataProcessor processor -> g
    java.lang.String threadName -> h
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator parent -> i
    36:36:boolean isRunning() -> isRunning
    47:61:void initialize(java.lang.String,int,int,java.net.DatagramSocket,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> initialize
    65:81:void stop() -> stop
    86:106:void shutdown() -> shutdown
    112:112:void recycle() -> recycle
    117:117:int getReceivePort() -> getReceivePort
    123:123:java.lang.String getHostName() -> getHostName
    129:129:int getPacketLength() -> getPacketLength
    135:162:void run() -> run
    167:167:void start() -> start
    173:173:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSPublisherCommunicator:
    int packetLength -> a
    byte[] sendData -> b
    java.net.DatagramSocket clientSocket -> c
    java.lang.String threadName -> d
    java.lang.String topic -> e
    boolean isRun -> f
    byte[] last_msg -> last_msg
    java.util.logging.Logger logger -> g
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> messageHandlerController
    int sub_count -> h
    java.net.DatagramPacket[] addresses -> i
    java.net.InetSocketAddress tmpSocketAddress -> j
    java.net.DatagramPacket[] copy -> k
    java.net.InetSocketAddress tempInetSocketAddress -> l
    72:84:void initialize(java.lang.String,int,int,java.lang.String,boolean) -> initialize
    99:99:java.net.DatagramPacket[] getConnectedSubscribers() -> getConnectedSubscribers
    107:133:int addSubscriber(java.lang.String,int,int) -> addSubscriber
    144:160:void removeSubscriber(java.lang.String,int) -> removeSubscriber
    172:178:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface getMessageHandlerController() -> getMessageHandlerController
    185:206:void shutdown() -> shutdown
    212:217:void disconnect() -> disconnect
    223:223:void recycle() -> recycle
    229:229:int getRemotePort() -> getRemotePort
    235:235:java.lang.String getRemoteHostName() -> getRemoteHostName
    241:241:int getPacketLength() -> getPacketLength
    247:258:boolean isConnected() -> isConnected
    265:281:void send(byte[]) -> send
    288:304:void send(byte[],int,int) -> send
    310:310:java.lang.String getProtocolName() -> getProtocolName
    315:315:boolean isRunning() -> isRunning
    321:321:java.lang.String getHostName() -> getHostName
    326:326:int getReceivePort() -> getReceivePort
    333:333:void stop() -> stop
    350:350:void start() -> start
    356:366:void send(byte[],int) -> send
    370:370:java.net.Socket getSocket() -> getSocket
    375:375:void connect() -> connect
    380:380:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSSubscriberCommunicator -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSSubscriberCommunicator:
    java.lang.String hostname -> a
    int packetLength -> b
    byte[] sendData -> c
    java.net.DatagramSocket clientSocket -> d
    java.net.DatagramPacket senderPacket -> e
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPSubscriberReceiver udpReceiver -> f
    java.lang.Thread listener -> g
    java.lang.String threadName -> h
    org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface messageHandlerController -> messageHandlerController
    55:83:void initialize(java.lang.String,int,int,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String) -> initialize
    94:100:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerControllerInterface getMessageHandlerController() -> getMessageHandlerController
    107:117:void shutdown() -> shutdown
    122:127:void disconnect() -> disconnect
    132:133:void recycle() -> recycle
    138:138:int getRemotePort() -> getRemotePort
    144:144:java.lang.String getRemoteHostName() -> getRemoteHostName
    150:150:int getPacketLength() -> getPacketLength
    156:167:boolean isConnected() -> isConnected
    173:175:void send(byte[]) -> send
    180:182:void send(byte[],int,int) -> send
    188:188:java.lang.String getProtocolName() -> getProtocolName
    193:193:boolean isRunning() -> isRunning
    198:198:java.lang.String getHostName() -> getHostName
    203:203:int getReceivePort() -> getReceivePort
    208:209:void stop() -> stop
    220:237:void start() -> start
    241:241:void send(byte[],int) -> send
    246:246:java.net.Socket getSocket() -> getSocket
    251:251:void connect() -> connect
    256:256:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
    263:264:void setConnectionID(int) -> setConnectionID
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPSubscriberReceiver -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPSubscriberReceiver:
    boolean isRun -> a
    java.lang.String hostname -> b
    int packetLength -> c
    byte[] receiveData -> d
    java.net.DatagramSocket serverSocket -> e
    java.net.DatagramPacket receivePacket -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPDataProcessor processor -> g
    java.lang.String threadName -> h
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPROSSubscriberCommunicator parent -> i
    java.util.logging.Logger logger -> j
    39:39:boolean isRunning() -> isRunning
    44:44:boolean isConnected() -> isConnected
    55:69:void initialize(java.lang.String,int,int,java.net.DatagramSocket,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> initialize
    73:89:void stop() -> stop
    94:114:void shutdown() -> shutdown
    120:120:void recycle() -> recycle
    125:125:int getReceivePort() -> getReceivePort
    131:131:java.lang.String getHostName() -> getHostName
    137:137:int getPacketLength() -> getPacketLength
    143:176:void run() -> run
    181:181:void start() -> start
    187:187:org.happy.artist.rmdmia.rcsm.provider.message.MessageHandlerInterface getMessageHandlerInterface() -> getMessageHandlerInterface
    193:193:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.UDPDataProcessor getDataProcessor() -> getDataProcessor
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet[] getPackets() -> getPackets
    byte[] getMessage() -> getMessage
    void recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet:
    int blockID -> blockID
    byte[] bytes -> bytes
    33:35:void recycle() -> recycle
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessageFactory:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage newUDPMessage(int) -> newUDPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessagePool -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessagePool:
    boolean[] availabilityArray -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage[] udpMessageArray -> b
    int checkoutCount -> c
    int recycleCount -> d
    56:64:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage checkout(int) -> checkout
    113:115:void checkin(int) -> checkin
    121:128:void recycle() -> recycle
    132:139:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMultiPacketMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMultiPacketMessage:
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet[] packets -> a
    byte[] messageBytes -> b
    int messageID -> messageID
    int blocksRemaining -> blocksRemaining
    int iteration -> c
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet currentPacket -> d
    int packetCount -> e
    int bytesOffset -> f
    byte[] tempByteArray -> g
    37:91:void first(byte[],int,int) -> first
    96:128:boolean append(byte[],int) -> append
    136:136:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet[] getPackets() -> getPackets
    145:154:byte[] getMessage() -> getMessage
    160:173:void recycle() -> recycle
    178:190:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMultiPacketMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMultiPacketMessageFactory:
    16:16:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage newUDPMessage(int) -> newUDPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPPacketMessage -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPPacketMessage:
    int messageID -> messageID
    byte[] messageBytes -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet[] packets -> b
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet currentPacket -> c
    28:31:void set(byte[]) -> set
    36:36:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage$Packet[] getPackets() -> getPackets
    42:42:byte[] getMessage() -> getMessage
    49:49:void recycle() -> recycle
    54:56:void shutdown() -> shutdown
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPSinglePacketMessageFactory -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPSinglePacketMessageFactory:
    17:17:org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.udpros.packet.UDPMessage newUDPMessage(int) -> newUDPMessage
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer:
    int READ_BLOCKS -> a
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer$Data[] inputStreamReadBuffer -> b
    int checkoutCount -> checkoutCount
    int recycleCount -> c
    int lastCount -> d
    int byteArrayLength -> e
    47:64:byte[] checkout() -> checkout
    72:73:void reset() -> reset
    77:83:void recycle() -> recycle
    87:93:void shutdown() -> shutdown
    11:11:int access$000(org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer) -> a
org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer$Data -> org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer$Data:
    byte[] bytes -> bytes
    org.happy.artist.rmdmia.rcsm.providers.ros.client.transport.util.InputStreamReadBuffer this$0 -> a
    100:101:void recycle() -> recycle
org.happy.artist.rmdmia.roci.ROCIException -> org.happy.artist.rmdmia.roci.ROCIException:
org.happy.artist.rmdmia.roci.ROCIHandlerInterface -> org.happy.artist.rmdmia.roci.ROCIHandlerInterface:
    int getDataTransferMethod() -> getDataTransferMethod
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    void setInputStream(java.io.InputStream) -> setInputStream
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getID() -> getID
    void processIncoming(byte[]) -> processIncoming
    void processOutgoing(byte[]) -> processOutgoing
org.happy.artist.rmdmia.roci.ROCIManager -> org.happy.artist.rmdmia.roci.ROCIManager:
    org.happy.artist.rmdmia.roci.ROCIProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.roci.ROCIProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.roci.ROCIProvider provider_to_enable -> D
    int current_roci_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    213:439:void initialize() -> initialize
    448:448:java.lang.String[] getProviderNames() -> getProviderNames
    458:458:double[] getProviderVersions() -> getProviderVersions
    468:468:java.lang.String[] getProviderClasses() -> getProviderClasses
    478:478:boolean[] getProviderEnabled() -> getProviderEnabled
    487:487:org.happy.artist.rmdmia.roci.ROCIProvider[] getProviders() -> getProviders
    496:496:org.happy.artist.rmdmia.roci.ROCIProvider getProvider(int) -> getProvider
    505:518:org.happy.artist.rmdmia.roci.ROCIProvider getProviderByName(java.lang.String) -> getProviderByName
    554:589:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    597:621:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.roci.ROCIProperties -> org.happy.artist.rmdmia.roci.ROCIProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.roci.ROCIProperties movementProcessorRegistry -> c
    59:63:org.happy.artist.rmdmia.roci.ROCIProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    165:165:java.lang.String getFileName() -> getFileName
    178:183:boolean put(java.lang.String,java.lang.String) -> put
    196:200:java.lang.String get(java.lang.String) -> get
    213:218:boolean remove(java.lang.String) -> remove
    228:228:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.roci.ROCIProvider -> org.happy.artist.rmdmia.roci.ROCIProvider:
    int rocID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    int STREAMING_DATA_TRANSFER_METHOD -> STREAMING_DATA_TRANSFER_METHOD
    int BYTES_DATA_TRANSFER_METHOD -> BYTES_DATA_TRANSFER_METHOD
    int NO_TRANSFER_METHOD -> NO_TRANSFER_METHOD
    int dataTransferMethod -> e
    47:47:int getID() -> getID
    55:56:void setID(int) -> setID
    66:67:void setController(org.happy.artist.rmdmia.Controller) -> setController
    76:76:org.happy.artist.rmdmia.Controller getController() -> getController
    92:93:void setProperties(java.util.Properties) -> setProperties
    102:102:java.util.Properties getProperties() -> getProperties
    111:112:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    120:120:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    132:132:int getDataTransferMethod() -> getDataTransferMethod
    145:146:void setDataTransferMethod(int) -> setDataTransferMethod
    152:152:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.roci.ROCInterface -> org.happy.artist.rmdmia.roci.ROCInterface:
    int getDataTransferMethod() -> getDataTransferMethod
    void setDataTransferMethod(int) -> setDataTransferMethod
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    void setInputStream(java.io.InputStream) -> setInputStream
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void processIncoming(byte[]) -> processIncoming
    void processOutgoing(byte[]) -> processOutgoing
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.roci.command.RegisterPublisherSubscribers -> org.happy.artist.rmdmia.roci.command.RegisterPublisherSubscribers:
org.happy.artist.rmdmia.roci.plugins.Movements1 -> org.happy.artist.rmdmia.roci.plugins.a:
    327:387:byte[] getUpMovement() -> a
    392:452:byte[] getDownMovement() -> b
    457:517:byte[] getLeftMovement() -> c
    521:581:byte[] getRightMovement() -> d
org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner -> org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    java.util.logging.Logger logger -> d
    org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner instance -> e
    int serviceTID -> f
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition autoConfigTRMD -> g
    java.lang.String serviceName -> h
    java.lang.String[] serviceNames -> i
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSSubscriberMessageManager subscriberMessageManager -> j
    java.lang.String caller_id -> k
    boolean outOfTime -> l
    org.happy.artist.rmdmia.rcsm.providers.ros.client.message.ROSTopicRegistryMessageDefinition[] defs -> m
    int serviceMd5sumsFilled -> n
    int previousServicesCount -> o
    long startTime -> p
    int serviceTypesFilled -> q
    81:81:org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner getInstance() -> getInstance
    87:149:void initialize() -> initialize
    159:355:void processAutoConfiguration() -> a
    360:360:double getVersion() -> getVersion
    366:366:java.lang.String getName() -> getName
    371:371:void setOutputStream(java.io.OutputStream) -> setOutputStream
    376:376:void setInputStream(java.io.InputStream) -> setInputStream
    381:381:java.io.InputStream getInputStream() -> getInputStream
    386:386:java.io.OutputStream getOutputStream() -> getOutputStream
    391:391:void processIncoming(byte[]) -> processIncoming
    396:396:void processOutgoing(byte[]) -> processOutgoing
    401:401:boolean recycle() -> recycle
    407:410:void shutdown() -> shutdown
    417:417:boolean isInitialized() -> isInitialized
    36:36:org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode access$000(org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner) -> a
    36:36:void access$100(org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner) -> b
org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner$1 -> org.happy.artist.rmdmia.roci.plugins.b:
    org.happy.artist.rmdmia.roci.plugins.ROCIROSAutoTuner this$0 -> a
    112:118:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin -> org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin:
    int port -> a
    int max_connections -> b
    java.util.Properties properties -> c
    java.net.ServerSocket listener -> d
    java.net.Socket server -> e
    java.lang.Thread t -> f
    java.io.OutputStream os -> g
    java.io.InputStream is -> h
    boolean isInitialized -> i
    java.util.logging.Logger logger -> j
    42:91:void initialize() -> initialize
    96:96:double getVersion() -> getVersion
    102:102:java.lang.String getName() -> getName
    107:108:void setOutputStream(java.io.OutputStream) -> setOutputStream
    112:113:void setInputStream(java.io.InputStream) -> setInputStream
    117:117:java.io.InputStream getInputStream() -> getInputStream
    123:123:java.io.OutputStream getOutputStream() -> getOutputStream
    129:129:void processIncoming(byte[]) -> processIncoming
    135:135:void processOutgoing(byte[]) -> processOutgoing
    141:141:boolean recycle() -> recycle
    148:149:void shutdown() -> shutdown
    157:157:boolean isInitialized() -> isInitialized
    163:166:void main(java.lang.String[]) -> main
    20:20:java.util.logging.Logger access$000(org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin) -> a
org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin$TelnetServer -> org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin$a:
    java.io.DataInputStream in -> a
    java.io.PrintStream out -> b
    java.net.Socket server -> c
    java.lang.String line -> d
    java.lang.String input -> e
    org.happy.artist.rmdmia.roci.plugins.ROCITelnetPlugin this$0 -> f
    182:210:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin -> org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin:
    org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider rosPE -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    java.util.logging.Logger logger -> d
    org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin instance -> e
    54:54:org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin getInstance() -> getInstance
    60:131:void initialize() -> initialize
    136:136:double getVersion() -> getVersion
    142:142:java.lang.String getName() -> getName
    147:147:void setOutputStream(java.io.OutputStream) -> setOutputStream
    152:152:void setInputStream(java.io.InputStream) -> setInputStream
    157:157:java.io.InputStream getInputStream() -> getInputStream
    163:163:java.io.OutputStream getOutputStream() -> getOutputStream
    169:169:void processIncoming(byte[]) -> processIncoming
    175:175:void processOutgoing(byte[]) -> processOutgoing
    181:181:boolean recycle() -> recycle
    187:190:void shutdown() -> shutdown
    198:198:boolean isInitialized() -> isInitialized
    205:218:void startController() -> startController
org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin$1 -> org.happy.artist.rmdmia.roci.plugins.c:
    org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin this$0 -> a
    85:100:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSBagControllerPlugin$2 -> org.happy.artist.rmdmia.roci.plugins.d:
    210:211:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.roci.plugins.ROSConfigurationManager -> org.happy.artist.rmdmia.roci.plugins.ROSConfigurationManager:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    java.lang.Object[][] tableData -> b
    java.lang.Object[] tableColumnNames -> c
    boolean isInitialized -> d
    java.util.logging.Logger logger -> e
    40:81:void initialize() -> initialize
    86:86:double getVersion() -> getVersion
    92:92:java.lang.String getName() -> getName
    97:97:void setOutputStream(java.io.OutputStream) -> setOutputStream
    102:102:void setInputStream(java.io.InputStream) -> setInputStream
    107:107:java.io.InputStream getInputStream() -> getInputStream
    113:113:java.io.OutputStream getOutputStream() -> getOutputStream
    119:119:void processIncoming(byte[]) -> processIncoming
    125:125:void processOutgoing(byte[]) -> processOutgoing
    131:131:boolean recycle() -> recycle
    138:139:void shutdown() -> shutdown
    147:147:boolean isInitialized() -> isInitialized
org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel -> org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel:
    org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider provider -> provider
    org.happy.artist.rmdmia.Controller controller -> controller
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> rosNode
    boolean isRecording -> isRecording
    int hids -> hids
    int[] hid_array -> hid_array
    javax.swing.JToggleButton btnRecord -> btnRecord
    javax.swing.JCheckBox checkRecordMovements -> checkRecordMovements
    javax.swing.JCheckBox checkRecordSensors -> checkRecordSensors
    javax.swing.JLabel lblDirectory -> lblDirectory
    javax.swing.JTextField tfDirectory -> tfDirectory
    24:24:void access$000(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,java.awt.event.ActionEvent) -> access$000
    24:24:void access$100(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,java.awt.event.ActionEvent) -> access$100
    24:24:void access$200(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,java.awt.event.ActionEvent) -> access$200
    24:24:boolean access$300(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$300
    24:24:boolean access$302(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,boolean) -> access$302
    24:24:javax.swing.JToggleButton access$400(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$400
    24:24:org.happy.artist.rmdmia.perception.engine.plugins.ROSPEProvider access$500(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$500
    24:24:javax.swing.JCheckBox access$600(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$600
    24:24:int access$702(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,int) -> access$702
    24:24:org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode access$800(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$800
    24:24:int[] access$902(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel,int[]) -> access$902
    24:24:int access$700(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$700
    24:24:int[] access$900(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$900
    24:24:javax.swing.JCheckBox access$1000(org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel) -> access$1000
org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel$1 -> org.happy.artist.rmdmia.roci.plugins.e:
    org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel this$0 -> a
    62:63:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel$2 -> org.happy.artist.rmdmia.roci.plugins.f:
    org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel this$0 -> a
    73:74:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel$3 -> org.happy.artist.rmdmia.roci.plugins.g:
    org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel this$0 -> a
    83:84:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel$Fixer -> org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel$a:
    org.happy.artist.rmdmia.roci.plugins.ROSRecorderPanel this$0 -> a
    174:214:java.lang.String doInBackground() -> a
    170:170:java.lang.Object doInBackground() -> doInBackground
org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController -> org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface sender -> d
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface motor_state_sender -> e
    net.java.games.input.Component component -> f
    net.java.games.input.EventQueue queue -> g
    net.java.games.input.Event event -> h
    net.java.games.input.Controller[] controllers -> i
    java.lang.String cname -> j
    byte[] GAMEPAD_UP -> k
    byte[] GAMEPAD_DOWN -> l
    byte[] GAMEPAD_LEFT -> m
    byte[] GAMEPAD_RIGHT -> n
    java.util.logging.Logger logger -> o
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController instance -> p
    byte[] MOTOR_ON -> q
    byte[] MOTOR_OFF -> r
    74:74:org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController getInstance() -> getInstance
    80:151:void initialize() -> initialize
    156:156:double getVersion() -> getVersion
    162:162:java.lang.String getName() -> getName
    167:167:void setOutputStream(java.io.OutputStream) -> setOutputStream
    172:172:void setInputStream(java.io.InputStream) -> setInputStream
    177:177:java.io.InputStream getInputStream() -> getInputStream
    183:183:java.io.OutputStream getOutputStream() -> getOutputStream
    189:189:void processIncoming(byte[]) -> processIncoming
    195:195:void processOutgoing(byte[]) -> processOutgoing
    201:201:boolean recycle() -> recycle
    207:210:void shutdown() -> shutdown
    218:218:boolean isInitialized() -> isInitialized
    250:310:void startController(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> startController
    30:30:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface access$000(org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController) -> a
org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController$1 -> org.happy.artist.rmdmia.roci.plugins.h:
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotController this$0 -> a
    106:120:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController -> org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface sender -> d
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface motor_state_sender -> e
    net.java.games.input.Component component -> f
    net.java.games.input.EventQueue queue -> g
    net.java.games.input.Event event -> h
    net.java.games.input.Controller[] controllers -> i
    java.lang.String cname -> j
    byte[] GAMEPAD_UP -> k
    byte[] GAMEPAD_DOWN -> l
    byte[] GAMEPAD_LEFT -> m
    byte[] GAMEPAD_RIGHT -> n
    java.util.logging.Logger logger -> o
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController instance -> p
    88:88:org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController getInstance() -> getInstance
    94:174:void initialize() -> initialize
    201:201:double getVersion() -> getVersion
    207:207:java.lang.String getName() -> getName
    212:212:void setOutputStream(java.io.OutputStream) -> setOutputStream
    217:217:void setInputStream(java.io.InputStream) -> setInputStream
    222:222:java.io.InputStream getInputStream() -> getInputStream
    228:228:java.io.OutputStream getOutputStream() -> getOutputStream
    234:234:void processIncoming(byte[]) -> processIncoming
    240:240:void processOutgoing(byte[]) -> processOutgoing
    246:246:boolean recycle() -> recycle
    252:255:void shutdown() -> shutdown
    263:263:boolean isInitialized() -> isInitialized
    271:350:void startController(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> startController
    39:39:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface access$000(org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController) -> a
org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController$1 -> org.happy.artist.rmdmia.roci.plugins.i:
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController this$0 -> a
    128:143:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSTurtlebotKeyController$2 -> org.happy.artist.rmdmia.roci.plugins.j:
    276:277:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController -> org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface sender -> d
    net.java.games.input.Component component -> e
    net.java.games.input.EventQueue queue -> f
    net.java.games.input.Event event -> g
    net.java.games.input.Controller[] controllers -> h
    java.lang.String cname -> i
    byte[] GAMEPAD_UP -> j
    byte[] GAMEPAD_DOWN -> k
    byte[] GAMEPAD_LEFT -> l
    byte[] GAMEPAD_RIGHT -> m
    java.util.logging.Logger logger -> n
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController instance -> o
    byte[] CLEAR -> p
    66:66:org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController getInstance() -> getInstance
    72:143:void initialize() -> initialize
    148:148:double getVersion() -> getVersion
    154:154:java.lang.String getName() -> getName
    159:159:void setOutputStream(java.io.OutputStream) -> setOutputStream
    164:164:void setInputStream(java.io.InputStream) -> setInputStream
    169:169:java.io.InputStream getInputStream() -> getInputStream
    175:175:java.io.OutputStream getOutputStream() -> getOutputStream
    181:181:void processIncoming(byte[]) -> processIncoming
    187:187:void processOutgoing(byte[]) -> processOutgoing
    193:193:boolean recycle() -> recycle
    199:202:void shutdown() -> shutdown
    210:210:boolean isInitialized() -> isInitialized
    219:271:void startController(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> startController
    26:26:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface access$000(org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController) -> a
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController$1 -> org.happy.artist.rmdmia.roci.plugins.k:
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimController this$0 -> a
    98:112:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController -> org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface sender -> d
    net.java.games.input.Component component -> e
    net.java.games.input.EventQueue queue -> f
    net.java.games.input.Event event -> g
    net.java.games.input.Controller[] controllers -> h
    java.lang.String cname -> i
    byte[] GAMEPAD_UP -> j
    byte[] GAMEPAD_DOWN -> k
    byte[] GAMEPAD_LEFT -> l
    byte[] GAMEPAD_RIGHT -> m
    java.util.logging.Logger logger -> n
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController instance -> o
    byte[] CLEAR -> p
    80:80:org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController getInstance() -> getInstance
    86:158:void initialize() -> initialize
    163:163:double getVersion() -> getVersion
    169:169:java.lang.String getName() -> getName
    174:174:void setOutputStream(java.io.OutputStream) -> setOutputStream
    179:179:void setInputStream(java.io.InputStream) -> setInputStream
    184:184:java.io.InputStream getInputStream() -> getInputStream
    190:190:java.io.OutputStream getOutputStream() -> getOutputStream
    196:196:void processIncoming(byte[]) -> processIncoming
    202:202:void processOutgoing(byte[]) -> processOutgoing
    208:208:boolean recycle() -> recycle
    214:217:void shutdown() -> shutdown
    225:225:boolean isInitialized() -> isInitialized
    233:317:void startController(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> startController
    40:40:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface access$000(org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController) -> a
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController$1 -> org.happy.artist.rmdmia.roci.plugins.l:
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController this$0 -> a
    112:127:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyController$2 -> org.happy.artist.rmdmia.roci.plugins.m:
    238:239:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld -> org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld:
    org.happy.artist.rmdmia.rcsm.providers.ros.ROSNode rosNode -> a
    boolean isInitialized -> b
    java.lang.Thread thread -> c
    org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface sender -> d
    net.java.games.input.Component component -> e
    net.java.games.input.EventQueue queue -> f
    net.java.games.input.Event event -> g
    net.java.games.input.Controller[] controllers -> h
    java.lang.String cname -> i
    byte[] GAMEPAD_UP -> j
    byte[] GAMEPAD_DOWN -> k
    byte[] GAMEPAD_LEFT -> l
    byte[] GAMEPAD_RIGHT -> m
    java.util.logging.Logger logger -> n
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld instance -> o
    byte[] CLEAR -> p
    77:77:org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld getInstance() -> getInstance
    83:155:void initialize() -> initialize
    160:160:double getVersion() -> getVersion
    166:166:java.lang.String getName() -> getName
    171:171:void setOutputStream(java.io.OutputStream) -> setOutputStream
    176:176:void setInputStream(java.io.InputStream) -> setInputStream
    181:181:java.io.InputStream getInputStream() -> getInputStream
    187:187:java.io.OutputStream getOutputStream() -> getOutputStream
    193:193:void processIncoming(byte[]) -> processIncoming
    199:199:void processOutgoing(byte[]) -> processOutgoing
    205:205:boolean recycle() -> recycle
    211:214:void shutdown() -> shutdown
    222:222:boolean isInitialized() -> isInitialized
    230:314:void startController(org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface) -> startController
    36:36:org.happy.artist.rmdmia.rcsm.provider.CommunicationSenderInterface access$000(org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld) -> a
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld$1 -> org.happy.artist.rmdmia.roci.plugins.n:
    org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld this$0 -> a
    109:124:void run() -> run
org.happy.artist.rmdmia.roci.plugins.ROSTurtlesimKeyControllerOld$2 -> org.happy.artist.rmdmia.roci.plugins.o:
    235:236:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.happy.artist.rmdmia.task.manager.TaskManager -> org.happy.artist.rmdmia.task.manager.TaskManager:
    org.happy.artist.rmdmia.task.manager.TaskManagerProperties properties -> a
    java.util.Map map -> b
    java.lang.String filePath -> c
    java.lang.String pluginPropertiesFolderPath -> d
    java.lang.String[] classes -> e
    java.lang.String[] names -> f
    double[] versions -> g
    org.happy.artist.rmdmia.task.manager.TaskManagerProvider[] providers -> h
    boolean[] enabled -> i
    java.lang.String provider_properties_file_name -> j
    java.util.Properties prop -> k
    java.lang.String pluginsFolderPath -> l
    java.io.File[] files -> m
    int pos -> n
    int currentID -> o
    int arrayLength -> p
    java.lang.String currentKey -> q
    java.lang.String name -> r
    java.lang.Object[] outNames -> s
    java.lang.String[] keyArray -> t
    java.io.File rootConfigurationDirectory -> u
    java.util.logging.Logger logger -> v
    org.happy.artist.rmdmia.Controller controller -> w
    int providerCount -> x
    java.io.FileOutputStream fos -> y
    java.io.InputStream in -> z
    byte[] buffer -> A
    int len -> B
    java.io.File confDir -> C
    org.happy.artist.rmdmia.task.manager.TaskManagerProvider provider_to_enable -> D
    int current_tm_id -> E
    int postInitLoopCount -> F
    boolean providers_defined -> G
    240:465:void initialize() -> initialize
    474:474:java.lang.String[] getProviderNames() -> getProviderNames
    484:484:double[] getProviderVersions() -> getProviderVersions
    494:494:java.lang.String[] getProviderClasses() -> getProviderClasses
    504:504:boolean[] getProviderEnabled() -> getProviderEnabled
    513:513:org.happy.artist.rmdmia.task.manager.TaskManagerProvider[] getProviders() -> getProviders
    522:522:org.happy.artist.rmdmia.task.manager.TaskManagerProvider getProvider(int) -> getProvider
    531:544:org.happy.artist.rmdmia.task.manager.TaskManagerProvider getProviderByName(java.lang.String) -> getProviderByName
    580:615:boolean setProviderEnabledByName(java.lang.String,boolean,boolean) -> setProviderEnabledByName
    623:647:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.task.manager.TaskManagerException -> org.happy.artist.rmdmia.task.manager.TaskManagerException:
org.happy.artist.rmdmia.task.manager.TaskManagerInterface -> org.happy.artist.rmdmia.task.manager.TaskManagerInterface:
    int getID() -> getID
    void setID(int) -> setID
    void setController(org.happy.artist.rmdmia.Controller) -> setController
    org.happy.artist.rmdmia.Controller getController() -> getController
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    double getVersion() -> getVersion
    java.lang.String getName() -> getName
    void initialize() -> initialize
    boolean isInitialized() -> isInitialized
    void onInitialized() -> onInitialized
    boolean recycle() -> recycle
    void shutdown() -> shutdown
org.happy.artist.rmdmia.task.manager.TaskManagerProperties -> org.happy.artist.rmdmia.task.manager.TaskManagerProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strPropertiesFileName -> b
    org.happy.artist.rmdmia.task.manager.TaskManagerProperties taskManagerRegistry -> c
    59:63:org.happy.artist.rmdmia.task.manager.TaskManagerProperties getInstance() -> getInstance
    73:112:boolean writeFile() -> writeFile
    123:148:boolean readPropertiesFile() -> readPropertiesFile
    157:158:void setFileName(java.lang.String) -> setFileName
    167:167:java.lang.String getFileName() -> getFileName
    180:185:boolean put(java.lang.String,java.lang.String) -> put
    198:202:java.lang.String get(java.lang.String) -> get
    215:220:boolean remove(java.lang.String) -> remove
    230:230:com.trinity.ea.util.EAProperties getProperties() -> getProperties
org.happy.artist.rmdmia.task.manager.TaskManagerProvider -> org.happy.artist.rmdmia.task.manager.TaskManagerProvider:
    int tmID -> a
    org.happy.artist.rmdmia.Controller controller -> b
    java.lang.String filePath -> c
    java.util.Properties properties -> d
    37:37:int getID() -> getID
    45:46:void setID(int) -> setID
    56:57:void setController(org.happy.artist.rmdmia.Controller) -> setController
    66:66:org.happy.artist.rmdmia.Controller getController() -> getController
    82:83:void setProperties(java.util.Properties) -> setProperties
    92:92:java.util.Properties getProperties() -> getProperties
    101:102:void setPropertiesFilePath(java.lang.String) -> setPropertiesFilePath
    110:110:java.lang.String getPropertiesFilePath() -> getPropertiesFilePath
    117:117:void onInitialized() -> onInitialized
org.happy.artist.rmdmia.timing.TimerService -> org.happy.artist.rmdmia.timing.TimerService:
    long SYSTEM_TIME -> SYSTEM_TIME
    java.util.concurrent.ScheduledExecutorService scheduler -> a
    java.lang.Runnable timer -> b
    java.util.concurrent.ScheduledFuture timerHandle -> c
    44:45:void shutdown() -> shutdown
    55:56:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.timing.TimerService$1 -> org.happy.artist.rmdmia.timing.a:
    23:25:void run() -> run
org.happy.artist.rmdmia.utilities.Base64 -> org.happy.artist.rmdmia.utilities.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_GUNZIP -> DONT_GUNZIP
    int DO_BREAK_LINES -> DO_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    byte[] _STANDARD_ALPHABET -> a
    byte[] _STANDARD_DECODABET -> b
    byte[] _URL_SAFE_ALPHABET -> c
    byte[] _URL_SAFE_DECODABET -> d
    byte[] _ORDERED_ALPHABET -> e
    byte[] _ORDERED_DECODABET -> f
    boolean $assertionsDisabled -> g
    431:436:byte[] getDecodabet(int) -> b
    467:468:byte[] encode3to4(byte[],byte[],int,int) -> b
    499:540:byte[] encode3to4(byte[],int,int,byte[],int,int) -> b
    558:567:void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> encode
    582:593:void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> encode
    618:618:java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    655:698:java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    718:725:java.lang.String encodeBytes(byte[]) -> encodeBytes
    760:760:java.lang.String encodeBytes(byte[],int) -> encodeBytes
    786:793:java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    831:838:java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    858:864:byte[] encodeBytesToBytes(byte[]) -> encodeBytesToBytes
    888:988:byte[] encodeBytesToBytes(byte[],int,int,int) -> encodeBytesToBytes
    1035:1097:int decode4to3(byte[],int,byte[],int,int) -> b
    1120:1126:byte[] decode(byte[]) -> decode
    1152:1208:byte[] decode(byte[],int,int,int) -> decode
    1224:1224:byte[] decode(java.lang.String) -> decode
    1242:1297:byte[] decode(java.lang.String,int) -> decode
    1316:1316:java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    1341:1385:java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> decodeToObject
    1407:1422:void encodeToFile(byte[],java.lang.String) -> encodeToFile
    1443:1454:void decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    1478:1517:byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    1539:1570:java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    1584:1597:void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    1612:1625:void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    150:150:byte[] access$000(int) -> a
    150:150:byte[] access$100(byte[],int,int,byte[],int,int) -> a
    150:150:int access$200(byte[],int,byte[],int,int) -> a
    150:150:byte[] access$300(byte[],byte[],int,int) -> a
org.happy.artist.rmdmia.utilities.Base64$1 -> org.happy.artist.rmdmia.utilities.a:
    java.lang.ClassLoader val$loader -> a
    1362:1366:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
org.happy.artist.rmdmia.utilities.Base64$InputStream -> org.happy.artist.rmdmia.utilities.Base64$InputStream:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int numSigBytes -> e
    int lineLength -> f
    boolean breakLines -> g
    int options -> h
    byte[] decodabet -> i
    1709:1797:int read() -> read
    1819:1832:int read(byte[],int,int) -> read
org.happy.artist.rmdmia.utilities.Base64$OutputStream -> org.happy.artist.rmdmia.utilities.Base64$OutputStream:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int lineLength -> e
    boolean breakLines -> f
    byte[] b4 -> g
    boolean suspendEncoding -> h
    int options -> i
    byte[] decodabet -> j
    1928:1966:void write(int) -> write
    1983:1992:void write(byte[],int,int) -> write
    2002:2012:void flushBase64() -> flushBase64
    2023:2031:void close() -> close
    2044:2046:void suspendEncoding() -> suspendEncoding
    2057:2058:void resumeEncoding() -> resumeEncoding
org.happy.artist.rmdmia.utilities.BytesToHex -> org.happy.artist.rmdmia.utilities.BytesToHex:
    15:23:java.lang.String bytesToHex(byte[]) -> bytesToHex
    27:35:char[] bytesToHexChars(byte[]) -> bytesToHexChars
org.happy.artist.rmdmia.utilities.DirectoryReader -> org.happy.artist.rmdmia.utilities.DirectoryReader:
    int spc_count -> a
    org.happy.artist.rmdmia.utilities.DirectoryReader$GenericExtFilter filter -> filter
    25:56:void Process(java.io.File) -> Process
    59:62:void main(java.lang.String[]) -> main
    66:74:java.lang.String bytesToHex(byte[]) -> bytesToHex
    79:90:byte[] getMD5Sum(java.io.File) -> getMD5Sum
org.happy.artist.rmdmia.utilities.DirectoryReader$GenericExtFilter -> org.happy.artist.rmdmia.utilities.DirectoryReader$GenericExtFilter:
    java.lang.String ext -> a
    104:104:boolean accept(java.io.File,java.lang.String) -> accept
org.happy.artist.rmdmia.utilities.ExtractRobotNamespaceTest -> org.happy.artist.rmdmia.utilities.ExtractRobotNamespaceTest:
    org.happy.artist.rmdmia.utilities.properties.LinuxSystemProperties properties -> a
    27:83:void main(java.lang.String[]) -> main
    91:122:void setEnv(java.util.Map) -> setEnv
org.happy.artist.rmdmia.utilities.HexStringConverter -> org.happy.artist.rmdmia.utilities.HexStringConverter:
    char[] HEX_CHARS -> a
    org.happy.artist.rmdmia.utilities.HexStringConverter hexStringConverter -> b
    java.lang.StringBuilder builder -> c
    int hexLoopCount -> d
    int firstDigit -> e
    int lastDigit -> f
    int hexDec -> g
    19:20:org.happy.artist.rmdmia.utilities.HexStringConverter getHexStringConverterInstance() -> getHexStringConverterInstance
    25:26:java.lang.String stringToHex(java.lang.String) -> stringToHex
    31:37:java.lang.String hexToString(java.lang.String) -> hexToString
    48:59:java.lang.String convertHexToString(char[]) -> convertHexToString
    64:70:java.lang.String asHex(byte[]) -> a
    76:84:char[] bytesToHex(byte[]) -> bytesToHex
    127:145:byte[] hexToBytes(java.lang.String) -> hexToBytes
    154:159:int hexValue(char) -> a
org.happy.artist.rmdmia.utilities.HexToBytes -> org.happy.artist.rmdmia.utilities.HexToBytes:
    48:67:byte[] hexToBytes(java.lang.String) -> hexToBytes
    70:70:boolean isHex(char) -> a
    76:81:int hexValue(char) -> b
    110:135:byte[] hexToBytes(java.lang.String,byte[],int) -> hexToBytes
org.happy.artist.rmdmia.utilities.properties.LinuxSystemProperties -> org.happy.artist.rmdmia.utilities.properties.LinuxSystemProperties:
    com.trinity.ea.util.EAProperties props -> a
    java.lang.String strRulesFileName -> b
    org.happy.artist.rmdmia.utilities.properties.LinuxSystemProperties movementProcessorRegistry -> c
    56:60:org.happy.artist.rmdmia.utilities.properties.LinuxSystemProperties getInstance() -> getInstance
    68:107:boolean writeFile() -> writeFile
    116:141:boolean readPropertiesFile() -> readPropertiesFile
    148:149:void setFileName(java.lang.String) -> setFileName
    154:154:java.lang.String getFileName() -> getFileName
    161:166:boolean put(java.lang.String,java.lang.String) -> put
    174:178:java.lang.String get(java.lang.String) -> get
    186:191:boolean remove(java.lang.String) -> remove
    197:197:com.trinity.ea.util.EAProperties getProperties() -> getProperties
    203:204:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.utilities.ros.bag.BagOutputStream -> org.happy.artist.rmdmia.utilities.ros.bag.BagOutputStream:
    int field_length -> a
    java.lang.StringBuilder hex -> b
    int str_field_length -> c
    java.lang.StringBuilder str_hex -> d
    byte[] str_field_length_bytes -> e
    char[] CHUNK_COMPRESSION_KEY -> f
    char[] CHUNK_SIZE_KEY -> g
    java.lang.StringBuilder chunk_header_sb -> h
    byte[] chunk_size_array -> i
    int CHUNK_COMPRESSION_NONE -> CHUNK_COMPRESSION_NONE
    char[] HEX_CHUNK_COMPRESSION_NONE -> j
    int CHUNK_COMPRESSION_BZ2 -> CHUNK_COMPRESSION_BZ2
    char[] HEX_CHUNK_COMPRESSION_BZ2 -> k
    java.lang.StringBuilder padding_sb -> l
    int padding_length -> m
    byte[] padding_length_bytes -> n
    byte[] field_length_bytes -> o
    char[] HEX_EQUALS -> p
    char[] FIELD_RECORD_TYPE_OP2 -> q
    char[] FIELD_RECORD_TYPE_OP3 -> r
    char[] FIELD_RECORD_TYPE_OP5 -> s
    char[] FIELD_RECORD_TYPE_OP7 -> t
    char[] HEX_CHAR_ARRAY_SPACE -> u
    java.lang.StringBuilder bag_header_sb -> v
    byte[] index_pos_length_array -> w
    byte[] connection_count_array -> x
    char[] INDEX_POS_LENGTH_KEY -> y
    char[] CONN_COUNT_KEY -> z
    char[] CHUNK_COUNT_KEY -> A
    int sb_header_length -> B
    java.lang.StringBuilder message_data_header_sb -> C
    byte[] message_data_time_array -> D
    byte[] message_data_conn_array -> E
    char[] MESSAGE_DATA_TIME_KEY -> F
    char[] MESSAGE_DATA_CONN_KEY -> G
    char[] CONNECTION_CONN_KEY -> H
    char[] CONNECTION_TOPIC_KEY -> I
    java.lang.StringBuilder connection_header_sb -> J
    byte[] conn_array -> K
    char[] bag_format_version -> L
    java.io.OutputStream os -> M
    java.lang.StringBuilder sb -> N
    char[] ZERO_VALUE_INT_BYTES -> O
    char[] HEX_CHARS -> P
    118:153:void start(java.io.OutputStream,int) -> start
    159:160:void end() -> end
    166:191:void addConnectionHeader(char[],int,char[]) -> addConnectionHeader
    197:231:void addMessage(long,int,char[]) -> addMessage
    237:278:java.lang.String createBagHeader(long,int,int) -> a
    307:340:java.lang.String createChunkHeader$13d12155(int) -> a
    346:360:java.lang.String createHexField(char[],char[]) -> a
    366:380:java.lang.String createHexField(char[],java.lang.String) -> a
    400:408:java.lang.String bytesToHex(byte[]) -> a
    413:417:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.utilities.ros.bag.BagRandomAccessFile -> org.happy.artist.rmdmia.utilities.ros.bag.BagRandomAccessFile:
    org.happy.artist.rmdmia.utilities.ros.bag.BagRandomAccessFile singleton -> a
    int field_length -> b
    java.lang.StringBuilder hex -> c
    int str_field_length -> d
    java.lang.StringBuilder str_hex -> e
    byte[] str_field_length_bytes -> f
    char[] CHUNK_COMPRESSION_KEY -> g
    char[] CHUNK_SIZE_KEY -> h
    java.lang.StringBuilder chunk_header_sb -> i
    byte[] chunk_size_array -> j
    int CHUNK_COMPRESSION_NONE -> CHUNK_COMPRESSION_NONE
    char[] HEX_CHUNK_COMPRESSION_NONE -> k
    int CHUNK_COMPRESSION_BZ2 -> CHUNK_COMPRESSION_BZ2
    char[] HEX_CHUNK_COMPRESSION_BZ2 -> l
    java.lang.StringBuilder padding_sb -> m
    int padding_length -> n
    byte[] padding_length_bytes -> o
    byte[] field_length_bytes -> p
    char[] HEX_EQUALS -> q
    char[] FIELD_RECORD_TYPE_OP2 -> r
    char[] FIELD_RECORD_TYPE_OP3 -> s
    char[] FIELD_RECORD_TYPE_OP5 -> t
    char[] FIELD_RECORD_TYPE_OP7 -> u
    char[] HEX_CHAR_ARRAY_SPACE -> v
    java.lang.StringBuilder bag_header_sb -> w
    byte[] index_pos_length_array -> x
    byte[] connection_count_array -> y
    char[] INDEX_POS_LENGTH_KEY -> z
    char[] CONN_COUNT_KEY -> A
    char[] CHUNK_COUNT_KEY -> B
    int sb_header_length -> C
    java.lang.StringBuilder message_data_header_sb -> D
    byte[] message_data_time_array -> E
    byte[] message_data_conn_array -> F
    char[] MESSAGE_DATA_TIME_KEY -> G
    char[] MESSAGE_DATA_CONN_KEY -> H
    char[] CONNECTION_CONN_KEY -> I
    char[] CONNECTION_TOPIC_KEY -> J
    java.lang.StringBuilder connection_header_sb -> K
    byte[] conn_array -> L
    char[] bag_format_version -> M
    java.lang.StringBuilder sb -> N
    char[] ZERO_VALUE_INT_BYTES -> O
    java.io.RandomAccessFile file -> P
    char[] HEX_CHARS -> Q
    118:153:void start(java.lang.String,int) -> start
    159:160:void end() -> end
    165:169:org.happy.artist.rmdmia.utilities.ros.bag.BagRandomAccessFile getInstance() -> getInstance
    176:201:void addConnectionHeader(char[],int,char[]) -> addConnectionHeader
    207:241:void addMessage(long,int,char[]) -> addMessage
    247:288:java.lang.String createBagHeader(long,int,int) -> a
    317:350:java.lang.String createChunkHeader$13d12155(int) -> a
    376:390:java.lang.String createHexField(char[],java.lang.String) -> a
    410:418:java.lang.String bytesToHex(byte[]) -> a
    423:427:void main(java.lang.String[]) -> main
org.happy.artist.rmdmia.utilities.ros.bag.ByteArrayRecordQueue -> org.happy.artist.rmdmia.utilities.ros.bag.ByteArrayRecordQueue:
    int READ_BLOCKS -> a
    org.happy.artist.rmdmia.utilities.ros.bag.ByteArrayRecordQueue$Data[] queue -> b
    int recycleCount -> c
    boolean is_running -> d
    int current_position -> e
    int queue_count -> f
    boolean[] availability_array -> g
    int queue_length_divisor -> h
    int refresh_ms -> i
    72:166:void add(byte[]) -> add
    234:287:void run() -> run
    void process(byte[]) -> process
    295:297:void halt() -> halt
    301:310:void recycle() -> recycle
    314:318:void shutdown() -> shutdown
org.happy.artist.rmdmia.utilities.ros.bag.ByteArrayRecordQueue$Data -> org.happy.artist.rmdmia.utilities.ros.bag.ByteArrayRecordQueue$Data:
    byte[] bytes -> bytes
    325:326:void recycle() -> recycle
org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter -> org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter:
    org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter singleton -> a
    int field_length -> b
    java.lang.StringBuilder hex -> c
    int str_field_length -> d
    java.lang.StringBuilder str_hex -> e
    byte[] str_field_length_bytes -> f
    char[] CHUNK_COMPRESSION_KEY -> g
    char[] CHUNK_SIZE_KEY -> h
    java.lang.StringBuilder chunk_header_sb -> i
    byte[] chunk_size_array -> j
    int CHUNK_COMPRESSION_NONE -> CHUNK_COMPRESSION_NONE
    char[] HEX_CHUNK_COMPRESSION_NONE -> k
    int CHUNK_COMPRESSION_BZ2 -> CHUNK_COMPRESSION_BZ2
    char[] HEX_CHUNK_COMPRESSION_BZ2 -> l
    java.lang.StringBuilder padding_sb -> m
    int padding_length -> n
    byte[] padding_length_bytes -> o
    byte[] field_length_bytes -> p
    char[] HEX_EQUALS -> q
    char[] FIELD_RECORD_TYPE_OP2 -> r
    char[] FIELD_RECORD_TYPE_OP3 -> s
    char[] FIELD_RECORD_TYPE_OP5 -> t
    char[] FIELD_RECORD_TYPE_OP7 -> u
    char[] HEX_CHAR_ARRAY_SPACE -> v
    java.lang.StringBuilder bag_header_sb -> w
    byte[] index_pos_length_array -> x
    byte[] connection_count_array -> y
    char[] INDEX_POS_LENGTH_KEY -> z
    char[] CONN_COUNT_KEY -> A
    char[] CHUNK_COUNT_KEY -> B
    int sb_header_length -> C
    java.lang.StringBuilder message_data_header_sb -> D
    byte[] message_data_time_array -> E
    byte[] message_data_conn_array -> F
    char[] MESSAGE_DATA_TIME_KEY -> G
    char[] MESSAGE_DATA_CONN_KEY -> H
    char[] CONNECTION_CONN_KEY -> I
    char[] CONNECTION_TOPIC_KEY -> J
    java.lang.StringBuilder connection_header_sb -> K
    byte[] conn_array -> L
    char[] bag_format_version -> M
    java.lang.StringBuilder sb -> N
    char[] ZERO_VALUE_INT_BYTES -> O
    java.io.File file -> P
    java.io.FileOutputStream out -> Q
    char[] HEX_CHARS -> R
    132:181:void start(java.lang.String,int) -> start
    188:202:void end() -> end
    207:211:org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagQueueFileWriter getInstance() -> getInstance
    218:243:void addConnectionHeader(char[],int,char[]) -> addConnectionHeader
    249:283:void addMessage(long,int,char[]) -> addMessage
    289:330:java.lang.String createBagHeader(long,int,int) -> a
    359:392:java.lang.String createChunkHeader$13d12155(int) -> a
    418:432:java.lang.String createHexField(char[],java.lang.String) -> a
    452:460:java.lang.String bytesToHex(byte[]) -> a
    465:469:void main(java.lang.String[]) -> main
    476:483:void process(byte[]) -> process
org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagRandomAccessFile -> org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagRandomAccessFile:
    org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagRandomAccessFile singleton -> a
    int field_length -> b
    java.lang.StringBuilder hex -> c
    int str_field_length -> d
    java.lang.StringBuilder str_hex -> e
    byte[] str_field_length_bytes -> f
    char[] CHUNK_COMPRESSION_KEY -> g
    char[] CHUNK_SIZE_KEY -> h
    java.lang.StringBuilder chunk_header_sb -> i
    byte[] chunk_size_array -> j
    int CHUNK_COMPRESSION_NONE -> CHUNK_COMPRESSION_NONE
    char[] HEX_CHUNK_COMPRESSION_NONE -> k
    int CHUNK_COMPRESSION_BZ2 -> CHUNK_COMPRESSION_BZ2
    char[] HEX_CHUNK_COMPRESSION_BZ2 -> l
    java.lang.StringBuilder padding_sb -> m
    int padding_length -> n
    byte[] padding_length_bytes -> o
    byte[] field_length_bytes -> p
    char[] HEX_EQUALS -> q
    char[] FIELD_RECORD_TYPE_OP2 -> r
    char[] FIELD_RECORD_TYPE_OP3 -> s
    char[] FIELD_RECORD_TYPE_OP5 -> t
    char[] FIELD_RECORD_TYPE_OP7 -> u
    char[] HEX_CHAR_ARRAY_SPACE -> v
    java.lang.StringBuilder bag_header_sb -> w
    byte[] index_pos_length_array -> x
    byte[] connection_count_array -> y
    char[] INDEX_POS_LENGTH_KEY -> z
    char[] CONN_COUNT_KEY -> A
    char[] CHUNK_COUNT_KEY -> B
    int sb_header_length -> C
    java.lang.StringBuilder message_data_header_sb -> D
    byte[] message_data_time_array -> E
    byte[] message_data_conn_array -> F
    char[] MESSAGE_DATA_TIME_KEY -> G
    char[] MESSAGE_DATA_CONN_KEY -> H
    char[] CONNECTION_CONN_KEY -> I
    char[] CONNECTION_TOPIC_KEY -> J
    java.lang.StringBuilder connection_header_sb -> K
    byte[] conn_array -> L
    char[] bag_format_version -> M
    java.lang.StringBuilder sb -> N
    char[] ZERO_VALUE_INT_BYTES -> O
    java.io.RandomAccessFile file -> P
    char[] HEX_CHARS -> Q
    118:153:void start(java.lang.String,int) -> start
    159:160:void end() -> end
    165:169:org.happy.artist.rmdmia.utilities.ros.bag.RMDMIABagRandomAccessFile getInstance() -> getInstance
    176:201:void addConnectionHeader(char[],int,char[]) -> addConnectionHeader
    206:244:void addMessage(long,int,char[]) -> addMessage
    250:291:java.lang.String createBagHeader(long,int,int) -> a
    320:353:java.lang.String createChunkHeader$13d12155(int) -> a
    379:393:java.lang.String createHexField(char[],java.lang.String) -> a
    413:421:java.lang.String bytesToHex(byte[]) -> a
    426:430:void main(java.lang.String[]) -> main
